{"version":3,"sources":["Data/Group 1.png","Data/ABClinic.jpg","Data/requestList.js","Data/districtList.js","Data/appointmentList.js","Data/userList.js","components/PageHeader.js","components/PageFooter.js","components/Common/CommonFunction.js","components/AccountManagement/AccountListViewItem.js","components/AccountManagement/AccountListView.js","components/AccountManagement/AccountCreateView.js","components/AccountManagement/AccountView.js","components/AccountManagement/AccountChangePasswordView.js","components/Appointment/AppointmentListViewItem.js","components/Appointment/AppointmentListView.js","components/Appointment/AppointmentView.js","components/Appointment/AppointmentRejectView.js","components/Article/ArticleListViewItem.js","components/Article/ArticleListView.js","components/Article/ArticleAddView.js","components/Article/ArticleView.js","components/Authentication/LoginView.js","components/Request/RequestListViewItem.js","components/Request/RequestListView.js","components/Request/RequestTestViewItem.js","components/Request/RequestTestCategoryItem.js","components/Request/RequestView.js","components/Request/RequestLostSampleView.js","components/Request/RequestUpdateResultView.js","components/Test/TestListItem.js","components/Test/TestUpdateView.js","components/Common/LoadingView.js","components/ListScreen.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","ListScreen","props","state","requestId","editProfile","bind","logOut","searchRequest","handleChange","this","userInfo","account","id","phoneNumber","name","dob","address","password","active","email","role","gender","image","townCode","districtCode","changeShowView","setSelectedAccount","event","target","value","setState","ImageBackground","style","styles","headerContainer","resizeMode","View","leftArea","Image","imageIcon","source","require","leftContainer","titleContainer","Text","fontSize","fontWeight","color","hotlineContainer","middleArea","TextInput","searchInputContainer","placeholder","onChange","onSubmitEditing","rightArea","rightContainer","TouchableOpacity","onPress","width","height","uri","nameContainer","Component","WIDTH","Dimensions","get","StyleSheet","create","flexDirection","alignItems","justifyContent","backgroundColor","padding","marginTop","paddingLeft","marginBottom","borderWidth","borderRadius","headerHight","footerContainer","textContainer","middleContainer","paddingRight","alignSelf","convertDateTimeToDate","inputString","substring","convertDateTimeToTime","convertDateToDateTime","inputDate","getRoleName","getStateName","status","getAppointmentStateName","AccountListViewItem","onAccountPress","accountId","accountPhoneNumber","accountName","accountDob","accountAddress","accountPassword","accountActive","accountEmail","accountRole","accountGender","accountImageUrl","accountTownCode","accountDistrictCode","accountListItem","accountNameContainer","accountPhoneContainer","accountRoleContainer","paddingBottom","margin","marginRight","AccountListScreen","Button1Selected","Button2Selected","Button3Selected","Button4Selected","districtsList","districtList","accountSelected","userList","dataChanged","menuButtonPress","getAccountShowList","result","index","length","push","button","previousState","Button5Selected","prevProps","prevState","articleListArea","accountListTopMenuArea","accountListTopMenuContainer","topMenuTextInput","createNewAccountButton","topMenuButton","roleSelectedColor","topMenuText","articleListFlatListArea","articleListFlatListTitleArea","articleListFlatListTitleContainer","articleListTitleNameContainer","articleListTitleText","articleListTitlePhoneContainer","articleListTitleRoleContainer","FlatList","articleListFlatList","contentContainerStyle","showsVerticalScrollIndicator","data","extraData","keyExtractor","item","toString","renderItem","flex","paddingTop","TestListView","selectPicture","a","async","ImagePicker","console","log","cancelled","callApiUploadImage","accountRePassword","townList","listTown","districtSelected","townSelected","year","Date","getFullYear","month","getMonth","day","getDate","accountImage","error","errorList","onDistrictChange","createNumberPickerList","getNumberOfDayInMonth","createAccount","districtId","getFebDay","start","end","startToEnd","i","Picker","Item","label","parseInt","checkValid","callApiCreateAccount","fetch","getApiUrl","method","headers","Accept","Authorization","token","body","JSON","stringify","getDob","then","res","json","success","message","_data","accountCreateViewArea","accountCreateMenuArea","rowText","accountCreateArea","accountCreateContainer","accountCreateRowContainer","rowTextInput","selectedValue","accountTypeDropDown","onValueChange","itemValue","itemIndex","secureTextEntry","map","district","districtName","town","townName","addImageButton","imagePreviewArea","imagePreview","rowTextError","accountCreateConfirmButton","createTestButton","marginLeft","accountListFlatListArea","accountListFlatList","updateAccountInformation","resetPassword","checkCurrentUser","checkAdmin","changePassword","userProcessingID","callApiUpdateAccountInfo","updateUserInfo","rowTextLong","buttonArea","accountOldPassword","callApiChangePassword","url","oldPassword","newPassword","AppointmentListView","onAppointmentPress","appointment","appointmentId","appointmentCreatedTime","customerName","customerPhoneNumber","customerDOB","appointmentMeetingTime","appointmentStatus","setSelectedAppointment","appointmentListItem","appointmentTextContainer","appointmentListFirstColumnContainer","appointmentListSecondColumnContainer","borderStyle","statusSelected","testsList","appointmentList","getAppointmentShowList","requestDistrictID","appointment_status","appointmentListArea","appointmentListTopMenuArea","appointmentListTopMenuContainer","appointmentTypeDropdown","appointmentListFlatListArea","appointmentListFlatList","appointment_id","appointment_createdTime","appointment_customerName","appointment_phoneNumber","appointment_DOB","appointment_meetingTime","AppointmentView","onAccept","onReject","_status","coordinatorID","note","callApiAcceptAppointment","appointmentViewArea","appointmentTopMenuArea","appointmentArea","appointmentContainer","appointmentRowContainer","rowFirstContainer","rowSecondContainer","AppointmentLostSampleView","reason","rejectAppointment","callApiRejectAppointment","multiline","numberOfLines","appointmentConfirmButton","appointmentTypeDropDown","ArticleListViewItem","onArticlePress","article","articleId","articleTitle","articleContent","articleShortContent","articleImageUrl","userId","articleCreatedTime","creatorName","setSelectedArticle","articleListItem","articleImageContainer","articleImage","articleTextContainer","articleTextContentContainer","articleTitleContainer","articleCreateTimeContainer","articleShortContentContainer","textAlign","articleTextCreatorNameContainer","articleCreatorNameContainer","ArticleListScreen","articleList","onAddArticlePress","Alert","alert","text","cancelable","articleListTopMenuArea","createNewArticleButton","tittle","shortContent","content","userID","createdTime","ArticleAddView","imageResultUri","createArticle","callApiCreateArticle","articleAddViewArea","articleAddTopMenuArea","articleAddArea","articleAddContainer","articleAddRowContainer","articleAddConfirmButton","articleTypeDropDown","ArticleView","imageUri","imageType","articleViewArea","articleArea","articleContainer","articleRowContainer","rowImage","articleTopMenuArea","Login","callApiLogin","loginSuccess","loginViewArea","rowContainer","login","loginButton","RequestListPendingItem","onRequestPress","testList","request","requestCreatedTime","requestAddress","requestDistrictName","requestTownName","requestMeetingTime","nurseName","nurseId","coordinatorId","coordinatorName","lsSelectedTest","requestAmount","requestStatus","requestTestVersion","setSelectedRequest","checkVersion","changeToRequestViewScreen","testVersion","lsTests","requestListItem","requestListTextContainer","requestListFirstColumnContainer","requestListSecondColumnContainer","RequestListView","requestList","requestShowList","requestCount","getRequestShowList","requestListArea","requestListTopMenuArea","requestListTopMenuContainer","requestTypeDropdown","requestListFlatListArea","requestListFlatList","requestID","nurseID","versionOfTest","RequestTestViewItem","testItem","testName","testPrice","_price","price","convertMoney","RequestTestCategoryItem","visible","isVisible","test","forEach","isSelected","testID","countHide","testCategoryItem","testCategoryNameContainer","categoryName","TestListAreaScrollView","scrollEnabled","math","borderColor","RequestView","getLeftButtonName","getRightButtonName","onLeftButtonPress","onRightButtonPress","findIndex","onLostSample","onTakingSample","onUpdateResult","requestViewArea","requestTopMenuArea","requestArea","requestContainer","requestRowContainer","rowFlatList","testTypeName","listTest","RequestLostSampleView","lostSample","callApiLostSample","requestConfirmButton","requestTypeDropDown","RequestUpdateResultView","imageUriList","requestTitle","requestShortContent","requestContent","completeUpdateResult","callApiSetResultImage","tempList","imageList","listImage","callApiUpdateRequest","requestAddViewArea","requestAddTopMenuArea","requestAddArea","requestAddContainer","requestAddConfirmButton","updatePrice","testId","testListItem","testTextContainer","testListFirstColumnContainer","testListSecondColumnContainer","TestUpdateView","callApiUpdateVersion","testListTemp","indexTest","creatorID","lsInputTest","callApiGetVersionList","versionSelected","versionCreatedTime","versionCreatorName","testTypeSelected","testTypeSelectedForCreate","testListApi","versionList","newTestId","createTest","getTestList","setSelectedVersion","versionID","callApiGetTestList","testTypeID","newTest","newPrice","testType","versionId","version","testUpdateViewArea","testUpdateMenuArea","versionDropdown","key","testUpdateConfirmButton","testUpdateArea","testUpdateContainer","testUpdateRowContainer","testTypeDropDown","testListFlatListArea","testListFlatList","testTypeId","textArea","callApiRequestList","requestListApi","callApiAppointmentList","appointmentListApi","callApiArticleList","articleListApi","callApiUserList","userListApi","callApiTestList","callApiDistrictList","showView","logIn","selectedRequest","selectedAppointment","selectedArticle","selectedAccount","newView","_article","_request","_appointment","_account","_userInfo","_token","setTimeout","listAreaContainer","topMenu","parseFloat","App","container","navigator","window","addEventListener","serviceWorker","register","scope","info","catch"],"mappings":"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","file":"static/js/app.b1b2bd4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Group 1.656244df.png\";","module.exports = __webpack_public_path__ + \"static/media/ABClinic.013acc21.jpg\";","var requestList = [\r\n    {\r\n        \"requestID\":\"1\",\r\n        \"customerID\":\"2\",\r\n        \"customerName\":\"Phạm Lê Quỳnh Lam\",\r\n        \"customerPhoneNumber\":\"0111111111\",\r\n        \"customerDOB\":\"1998-12-13T00:00:00.000+0000\",\r\n        \"requestAddress\":\"Số 123 ngõ 4 Phường Yên Phụ Quận Hai Bà Trưng\",\r\n        \"requestMeetingTime\":\"2020-03-15T21:04:27.000+0000\",\r\n        \"requestStatus\":\"closed\",\r\n        \"requestCreatedTime\":\"2020-03-23T10:17:18.000+0000\",\r\n        \"nurseID\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"nurseName\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"coordinatorID\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"coordinatorName\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"requestAmount\":\"700000\",\r\n        \"requestNote\":\"Customer số 1 đã huỷ\",\r\n        \"lsSelectedTest\":[\"1\",\"2\",\"3\",\"4\",\"5\"]\r\n    },\r\n    {\r\n        \"requestID\":\"2\",\r\n        \"customerID\":\"2\",\r\n        \"customerName\":\"Phạm Lê Quỳnh Lam\",\r\n        \"customerPhoneNumber\":\"0111111111\",\r\n        \"customerDOB\":\"1998-12-13T00:00:00.000+0000\",\r\n        \"requestAddress\":\"Số 123 ngõ 4 Phường Yên Phụ Quận Hai Bà Trưng\",\r\n        \"requestMeetingTime\":\"2020-03-15T21:04:27.000+0000\",\r\n        \"requestStatus\":\"closed\",\r\n        \"requestCreatedTime\":\"2020-03-23T10:17:18.000+0000\",\r\n        \"nurseID\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"nurseName\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"coordinatorID\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"coordinatorName\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"requestAmount\":\"700000\",\r\n        \"requestNote\":\"Customer số 1 đã huỷ\",\r\n        \"lsSelectedTest\":[\"1\",\"2\",\"3\",\"4\",\"5\"]\r\n    },\r\n]\r\n\r\n\r\nmodule.exports = requestList;\r\n","var districtList = [\r\n                {\r\n                    \"districtCode\": \"D0\",\r\n                    \"districtName\": \"Default\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D1\",\r\n                    \"districtName\": \"Quận Ba Đình\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D10\",\r\n                    \"districtName\": \"Quận Bắc Từ Liêm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D11\",\r\n                    \"districtName\": \"Huyện Thanh Trì\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D12\",\r\n                    \"districtName\": \"Huyện Gia Lâm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D13\",\r\n                    \"districtName\": \"Huyện Đông Anh\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D14\",\r\n                    \"districtName\": \"Huyện Sóc Sơn\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D15\",\r\n                    \"districtName\": \"Quận Hà Đông\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D16\",\r\n                    \"districtName\": \"Thị xã Sơn Tây\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D17\",\r\n                    \"districtName\": \"Huyện Ba Vì\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D18\",\r\n                    \"districtName\": \"Huyện Phúc Thọ\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D19\",\r\n                    \"districtName\": \"Huyện Thạch Thất\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D2\",\r\n                    \"districtName\": \"Quận Hoàn Kiếm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D20\",\r\n                    \"districtName\": \"Huyện Quốc Oai\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D21\",\r\n                    \"districtName\": \"Huyện Chương Mỹ\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D22\",\r\n                    \"districtName\": \"Huyện Đan Phượng\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D23\",\r\n                    \"districtName\": \"Huyện Hoài Đức\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D24\",\r\n                    \"districtName\": \"Huyện Thanh Oai\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D25\",\r\n                    \"districtName\": \"Huyện Mỹ Đức\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D26\",\r\n                    \"districtName\": \"Huyện Ứng Hòa\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D27\",\r\n                    \"districtName\": \"Huyện Thường Tín\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D28\",\r\n                    \"districtName\": \"Huyện Phú Xuyên\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D29\",\r\n                    \"districtName\": \"Huyện Mê Linh\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D3\",\r\n                    \"districtName\": \"Quận Hai Bà Trưng\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D30\",\r\n                    \"districtName\": \"Quận Nam Từ Liêm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D31\",\r\n                    \"districtName\": \"Huyện Từ Liêm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D4\",\r\n                    \"districtName\": \"Quận Đống Đa\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D5\",\r\n                    \"districtName\": \"Quận Tây Hồ\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D6\",\r\n                    \"districtName\": \"Quận Cầu Giấy\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D7\",\r\n                    \"districtName\": \"Quận Thanh Xuân\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D8\",\r\n                    \"districtName\": \"Quận Hoàng Mai\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D9\",\r\n                    \"districtName\": \"Quận Long Biên\"\r\n                }\r\n                ]\r\n\r\n\r\nmodule.exports = districtList;\r\n","var appointmentList = [\r\n    {\r\n        \"appointment_id\":3,\r\n        \"appointment_customerName\":\"Phạm Duy Bình\",\r\n        \"appointment_phoneNumber\":\"0222222222\",\r\n        \"appointment_DOB\":\"1998-02-15T00:00:00.000+0000\",\r\n        \"appointment_meetingTime\":\"2020-12-21T17:59:00.000+0000\",\r\n        \"appointment_status\":\"pending\",\r\n        \"appointment_note\":null,\r\n        \"appointment_createdTime\":\"2020-03-17T06:20:04.000+0000\"\r\n    },\r\n    {\r\n        \"appointment_id\":4,\r\n        \"appointment_customerName\":\"Phạm Duy Bình\",\r\n        \"appointment_phoneNumber\":\"0222222222\",\r\n        \"appointment_DOB\":\"1998-02-15T00:00:00.000+0000\",\r\n        \"appointment_meetingTime\":\"2020-12-21T17:59:00.000+0000\",\r\n        \"appointment_status\":\"accepted\",\r\n        \"appointment_note\":null,\r\n        \"appointment_createdTime\":\"2020-03-17T06:20:04.000+0000\"\r\n    }\r\n]\r\n\r\n\r\nmodule.exports = appointmentList;\r\n","var userList = [\r\n    {\r\n        \"id\":1,\r\n        \"phoneNumber\":\"0000000000\",\r\n        \"name\":\"Lam Phan\",\r\n        \"dob\":\"1970-01-01T00:00:00.000+0000\",\r\n        \"address\":\"Default-Address\",\r\n        \"password\":\"$2a$10$Rqs8uzm/mZzJHWABOeOi7OuqyPsptBgWNL5k7Cf9bDnWpRL4gSfbW\",\r\n        \"active\":1,\r\n        \"email\":\"medtest.default@gmail.com\",\r\n        \"role\":\"COORDINATOR\",\r\n        \"gender\":0,\r\n        \"image\":\"https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png\",\r\n        \"townCode\":\"T0\",\r\n        \"districtCode\":\"D0\"\r\n    },\r\n    {\r\n        \"id\":2,\r\n        \"phoneNumber\":\"0000000001\",\r\n        \"name\":\"DefaultCoordinator\",\r\n        \"dob\":\"1970-01-01T00:00:00.000+0000\",\r\n        \"address\":\"Default-Address\",\r\n        \"password\":\"$2a$10$Rqs8uzm/mZzJHWABOeOi7OuqyPsptBgWNL5k7Cf9bDnWpRL4gSfbW\",\r\n        \"active\":1,\r\n        \"email\":\"medtest.default@gmail.com\",\r\n        \"role\":\"ADMIN\",\r\n        \"gender\":0,\r\n        \"image\":\"https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png\",\r\n        \"townCode\":\"T0\",\r\n        \"districtCode\":\"D0\"\r\n    },\r\n]\r\n\r\n\r\nmodule.exports = userList;\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, ImageBackground, Picker, TouchableOpacity, Dimensions } from 'react-native';\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            requestId: ''\r\n        }\r\n        this.editProfile = this.editProfile.bind(this)\r\n        this.logOut = this.logOut.bind(this)\r\n        this.searchRequest = this.searchRequest.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    editProfile(){\r\n        if (this.props.userInfo){\r\n            const account= { \r\n            'accountId':this.props.userInfo.id, \r\n            'accountPhoneNumber':this.props.userInfo.phoneNumber,                      \r\n            'accountName':this.props.userInfo.name,\r\n            'accountDob':this.props.userInfo.dob,\r\n            'accountAddress':this.props.userInfo.address,\r\n            'accountPassword':this.props.userInfo.password,\r\n            'accountActive':this.props.userInfo.active,\r\n            'accountEmail':this.props.userInfo.email,\r\n            'accountRole':this.props.userInfo.role,\r\n            'accountGender':this.props.userInfo.gender,\r\n            'accountImageUrl':this.props.userInfo.image,\r\n            'accountTownCode':this.props.userInfo.townCode,\r\n            'accountDistrictCode':this.props.userInfo.districtCode,\r\n            }\r\n            this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n            this.props.changeShowView?this.props.setSelectedAccount(account):null\r\n        }\r\n    }\r\n\r\n    logOut(){\r\n        this.props.changeShowView?this.props.logOut():null\r\n    }\r\n\r\n    searchRequest(){\r\n        this.props.userInfo?this.props.searchRequest(this.state.requestId):null\r\n    }\r\n\r\n    \r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.headerContainer} \r\n            // source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.leftArea}>\r\n                <Image \r\n                    style={styles.imageIcon}\r\n                    source={require('./../Data/Group 1.png')}>\r\n                </Image>\r\n                <View style={styles.leftContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:25, fontWeight:'bold',color:'white'}}>MedTest</Text>\r\n                    </View>\r\n                    <View style={styles.hotlineContainer}>\r\n                        <Text style={{fontSize:14}}>Hotline: 1900561252</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.middleArea}>\r\n                {this.props.userInfo?\r\n                <TextInput style={styles.searchInputContainer}\r\n                placeholder={'Tìm xét nghiệm'}\r\n                name=\"requestId\"\r\n                onChange={this.handleChange}\r\n                value={this.state.requestId}\r\n                onSubmitEditing={() => this.searchRequest()}\r\n                >                \r\n                </TextInput>\r\n                :<View/>\r\n                }\r\n            </View>\r\n            <View style={styles.rightArea}>\r\n                {this.props.userInfo?\r\n                <View style={styles.rightContainer}>\r\n                    <TouchableOpacity style={{}} onPress={() => this.editProfile()}>\r\n                        <Image \r\n                            style={{\r\n                                width:100,\r\n                                height:100,\r\n                            }}\r\n                            source={{uri:this.props.userInfo?this.props.userInfo.image:''}}>\r\n                            \r\n                        </Image>\r\n                    </TouchableOpacity>\r\n                    <View style={styles.nameContainer} >\r\n                        <Text style={{fontSize:14,color:'white'}}>{this.props.userInfo?this.props.userInfo.name:''}</Text>\r\n                    </View>\r\n                    <TouchableOpacity style={styles.nameContainer} onPress={() => this.logOut()}>\r\n                        <Text style={{fontSize:14,color:'white'}}>{this.props.userInfo?'Đăng xuất':''} </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                :null}\r\n            </View>\r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst headerHight=185\r\nconst WIDTH = Dimensions.get('window').width\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        height:headerHight,\r\n        width: WIDTH,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#25345D',\r\n\r\n    },\r\n    leftArea:{\r\n        height:headerHight,\r\n        width:300,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        padding:20,\r\n        \r\n    },\r\n    imageIcon:{\r\n        width:100,\r\n        height:100,\r\n        marginTop:5\r\n    },\r\n    leftContainer:{\r\n        height:headerHight,\r\n        width:180,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',    \r\n        backgroundColor:'',\r\n        paddingLeft:20,\r\n\r\n    },\r\n    titleContainer:{\r\n        width:100,\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        backgroundColor:'',\r\n        marginBottom:10,\r\n    },\r\n    hotlineContainer:{\r\n        height:35,\r\n        width:150,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        marginTop:10,\r\n    },\r\n    middleArea:{\r\n        height:headerHight,\r\n        // flex:1,\r\n        width: WIDTH-600,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:''\r\n    },\r\n    searchInputContainer:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:25,\r\n    },\r\n    rightArea:{\r\n        height:headerHight,\r\n        width:300,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:'',\r\n    },\r\n    rightContainer:{\r\n        height:headerHight-10,\r\n        width:200,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        padding:0,\r\n        backgroundColor:'',\r\n    },\r\n    nameContainer:{\r\n        height:30,\r\n        width:140,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, ImageBackground, Picker, TouchableOpacity, Dimensions } from 'react-native';\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.footerContainer} \r\n            // source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.leftArea}>                \r\n                <View style={styles.leftContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>TRỤ SỞ HÀ NỘI</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>159 B Lê Thanh Nghị, Hai Bà Trưng, Hà Nội</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.middleArea}>\r\n                <View style={styles.middleContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>CHỊU TRÁCH NHIỆM QUẢN LÝ NỘI DUNG</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Bác sĩ Nguyễn Trần Kiên</Text>\r\n                    </View>\r\n                    <View style={[styles.titleContainer,{marginTop:15}]}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>HỢP TÁC TRUYỀN THÔNG</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Liên hệ: 096 159 1593</Text>\r\n                    </View>\r\n                    <View style={[styles.titleContainer,{marginTop:15}]}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>LIÊN HỆ QUẢNG CÁO</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>medtest.default@gmail.com</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.rightArea}>\r\n                \r\n                <View style={styles.rightContainer}>\r\n                    <Image \r\n                        style={styles.imageIcon}\r\n                        source={require('./../Data/ABClinic.jpg')}>\r\n                    </Image>\r\n                    {/* <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:14, fontWeight:'',color:'white'}}>© Copyright 2007 - 2020 – </Text>\r\n                        <Text style={{fontSize:14, fontWeight:'bold',color:'white'}}>CÔNG TY CỔ PHẦN VCCORP</Text>\r\n                    </View> */}\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Tầng 17, 19, 20, 21 Tòa nhà Center Building - Hapulico Complex, Số 1 Nguyễn Huy Tưởng, Thanh Xuân, Hà Nội.</Text>\r\n                    </View>\r\n                    {/* <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Giấy phép số 2215/GP-TTĐT do Sở Thông tin và Truyền thông Hà Nội cấp ngày 10 tháng 4 năm 2019</Text>\r\n                    </View> */}\r\n                </View>\r\n                \r\n            </View>\r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst footerHeight=200\r\nconst WIDTH = Dimensions.get('window').width\r\n\r\nconst styles = StyleSheet.create({\r\n    footerContainer: {\r\n        height:footerHeight,\r\n        width: WIDTH,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#25345D',\r\n    },\r\n    leftArea:{\r\n        height:footerHeight,\r\n        width:500,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        padding:20,\r\n    },\r\n    leftContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        paddingLeft:100,\r\n        paddingRight:50,\r\n\r\n    },\r\n    middleArea:{\r\n        height:footerHeight,\r\n        width: 500,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        padding:20,\r\n        backgroundColor:''\r\n    },\r\n    middleContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        paddingLeft:100,\r\n        paddingRight:100,\r\n    },\r\n    searchInputContainer:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:25,\r\n    },\r\n    rightArea:{\r\n        height:footerHeight,\r\n        width:500,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:'',\r\n    },\r\n    rightContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start', \r\n        paddingLeft:50,\r\n        paddingRight:100,\r\n        backgroundColor:'',\r\n    },\r\n    nameContainer:{\r\n        height:30,\r\n        width:140,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    },\r\n    imageIcon:{\r\n        width:50,\r\n        height:50,\r\n        marginTop:5\r\n    },\r\n    titleContainer:{\r\n        height:20,\r\n        width:'100%',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        backgroundColor:''\r\n    },\r\n    textContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        marginTop:8,\r\n    },\r\n});\r\n","\r\nexport function convertDateTimeToDate(inputString){\r\n    if (inputString == null ) return ''\r\n    return inputString.substring(8,10)+'-'+inputString.substring(5,7)+'-'+inputString.substring(0,4);\r\n}\r\n\r\nexport function convertDateTimeToTime(inputString){\r\n    if (inputString == null ) return ''\r\n    return inputString.substring(11,13)+':'+inputString.substring(14,16);\r\n}\r\n\r\nexport function convertDateAndTimeToDateTime(inputDate,inputTime){\r\n    return inputDate.substring(6,10)+'-'+inputDate.substring(3,5)+'-'+inputDate.substring(0,2)+'T'+inputTime+':00.000+0000'\r\n}\r\n\r\nexport function convertDateToDateTime(inputDate){\r\n    return inputDate.substring(6,10)+'-'+inputDate.substring(3,5)+'-'+inputDate.substring(0,2)+'T00:00:00.000+0000'\r\n}\r\n\r\nexport function getApiUrl(){\r\n    // return \"http://192.168.1.17:8080\";\r\n    return \"https://medtest-backend.herokuapp.com\";\r\n}\r\n\r\nexport function getRoleName(role){\r\n    switch (role) {\r\n        case 'CUSTOMER':\r\n            return 'Khách hàng';\r\n            break;\r\n        case 'NURSE':\r\n            return 'Y tá';\r\n            break;\r\n        case 'COORDINATOR':\r\n            return 'Điều phối viên'\r\n            break;\r\n        case 'ADMIN':\r\n            return 'Quản trị hệ thống'\r\n            break;\r\n        }   \r\n    }\r\n\r\n\r\nexport function convertMoney(_price){\r\n    let price = _price.toString()\r\n    let index = price.length -1\r\n    let result = ''\r\n    while (index >= 3) {\r\n        // console.log(price+\": \"+price.substring(index-2,index+1)+', '+index)\r\n        result = '.'+price.substring(index-2,index+1)+result\r\n        index-=3\r\n    }\r\n    result = price.substring(0,index+1)+result\r\n    return result\r\n}\r\n\r\nexport function getStateName(status){\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'Đang đợi y tá nhận đơn';\r\n            break;\r\n        case 'coordinatorlostsample':\r\n            return 'Điều phối viên làm mất mẫu';\r\n            break;\r\n        case 'accepted':\r\n            return 'Đang đợi lấy mẫu';\r\n            break;\r\n        case 'transporting':\r\n            return 'Đang vận chuyển mẫu';\r\n            break;\r\n        case 'lostsample':\r\n            return 'Đang đợi lấy lại mẫu';\r\n            break;\r\n        case 'waitingforresult':\r\n            return 'Đang đợi kết quả';\r\n            break;\r\n        case 'closed':\r\n            return 'Đã xong';\r\n            break;\r\n        case 'canceled':\r\n            return 'Đã bị hủy';\r\n            break;\r\n        \r\n    } \r\n}\r\n\r\n\r\nexport function getAppointmentStateName(status){\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'Đơn đang đợi xử lý';\r\n            break;\r\n        case 'accepted':\r\n            return 'Đơn đã được chấp nhận';\r\n            break;\r\n        case 'rejected':\r\n            return 'Đơn đã bị từ chối';\r\n            break;\r\n        case 'canceled':\r\n            return 'Đơn đã bị hủy';\r\n            break;\r\n        \r\n        } \r\n    }\r\n\r\n\r\n\r\nexport function getStateColor(status){\r\n        switch (status) {\r\n        case 'pending':\r\n            return '#ffd66f';\r\n            break;\r\n        case 'coordinatorlostsample':\r\n            return '#ffd66f';\r\n            break;\r\n        case 'accepted':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'transporting':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'lostsample':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'waitingforresult':\r\n            return '#6398d6';\r\n            break;\r\n        case 'closed':\r\n            return '#000';\r\n            break;\r\n        \r\n        } \r\n    }","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getRoleName} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class AccountListViewItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            // appointment_date: convertDateTimeToDate(this.props.appoint_date),\r\n            // appointment_time: convertDateTimeToTime(this.props.appoint_date),\r\n        };\r\n        this.onAccountPress = this.onAccountPress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n\r\n    onAccountPress(){\r\n        const account= { \r\n            'accountId':this.props.accountId, \r\n            'accountPhoneNumber':this.props.accountPhoneNumber,                      \r\n            'accountName':this.props.accountName,\r\n            'accountDob':this.props.accountDob,\r\n            'accountAddress':this.props.accountAddress,\r\n            'accountPassword':this.props.accountPassword,\r\n            'accountActive':this.props.accountActive,\r\n            'accountEmail':this.props.accountEmail,\r\n            'accountRole':this.props.accountRole,\r\n            'accountGender':this.props.accountGender,\r\n            'accountImageUrl':this.props.accountImageUrl,\r\n            'accountTownCode':this.props.accountTownCode,\r\n            'accountDistrictCode':this.props.accountDistrictCode,\r\n            }\r\n        // console.log(account)\r\n        this.props.setSelectedAccount?this.props.setSelectedAccount(account):null\r\n        this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.accountListItem}\r\n                onPress={() => this.onAccountPress()}\r\n                >\r\n                <View style={styles.accountNameContainer}>                                       \r\n                <Text style={{fontSize:17}}>{this.props.accountName}</Text>\r\n                </View>\r\n                <View style={styles.accountPhoneContainer}>                                       \r\n                <Text style={{fontSize:17}}>{this.props.accountPhoneNumber}</Text>\r\n                </View>\r\n                <View style={styles.accountRoleContainer}>                                       \r\n                <Text style={{fontSize:17}}>{getRoleName(this.props.accountRole)}</Text>  \r\n                </View>\r\n                     \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingBottom:2,  \r\n    },\r\n    accountNameContainer:{\r\n        margin:10,\r\n        width:350,\r\n        alignItems: 'center',\r\n        marginRight:150,\r\n    },\r\n    accountPhoneContainer:{\r\n        margin:10,\r\n        width:200,\r\n        marginRight:100,\r\n        alignItems: 'center',\r\n    },\r\n    accountRoleContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n    },\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport AccountListViewItem from './AccountListViewItem'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class AccountListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            Button1Selected: true,\r\n            Button2Selected: false,\r\n            Button3Selected: false,\r\n            Button4Selected: false,\r\n            Button4Selected: false,\r\n            districtsList: districtList,\r\n            accountSelected: 'all',\r\n            userList: this.props.userList?this.props.userList:[],\r\n            dataChanged: true,\r\n        };\r\n        this.menuButtonPress = this.menuButtonPress.bind(this)\r\n        this.getAccountShowList = this.getAccountShowList.bind(this)\r\n    }\r\n\r\n\r\n    \r\n    getAccountShowList(){\r\n        \r\n        if (this.state.accountSelected=='all'){\r\n            return this.state.userList\r\n        }\r\n        else{\r\n            let result = []\r\n            let index = this.state.userList.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.userList[index].role === this.state.accountSelected) {\r\n                    result.push(this.state.userList[index]);\r\n                    }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        \r\n        return this.state.userList\r\n    }\r\n\r\n\r\n\r\n\r\n    menuButtonPress(button){\r\n        this.setState(previousState => ({ \r\n            Button1Selected: button==\"1\"?true:false,\r\n            Button2Selected: button==\"2\"?true:false,\r\n            Button3Selected: button==\"3\"?true:false,\r\n            Button4Selected: button==\"4\"?true:false,\r\n            Button5Selected: button==\"5\"?true:false,\r\n            accountSelected: button==\"1\"? 'all': button==\"2\"? 'COORDINATOR': button==\"3\"? 'NURSE' : button==\"4\"? 'CUSTOMER': 'ADMIN',\r\n            dataChanged: !this.state.dataChanged,\r\n        }))\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                userList: this.props.userList,\r\n                dataChanged: !this.state.dataChanged,\r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    // componentDidUpdate  (prevProps, prevState) {        \r\n    //      if (prevProps !== this.props) {\r\n    //         this.setState(previousState => ({ \r\n    //             userList: this.props.userList,\r\n    //         }));\r\n    //     }\r\n    // }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleListArea}>\r\n            <View style={styles.accountListTopMenuArea}>\r\n                <View style={styles.accountListTopMenuContainer}>\r\n                    <TextInput style={styles.topMenuTextInput}\r\n                    placeholder={'Tìm kiếm tài khoản theo số điện thoại'}>                \r\n                    </TextInput>\r\n                    <TouchableOpacity \r\n                        style={styles.createNewAccountButton} \r\n                        onPress={() => this.props.changeShowView ? this.props.changeShowView('AccountCreateView'): null}\r\n                        >\r\n                        <Text style={{color:'white'}}>Tạo tài khoản nhân viên</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={[styles.accountListTopMenuContainer,{\r\n                    justifyContent: 'flex-start',\r\n                    }]}>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button1Selected ? 1:0,\r\n                        backgroundColor: this.state.Button1Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('1')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Tất cả</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button2Selected ? 1:0,\r\n                        backgroundColor: this.state.Button2Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('2')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Điều phối viên</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button3Selected ? 1:0,\r\n                        backgroundColor: this.state.Button3Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('3')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Y tá</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button4Selected ? 1:0,\r\n                        backgroundColor: this.state.Button4Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('4')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Khách hàng</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button5Selected ? 1:0,\r\n                        backgroundColor: this.state.Button5Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('5')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Quản trị hệ thống</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={styles.accountListTopMenuContainer}>\r\n                    <Text >Số lượng: {this.getAccountShowList()?this.getAccountShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.articleListFlatListArea}>     \r\n                <View style={styles.articleListFlatListTitleArea}> \r\n                    <View style={styles.articleListFlatListTitleContainer}> \r\n                        <View style={styles.articleListTitleNameContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Tên người dùng</Text>\r\n                        </View>\r\n                        <View style={styles.articleListTitlePhoneContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Số điện thoại</Text>\r\n                        </View>\r\n                        <View style={styles.articleListTitleRoleContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Vị trí</Text>  \r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <FlatList style={styles.articleListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getAccountShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <AccountListViewItem\r\n                                    accountId={item.id}         \r\n                                    accountPhoneNumber={item.phoneNumber}                            \r\n                                    accountName={item.name}    \r\n                                    accountDob={item.dob}    \r\n                                    accountAddress={item.address}\r\n                                    accountPassword={item.password}\r\n                                    accountActive={item.active}\r\n                                    accountEmail={item.email}         \r\n                                    accountRole={item.role}                            \r\n                                    accountGender={item.gender}    \r\n                                    accountImageUrl={item.image}    \r\n                                    accountTownCode={item.townCode}\r\n                                    accountDistrictCode={item.districtCode}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedAccount={this.props.setSelectedAccount?this.props.setSelectedAccount: null}  \r\n                                                                                                    \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList> \r\n                       \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst roleSelectedColor = '#c0c0c0';\r\n\r\nconst roleSelectButtonHeight = 30;\r\n\r\nconst styles = StyleSheet.create({\r\n    articleListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountListTopMenuArea: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:40,\r\n        paddingTop:10,\r\n    },\r\n    accountListTopMenuContainer: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:10,\r\n        paddingLeft:190,\r\n        paddingRight:200,\r\n    },\r\n    topMenuTextInput:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:10,\r\n    },\r\n    topMenuButton:{\r\n        width: (Dimensions.get('window').width-400)/5,\r\n        height: roleSelectButtonHeight,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    createNewAccountButton:{\r\n        width: 240,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        // marginRight:200,\r\n    },\r\n    articleListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    articleListFlatListTitleArea:{\r\n        alignSelf: 'stretch',\r\n        width: \"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    articleListFlatListTitleContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        // width: 750,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',   \r\n        backgroundColor:'#c0c0c0',     \r\n    },\r\n    articleListTitleNameContainer:{\r\n        margin:10,\r\n        width:350,\r\n        alignItems: 'center',\r\n        marginRight:150,\r\n    },\r\n    articleListTitlePhoneContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n        marginRight:100,\r\n    },\r\n    articleListTitleRoleContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n    },\r\n    articleListTitleText:{\r\n        fontSize:17, \r\n        fontWeight:'bold'\r\n    },\r\n    articleListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingBottom:40,\r\n    },\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',\r\n            accountEmail:'',\r\n            accountDob: '',\r\n            accountGender: '',\r\n            accountPassword: '',\r\n            accountRePassword: '',\r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountAddress: '',\r\n            accountRole: '',\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            day: new Date().getDate(),\r\n            accountImage: '',\r\n            error: '',\r\n            errorList: ['',\r\n                    'Tên chủ tài khoản không được bỏ trống',\r\n                    'Số điện thoại phải có mười số',\r\n                    'Địa chỉ email không được bỏ trống',\r\n                    'Mật khẩu phải có ít nhất 6 kí tự',\r\n                    'Xác nhận mật khẩu không trùng với mật khẩu ',\r\n                    'Địa chỉ không được bỏ trống'],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onDistrictChange = this.onDistrictChange.bind(this)\r\n        this.createNumberPickerList = this.createNumberPickerList.bind(this)\r\n        this.getNumberOfDayInMonth = this.getNumberOfDayInMonth.bind(this)\r\n        this.createAccount = this.createAccount.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountImage: '',\r\n            error: '',\r\n        }));\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                districtList: this.props.districtList?this.props.districtList:[],\r\n                townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n                districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n                townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n                accountImage: '',\r\n                error: '',\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onDistrictChange(districtId){\r\n        this.setState({\r\n            districtSelected:districtId,                  \r\n        })\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == districtId){\r\n                this.setState({\r\n                    townList:  this.state.districtList[index].listTown,\r\n                    townSelected: this.state.districtList[index].listTown[0]?this.state.districtList[index].listTown[0].townCode:'none'              \r\n                })\r\n                index = 0;\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    getFebDay(){        \r\n        const year = this.state.year\r\n        if (year % 400 == 0 ) return 29\r\n        if (year % 100 == 0 ) return 28\r\n        if (year % 4 == 0) return 29\r\n        return 28\r\n    }\r\n\r\n    getNumberOfDayInMonth(month){\r\n        switch (month) {\r\n            case '1':\r\n            case '3':\r\n            case '5':\r\n            case '7':\r\n            case '8':\r\n            case '10':\r\n            case '12':\r\n                return 31;\r\n                break;\r\n            case '4':\r\n            case '6':\r\n            case '9':\r\n            case '11':\r\n                return 30;\r\n                break;\r\n            case '2':\r\n                return this.getFebDay();\r\n                break;\r\n            \r\n        }   \r\n    }\r\n\r\n    createNumberPickerList(start,end,startToEnd){\r\n        let result = [];\r\n        if(startToEnd){\r\n            for (let i = start; i <= end; i++)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        else{\r\n            for (let i = end; i >= start; i--)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        return result\r\n    }\r\n\r\n    getDob(){\r\n        let result = ''\r\n        if(parseInt(this.state.month)<10)\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n        else\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n        return result\r\n    }\r\n\r\n    \r\n    createAccount(){\r\n        // console.log(this.state.accountRole)\r\n        if(this.checkValid()){\r\n            this.callApiCreateAccount()\r\n        }\r\n    }\r\n\r\n    \r\n    checkValid(){        \r\n        if (this.state.accountName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.accountPhoneNumber == '' ||  this.state.accountPhoneNumber.length<10) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        \r\n        if (this.state.accountEmail == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (this.state.accountPassword == '' || this.state.accountPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        if (this.state.accountRePassword != this.state.accountPassword) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[5]\r\n            }));\r\n        if (this.state.accountAddress == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[6]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n\r\n    callApiCreateAccount(){\r\n        fetch(getApiUrl()+'/users/create-employee', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            name: this.state.accountName,\r\n            phoneNumber: this.state.accountPhoneNumber,\r\n            email: this.state.accountEmail,\r\n            dob: convertDateToDateTime(this.getDob()),\r\n            gender: this.state.accountGender,\r\n            password: this.state.accountPassword,\r\n            districtCode: this.state.districtSelected,\r\n            townCode: this.state.townSelected,\r\n            address: this.state.accountAddress,\r\n            role: this.state.accountRole,\r\n            image: this.state.accountImage\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.props.changeShowView('AccountListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n\r\n    selectPicture = async () =>{\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                this.setState({ accountImage: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Tạo nhân viên mới: \"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên nhân viên:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên nhân viên'}\r\n                            name={\"accountName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountName}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập số điện thoại của nhân viên'}\r\n                            name=\"accountPhoneNumber\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPhoneNumber}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ email:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ email của nhân viên'}\r\n                            name=\"accountEmail\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountEmail}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.day}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,this.getNumberOfDayInMonth(this.state.month.toString()),true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.month}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day: this.getNumberOfDayInMonth(itemValue)<this.state.day?'1':this.state.day,\r\n                                month:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,12,true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.year}\r\n                            style={[styles.accountTypeDropDown,{width:80}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                year:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1920,new Date().getFullYear(),false)}\r\n                        </Picker>\r\n                        \r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Giới tính:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.accountGender}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountGender:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Nam'} value={'1'} />\r\n                            <Picker.Item label={'Nữ'} value={'0'} />\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu'}\r\n                            name=\"accountPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Xác nhận mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Xác nhận lại mật khẩu'}\r\n                            name=\"accountRePassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountRePassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>                    \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Quận/huyện:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.districtSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.onDistrictChange(itemValue)}                    \r\n                            >\r\n                            {this.state.districtList?this.state.districtList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />))\r\n                            : null }\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Phường/xã:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.townSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                townSelected:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.state.townList?this.state.townList.map(town => (\r\n                            <Picker.Item label={town.townName} value={town.townCode} />\r\n                            )): null}\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ chi tiết:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ chi tiết: số nhà, đường, thôn, ..'}\r\n                            name=\"accountAddress\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountAddress}\r\n                            >                \r\n                        </TextInput>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Vị trí nhân viên:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.accountRole}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountRole:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Y tá'} value={'NURSE'} />\r\n                            <Picker.Item label={'Điều phối viên'} value={'COORDINATOR'} />\r\n                            <Picker.Item label={'Quản trị hệ thống'} value={'ADMIN'} />\r\n                        </Picker>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đại diện: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text style={{color:'white'}}>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                        \r\n                    </View>\r\n                    {this.state.accountImage?\r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Text style={[styles.rowText,{fontSize:15,width:800,paddingTop:3}]}>{' '+this.state.accountImage}</Text>\r\n                        </View>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: this.state.accountImage}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    :null\r\n                    }\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n            <TouchableOpacity style={styles.accountCreateConfirmButton} onPress={()=>this.createAccount()}>\r\n                    <Text style={{color:'white'}}>Tạo tài khoản nhân viên</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        fontWeight:'bold'\r\n        \r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    accountCreateConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:30,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        \r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',\r\n            accountEmail:'',\r\n            accountDob: '',\r\n            accountGender: '',\r\n            accountPassword: '',\r\n            accountRePassword: '',\r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountAddress: '',\r\n            accountRole: '',\r\n            accountActive: '',\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            day: new Date().getDate(),\r\n            accountImage: '',\r\n            error: '',\r\n            errorList: ['','Tên chủ tài khoản không được bỏ trống','Địa chỉ email không được bỏ trống', 'Địa chỉ không được bỏ trống'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onDistrictChange = this.onDistrictChange.bind(this)\r\n        this.createNumberPickerList = this.createNumberPickerList.bind(this)\r\n        this.getNumberOfDayInMonth = this.getNumberOfDayInMonth.bind(this)\r\n        this.updateAccountInformation = this.updateAccountInformation.bind(this)\r\n        this.resetPassword = this.resetPassword.bind(this)\r\n        this.checkCurrentUser = this.checkCurrentUser.bind(this)\r\n        this.checkAdmin = this.checkAdmin.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n        this.getDob = this.getDob.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log('')\r\n        this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            accountEmail: this.props.account?this.props.account.accountEmail:'',\r\n            accountDob: this.props.account?this.props.account.accountDob:'',\r\n            accountGender: this.props.account?this.props.account.accountGender:'',\r\n            accountRole: this.props.account?this.props.account.accountRole:'',\r\n            accountAddress: this.props.account?this.props.account.accountAddress:'',\r\n            accountActive: this.props.account?this.props.account.accountActive:'',\r\n            accountImage: this.props.account?this.props.account.accountImageUrl:'',\r\n            year: this.props.account?this.props.account.accountDob? this.props.account.accountDob.substring(0,4):'2020':'2020',\r\n            month: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(5,7)).toString():'2020':'2020',\r\n            day: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(8,10)).toString():'2020':'2020',\r\n            error: '',\r\n        }));\r\n    }\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n        if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            accountEmail: this.props.account?this.props.account.accountEmail:'',\r\n            accountDob: this.props.account?this.props.account.accountDob:'',\r\n            accountGender: this.props.account?this.props.account.accountGender:'',\r\n            accountRole: this.props.account?this.props.account.accountRole:'',\r\n            accountAddress: this.props.account?this.props.account.accountAddress:'',\r\n            accountActive: this.props.account?this.props.account.accountActive:'',\r\n            accountImage: this.props.account?this.props.account.accountImageUrl:'',\r\n            year: this.props.account?this.props.account.accountDob? this.props.account.accountDob.substring(0,4):'2020':'2020',\r\n            month: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(5,7)).toString():'2020':'2020',\r\n            day: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(8,10)).toString():'2020':'2020',\r\n            error: '',\r\n        }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onDistrictChange(districtId){\r\n        this.setState({\r\n            districtSelected:districtId,                  \r\n        })\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == districtId){\r\n                this.setState({\r\n                    townList:  this.state.districtList[index].listTown,\r\n                    townSelected: this.state.districtList[index].listTown[0]?this.state.districtList[index].listTown[0].townCode:'none'              \r\n                })\r\n                index = 0;\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    getFebDay(){        \r\n        const year = this.state.year\r\n        if (year % 400 == 0 ) return 29\r\n        if (year % 100 == 0 ) return 28\r\n        if (year % 4 == 0) return 29\r\n        return 28\r\n    }\r\n\r\n    getNumberOfDayInMonth(month){\r\n        switch (month) {\r\n            case '1':\r\n            case '3':\r\n            case '5':\r\n            case '7':\r\n            case '8':\r\n            case '10':\r\n            case '12':\r\n                return 31;\r\n                break;\r\n            case '4':\r\n            case '6':\r\n            case '9':\r\n            case '11':\r\n                return 30;\r\n                break;\r\n            case '2':\r\n                return this.getFebDay();\r\n                break;\r\n            \r\n        }   \r\n    }\r\n\r\n    createNumberPickerList(start,end,startToEnd){\r\n        let result = [];\r\n        if(startToEnd){\r\n            for (let i = start; i <= end; i++)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        else{\r\n            for (let i = end; i >= start; i--)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        return result\r\n    }\r\n\r\n\r\n    getDob(){\r\n        let result = ''\r\n        if(parseInt(this.state.month)<10)\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n        else\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n        return result\r\n    }\r\n    \r\n\r\n    resetPassword(){\r\n        console.log(this.props.account.accountId),\r\n        console.log(this.props.userInfo.id),\r\n        fetch(getApiUrl()+'/users/reset-password/'+this.props.account.accountId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n            \r\n        },\r\n        body: JSON.stringify({\r\n            userProcessingID: this.props.userInfo.id\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message?  success=true : null : null;\r\n                if (success)\r\n                    this.props.changeShowView('AccountListView')\r\n                \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    changePassword(){\r\n        this.props.changeShowView('AccountChangePasswordView')\r\n    }\r\n\r\n    updateAccountInformation(){\r\n        if(this.checkValid()){\r\n            this.callApiUpdateAccountInfo()\r\n        }\r\n    }\r\n\r\n    \r\n    checkValid(){        \r\n        if (this.state.accountName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.accountEmail == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.accountAddress == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n    callApiUpdateAccountInfo(){\r\n        fetch(getApiUrl()+'/users/update-user/'+this.props.account.accountId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            name: this.state.accountName,\r\n            dob: convertDateToDateTime(this.getDob()),\r\n            address: this.state.accountAddress,\r\n            active: this.state.accountActive,\r\n            email: this.state.accountEmail,\r\n            gender: this.state.accountGender,\r\n            townCode: this.state.townSelected,\r\n            districtCode: this.state.districtSelected,\r\n            image: this.state.accountImage\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) {\r\n                    if (this.checkCurrentUser()) this.props.updateUserInfo(result)\r\n                    this.props.changeShowView('AccountListView')\r\n                }\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    \r\n    selectPicture = async () =>{\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                this.setState({ accountImage: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    checkCurrentUser(){\r\n        if (this.props.account.accountId == this.props.userInfo.id) return true\r\n        return false\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Chỉnh sửa thông tin nhân viên: \"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Thay đổi mật khẩu:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên nhân viên'}\r\n                            name={\"accountName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountName}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountName}</Text>\r\n                        }\r\n                        \r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <Text style={styles.rowTextLong}>{this.state.accountPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ email:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ email của nhân viên'}\r\n                            name=\"accountEmail\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountEmail}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountEmail}</Text>\r\n                        }\r\n                    </View>\r\n                    {this.checkAdmin()?\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.day}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,this.getNumberOfDayInMonth(this.state.month.toString()),true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.month}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day: this.getNumberOfDayInMonth(itemValue)<this.state.day?'1':this.state.day,\r\n                                month:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,12,true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.year}\r\n                            style={[styles.accountTypeDropDown,{width:80}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                year:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1920,2020,false)}\r\n                        </Picker>\r\n                    </View>\r\n                    :\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Text style={styles.rowTextLong}>{this.getDob()}</Text>\r\n                    </View>\r\n                    }\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Giới tính:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.accountGender}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountGender:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Nam'} value={'1'} />\r\n                            <Picker.Item label={'Nữ'} value={'0'} />\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountGender=='1'?'Nam':'Nữ'}</Text>\r\n                        }\r\n                        \r\n                    </View>                   \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Quận/huyện:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.districtSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.onDistrictChange(itemValue)}                    \r\n                            >\r\n                            {this.state.districtList?this.state.districtList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />))\r\n                            : null }\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Phường/xã:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.townSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                townSelected:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.state.townList?this.state.townList.map(town => (\r\n                            <Picker.Item label={town.townName} value={town.townCode} />\r\n                            )): null}\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ chi tiết:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ chi tiết: số nhà, đường, thôn, ..'}\r\n                            name=\"accountAddress\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountAddress}\r\n                            >                \r\n                        </TextInput>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Vị trí nhân viên:</Text>\r\n                        <Text style={styles.rowTextLong}>{getRoleName(this.state.accountRole)}</Text>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Trạng thái:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.accountActive}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountActive:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Đang hoạt động'} value={'1'} />\r\n                            <Picker.Item label={'Bị khóa'} value={'0'} />\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountActive=='1'?'Đang hoạt động':'Bị khóa'}</Text>\r\n                        }\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đại diện: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text style={{color:'white'}}>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    {this.state.accountImage?\r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Text style={[styles.rowTextLong,{fontSize:15,width:800,paddingTop:3}]}>{' '+this.state.accountImage}</Text>\r\n                        </View>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: this.state.accountImage}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    :null\r\n                    }\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>  \r\n                <View style={styles.buttonArea}>\r\n                    {this.checkCurrentUser()?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.changePassword()}>\r\n                        <Text style={{color:'white'}}>Thay đổi mật khẩu</Text>\r\n                    </TouchableOpacity>\r\n                    :\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.resetPassword()}>\r\n                        <Text style={{color:'white'}}>Đặt lại mật khẩu</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.updateAccountInformation()}>\r\n                        <Text style={{color:'white'}}>Lưu thay đổi</Text>\r\n                    </TouchableOpacity>\r\n                </View>  \r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        fontWeight:'bold'\r\n        \r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:30,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime} from './../Common/CommonFunction'\r\n// import DatePicker from 'react-native-date-picker'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',    \r\n            accountOldPassword: '',        \r\n            accountPassword: '',\r\n            accountRePassword: '',            \r\n            error: '',\r\n            errorList: ['',\r\n                    'Mật khẩu cũ phải có ít nhất 6 kí tự',\r\n                    'Mật khẩu mới phải có ít nhất 6 kí tự',\r\n                    'Xác nhận mới mật khẩu không trùng với mật khẩu '],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            error: '',\r\n        }));\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                accountName: this.props.account?this.props.account.accountName:'',\r\n                accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n                error: '',\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    \r\n    changePassword(){\r\n        if(this.checkValid()){\r\n            this.callApiChangePassword()\r\n        }\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n    \r\n    checkValid(){    \r\n        if (this.state.accountOldPassword == '' || this.state.accountOldPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));   \r\n        if (this.state.accountPassword == '' || this.state.accountPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.accountRePassword != this.state.accountPassword) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n\r\n    callApiChangePassword(){\r\n        console.log(this.props.userInfo.id)\r\n        let url = ''\r\n        if (this.checkAdmin()) url = getApiUrl()+'/users/admin/change-password/'+this.props.userInfo.id\r\n        else url = getApiUrl()+'/users/coordinators/change-password/'+this.props.userInfo.id\r\n        fetch(url, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            oldPassword: this.state.accountOldPassword,\r\n            newPassword: this.state.accountPassword,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? result.message == \"Thay đổi mật khẩu thành công!\"? success=true : null : null : null;\r\n                if (success)\r\n                this.props.changeShowView('AccountListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Thay đổi mật khẩu:\"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên người dùng:</Text>\r\n                        <Text style={styles.rowTextLong}>{this.state.accountName}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <Text style={styles.rowText}>{this.state.accountPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu cũ:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu cũ'}\r\n                            name=\"accountOldPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountOldPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu mới:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu mới'}\r\n                            name=\"accountPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Xác nhận mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Xác nhận lại mật khẩu'}\r\n                            name=\"accountRePassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountRePassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>           \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n            <TouchableOpacity style={styles.accountCreateConfirmButton} onPress={()=>this.changePassword()}>\r\n                    <Text>Đổi mật khẩu</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    accountCreateConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:30,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getAppointmentStateName, getStateColor} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class AppointmentListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n        };\r\n        this.onAppointmentPress = this.onAppointmentPress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n\r\n    onAppointmentPress(){\r\n        const appointment= { \r\n            \"appointmentId\": this.props.appointmentId,\r\n            \"appointmentCreatedTime\":this.props.appointmentCreatedTime,\r\n            \"customerName\":this.props.customerName,\r\n            \"customerPhoneNumber\":this.props.customerPhoneNumber,\r\n            \"customerDOB\":this.props.customerDOB,\r\n            \"appointmentMeetingTime\":this.props.appointmentMeetingTime,\r\n            \"appointmentStatus\":this.props.appointmentStatus,\r\n            }\r\n            \r\n        this.props.setSelectedAppointment?this.props.setSelectedAppointment(appointment):null\r\n        this.props.changeShowView?this.props.changeShowView('AppointmentView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.appointmentListItem}\r\n                onPress={() => this.onAppointmentPress()}\r\n                >                          \r\n                <View style={[styles.appointmentTextContainer,{\r\n                    marginTop:5,\r\n                }]}>                    \r\n                    <View>\r\n                    <Text style={{fontSize:17,color:'#25345D',fontWeight:'bold'}}>#{this.props.appointmentId}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={styles.appointmentTextContainer}>\r\n                    <View style={styles.appointmentListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>{this.props.customerName}</Text>\r\n                    </View>\r\n                    <View style={[styles.appointmentListSecondColumnContainer,{\r\n                        borderRadius:1,\r\n                        borderStyle: 'dashed',\r\n                    }]}>\r\n                    <Text style={{fontSize:17}}>{convertDateTimeToDate(this.props.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointmentCreatedTime)}</Text>                    \r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:15}}>Khung giờ hẹn: {convertDateTimeToTime(this.props.appointmentMeetingTime)}</Text>\r\n                    </View>\r\n                </View>     \r\n                <View style={[styles.appointmentTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.appointmentListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>Số điện thoại:  {this.props.customerPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentListSecondColumnContainer}>\r\n                    <Text style={{fontSize:17,color:'#0c59cf'}}>{getAppointmentStateName(this.props.appointmentStatus)}</Text>\r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:15}}>Ngày hẹn: {convertDateTimeToDate(this.props.appointmentMeetingTime)}</Text>\r\n                    </View>\r\n                    \r\n                </View>                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    appointmentListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    appointmentTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:3,\r\n        paddingTop:3,\r\n    },\r\n    appointmentListFirstColumnContainer:{\r\n        width:250,\r\n    },\r\n    appointmentListSecondColumnContainer:{\r\n        width:200,\r\n        marginLeft:20,\r\n        marginRight:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport AppointmentListViewItem from './AppointmentListViewItem'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\n\r\nexport default class AppointmentListView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            districtsList: this.props.districtList,\r\n            statusSelected: 'all',\r\n            districtSelected: 'all',\r\n            dataChanged: true,\r\n            testsList: this.props.testsList,\r\n            appointmentList: this.props.appointmentList,\r\n        };\r\n        this.getAppointmentShowList = this.getAppointmentShowList.bind(this)\r\n    }\r\n\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                appointmentList: this.props.appointmentList,\r\n                districtsList: this.props.districtList,\r\n                dataChanged: !this.state.dataChanged\r\n            }));\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    getAppointmentShowList(){\r\n        if (this.state.statusSelected=='all'){\r\n            if (this.state.districtSelected=='all'){\r\n                return this.state.appointmentList\r\n            }\r\n            else{\r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        else{\r\n            if (this.state.districtSelected=='all'){\r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].appointment_status === this.state.statusSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n            else{                \r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].appointment_status === this.state.statusSelected && this.state.appointmentList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        return this.state.appointmentList\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentListArea}>\r\n            <View style={styles.appointmentListTopMenuArea}>\r\n                <View style={styles.appointmentListTopMenuContainer}>\r\n                    <Text style={{fontWeight:'bold'}}>Trạng thái: </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.statusSelected}\r\n                        style={styles.appointmentTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            statusSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged\r\n                        })}\r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        <Picker.Item label=\"Đơn đang đợi xử lý\" value=\"pending\" />\r\n                        <Picker.Item label=\"Đơn đã được chấp nhận\" value=\"accepted\" />\r\n                        <Picker.Item label=\"Đơn đã bị từ chối\" value=\"rejected\" />\r\n                        <Picker.Item label=\"Đơn đã bị hủy\" value=\"canceled\" />\r\n                    </Picker>                    \r\n                </View>\r\n                <View style={styles.appointmentListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getAppointmentShowList()?this.getAppointmentShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.appointmentListFlatListArea}>        \r\n                <FlatList style={styles.appointmentListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getAppointmentShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <AppointmentListViewItem\r\n                                    appointmentId={item.appointment_id}       \r\n                                    appointmentCreatedTime={item.appointment_createdTime}                             \r\n                                    customerName={item.appointment_customerName}\r\n                                    customerPhoneNumber={item.appointment_phoneNumber}\r\n                                    customerDOB={item.appointment_DOB}\r\n                                    appointmentMeetingTime={item.appointment_meetingTime}\r\n                                    appointmentStatus={item.appointment_status}        \r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedAppointment={this.props.setSelectedAppointment?this.props.setSelectedAppointment: null}                                                                 \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentListTopMenuArea: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n        paddingTop:10,\r\n    },\r\n    appointmentListTopMenuContainer: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n        padding:10,\r\n        paddingLeft:200,\r\n        paddingRight:200\r\n    },\r\n    appointmentTypeDropdown:{\r\n        height: 35, \r\n        width: 300,\r\n        borderRadius:5,\r\n        marginLeft:54,\r\n    },\r\n    appointmentListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    appointmentListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport {getApiUrl, getAppointmentStateName} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class AppointmentView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {        \r\n            \r\n        };\r\n        this.onAccept = this.onAccept.bind(this)\r\n        this.onReject = this.onReject.bind(this)\r\n        \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n    callApiAcceptAppointment(_status){\r\n        fetch(getApiUrl()+\"/appointments/accept/\"+this.props.appointment.appointmentId, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                status: _status,\r\n                coordinatorID: this.props.userInfo.id,\r\n                note: 'ok',\r\n            }),\r\n            })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                // let success = false\r\n                // result ? result.message? null : success=true : null;\r\n                // if (success) \r\n                this.props.changeShowView('AppointmentListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    onAccept(){\r\n        this.callApiAcceptAppointment()\r\n    }\r\n\r\n    onReject(){\r\n        this.props.changeShowView('AppointmentRejectView')\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentViewArea}>\r\n            <View style={styles.appointmentTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Chi tiết đơn khám</Text>                \r\n            </View>\r\n            <View style={styles.appointmentArea}>\r\n                <View style={styles.appointmentContainer}>      \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Mã đơn xét khám: </Text> \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.appointmentId:''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentCreatedTime):''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ hẹn:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentMeetingTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentMeetingTime):''}</Text>\r\n                    </View>  \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.customerPhoneNumber:''}</Text>\r\n                    </View>                  \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Trạng thái: </Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?getAppointmentStateName(this.props.appointment.appointmentStatus):''}</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    {this.props.appointment.appointmentStatus =='pending'?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onReject()}>\r\n                        <Text style={{color:'white'}}>Từ chối</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>}\r\n                    {this.props.appointment.appointmentStatus =='pending'?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onAccept()}>\r\n                        <Text style={{color:'white'}}>Xác nhận</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>}\r\n                </View>\r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:10,\r\n        marginBottom:-20,\r\n    },\r\n    appointmentArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    appointmentContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    appointmentRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowFirstContainer:{\r\n        width:200,\r\n    },\r\n    rowSecondContainer:{\r\n        width:'100%',\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:17,\r\n        fontWeight:'bold',\r\n        backgroundColor:''\r\n    },\r\n    \r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        backgroundColor:''\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\n\r\nexport default class AppointmentLostSampleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            reason: '',\r\n            error: '',\r\n            errorList: ['','Phải điền lý do từ chối'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.rejectAppointment = this.rejectAppointment.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    rejectAppointment(){\r\n        if(this.checkValid()){\r\n            this.callApiRejectAppointment()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.reason == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiRejectAppointment(){\r\n        fetch(getApiUrl()+\"/appointments/cancel/\"+this.props.appointment.appointmentId, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                status: 'rejected',\r\n                coordinatorID: this.props.userInfo.id,\r\n                note: this.state.reason,\r\n            }),\r\n            })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                // let success = false\r\n                // result ? result.message? null : success=true : null;\r\n                // if (success) \r\n                this.props.changeShowView('AppointmentListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentViewArea}>\r\n            <View style={styles.appointmentTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Từ chối đơn hẹn: </Text>                \r\n            </View>\r\n            <View style={styles.appointmentArea}>\r\n                <View style={styles.appointmentContainer}>   \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn hẹn: </Text>        \r\n                        <Text style={styles.rowText}>{this.props.appointment?this.props.appointment.appointmentId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowText,{width:300}]}>{this.props.appointment?this.props.appointment.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.appointment?this.props.appointment.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowText}>{'Lý do từ chối: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Điền lý do từ chối'}\r\n                            name={\"reason\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reason}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.appointmentConfirmButton} onPress={() => this.props.changeShowView('AppointmentView')}>\r\n                        <Text>Quay lại</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.appointmentConfirmButton} onPress={() => this.rejectAppointment()}>\r\n                        <Text>Từ chối đơn hẹn</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    appointmentArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    appointmentContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    appointmentRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n    },\r\n    appointmentTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    appointmentConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class ArticleListViewItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n        };\r\n        this.onArticlePress = this.onArticlePress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n    onArticlePress(){\r\n        const article= { \r\n            \"articleId\": this.props.articleId,\r\n            \"articleTitle\":this.props.articleTitle,\r\n            \"articleContent\":this.props.articleContent,\r\n            \"articleShortContent\":this.props.articleShortContent,\r\n            \"articleImageUrl\":this.props.articleImageUrl,\r\n            \"userId\":this.props.userId,\r\n            \"articleCreatedTime\":this.props.articleCreatedTime,\r\n            \"creatorName\": this.props.creatorName,\r\n            }\r\n        this.props.setSelectedArticle?this.props.setSelectedArticle(article):null\r\n        this.props.changeShowView?this.props.changeShowView('ArticleView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.articleListItem}\r\n                onPress={() => this.onArticlePress()}\r\n                >                                \r\n                <View style={styles.articleImageContainer}>\r\n                    <Image \r\n                        style={styles.articleImage}\r\n                        source={{uri:this.props.articleImageUrl}}>\r\n                    </Image>\r\n                </View>  \r\n                <View style={styles.articleTextContainer}>\r\n                    <View style={styles.articleTextContentContainer}>\r\n                        <View style={styles.articleTitleContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'Bold'}}>{this.props.articleTitle}</Text>\r\n                        </View>\r\n                        <View style={[styles.articleCreateTimeContainer,{\r\n                            borderRadius:1,\r\n                            borderStyle: 'dashed',\r\n                        }]}>\r\n                        <Text style={{fontSize:15}}>{convertDateTimeToDate(this.props.articleCreatedTime)+\"   \"+convertDateTimeToTime(this.props.articleCreatedTime)}</Text>                                   \r\n                        </View>\r\n                        <View style={styles.articleShortContentContainer}>\r\n                            <Text style={{fontSize:17, textAlign: 'justify'}}>{this.props.articleShortContent}</Text>        \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.articleTextCreatorNameContainer}>\r\n                        <View style={styles.articleCreatorNameContainer}>\r\n                            <Text style={{fontSize:17}}>{this.props.creatorName}</Text>\r\n                        </View>\r\n                    </View>\r\n                    \r\n                </View>     \r\n                                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    articleListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    articleImageContainer:{\r\n        margin:10,\r\n        height:200,\r\n        width:200,\r\n    },\r\n    articleImage:{\r\n        height:200,\r\n        width:200,\r\n    },\r\n    articleTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-620,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        backgroundColor:'',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:5,\r\n        paddingTop:10,\r\n    },\r\n    articleTextContentContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-650,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        backgroundColor:''\r\n    },\r\n    articleTextCreatorNameContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-630,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        backgroundColor:'',\r\n        paddingRight:10,\r\n    },\r\n    articleTitleContainer:{\r\n        marginBottom:10,\r\n    },\r\n    articleCreateTimeContainer:{\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n        padding:2,\r\n        marginBottom:10\r\n    },\r\n    articleShortContentContainer:{\r\n    },\r\n    articleCreatorNameContainer:{\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, Alert} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport ArticleListViewItem from './ArticleListViewItem'\r\n\r\nexport default class ArticleListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            statusSelected: 'pending',\r\n            districtSelected: 'D0',\r\n            articleList: this.props.articleList,\r\n        };\r\n        this.onArticlePress = this.onArticlePress.bind(this)\r\n        this.onAddArticlePress = this.onAddArticlePress.bind(this)\r\n    }\r\n\r\n    \r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                articleList: this.props.articleList,\r\n            }));\r\n        }\r\n    }\r\n\r\n    onArticlePress (){\r\n        this.props.changeShowView ? this.props.changeShowView('ArticleView'): null\r\n    }\r\n\r\n\r\n    onAddArticlePress(){\r\n        Alert.alert(\"Alert Title\",\"My Alert Msg\",\r\n        [{\r\n            text: \"Cancel\",\r\n            onPress: () => console.log(\"Cancel Pressed\"),\r\n            style: \"cancel\"\r\n            },\r\n            { text: \"OK\", onPress: () => console.log(\"OK Pressed\")\r\n        }],\r\n        { cancelable: false }\r\n        );\r\n        // this.props.changeShowView ? this.props.changeShowView('ArticleAddView'): null\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleListArea}>\r\n            <View style={styles.articleListTopMenuArea}>\r\n                <Text style={{fontSize:25,fontWeight:'bold'}}>Bài viết mới </Text>\r\n                <TouchableOpacity \r\n                    style={styles.createNewArticleButton}\r\n                    onPress={() => this.onAddArticlePress()}\r\n                    >\r\n                    <Text style={{color:'white'}}>Tạo bài viết mới</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.articleListFlatListArea}>        \r\n                <FlatList style={styles.articleListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.state.articleList}\r\n                    // extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <ArticleListViewItem\r\n                                    articleId={item.id}         \r\n                                    articleTitle={item.tittle}                            \r\n                                    articleShortContent={item.shortContent}    \r\n                                    articleContent={item.content}    \r\n                                    articleImageUrl={item.image}\r\n                                    userId={item.userID}\r\n                                    articleCreatedTime={item.createdTime}\r\n                                    creatorName={item.creatorName}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedArticle={this.props.setSelectedArticle?this.props.setSelectedArticle: null}\r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleListTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n    },\r\n    createNewArticleButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginRight:200,\r\n    },\r\n    articleListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    articleListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image, Alert} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n// import * as DocumentPicker from 'expo-document-picker';\r\n\r\nexport default class ArticleAddView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            imageResultUri: '',\r\n            articleTitle: '',\r\n            articleShortContent: '',\r\n            articleContent: '',\r\n            error: '',\r\n            errorList: ['','Phải điền tiêu đề bài viết','Phải điền nội dung ngắn ngọn bài viết', 'Phải điền nội dung bài viết','Bài viết chưa có ảnh min họa'],\r\n\r\n        };\r\n        this.selectPicture = this.selectPicture.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.createArticle = this.createArticle.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    createArticle(){\r\n        if(this.checkValid()){\r\n            this.callApiCreateArticle()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.articleTitle == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.articleShortContent == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.articleContent == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (this.state.imageResultUri == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiCreateArticle(){\r\n        fetch(getApiUrl()+'/articles/create', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            tittle: this.state.articleTitle,\r\n            shortContent:this.state.articleShortContent,\r\n            content: this.state.articleContent,\r\n            image: this.state.imageResultUri,\r\n            userID: this.props.userInfo.id\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.success? success=result.success : null : null;\r\n                if (success) \r\n                this.props.changeShowView('ArticleListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    selectPicture = async () =>{\r\n        // const result = await DocumentPicker.getDocumentAsync({copyToCacheDirectory:true})\r\n        // console.log(result)\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                this.setState({ imageResultUri: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleAddViewArea}>\r\n            <View style={styles.articleAddTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Thêm bài viết: </Text>                \r\n            </View>\r\n            <View style={styles.articleAddArea}>\r\n                <View style={styles.articleAddContainer}>                    \r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>Tiêu đề: </Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                        placeholder={'Nhập tiêu đề'}   \r\n                        name={\"articleTitle\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.articleTitle}  \r\n                        >           \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Nội dung\\nngắn gọn: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Nhập nội dung ngắn gọn'}\r\n                            name={\"articleShortContent\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.articleShortContent}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Nội dung\\nbài viết: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={12}\r\n                            placeholder={'Nhập nội dung '}\r\n                            name={\"articleContent\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.articleContent} \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đính kèm: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text style={{color:'white'}}>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                        <Text style={[styles.rowText,{fontSize:15,width:600,paddingTop:3,marginLeft:20}]}>{' '+this.state.imageResultUri}</Text>\r\n                    </View>\r\n                    {this.state.imageResultUri?\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{' '}</Text>\r\n                        <Image \r\n                            style={styles.imagePreview}\r\n                            source={{ uri: this.state.imageResultUri}}\r\n                            >\r\n                        </Image>\r\n                    </View>\r\n                    :null\r\n                    }\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.articleAddConfirmButton} onPress={() => this.createArticle()}>\r\n                    <Text style={{color:'white'}}>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleAddViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleAddTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    articleAddArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    articleAddContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    articleAddRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:18,\r\n    },\r\n    articleTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    articleAddConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class ArticleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            imageUri: '',\r\n            imageType: '',\r\n            imageResultUri: '',\r\n        };\r\n        \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleViewArea}>\r\n            \r\n            <View style={styles.articleArea}>\r\n                <View style={styles.articleContainer}>      \r\n                    <View style={styles.articleRowContainer}>\r\n                        <Text style={{fontSize:25,fontWeight:'bold'}}>{this.props.article?this.props.article.articleTitle:''}</Text>                \r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{borderWidth:1,borderRadius:1,borderStyle: 'dashed',width:180}]}>\r\n                        <Text style={[styles.rowText,{flex:1,textAlign: 'center',}]}>{this.props.article?convertDateTimeToDate(this.props.article.articleCreatedTime)+\"   \"+convertDateTimeToTime(this.props.article.articleCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{justifyContent: 'center',}]}>\r\n                        <Image \r\n                            style={styles.rowImage}\r\n                            source={{ uri: this.props.article?this.props.article.articleImageUrl:'' }}\r\n                            >\r\n                            </Image>\r\n                    </View>\r\n                    <View style={styles.articleRowContainer}>\r\n                        <Text style={styles.rowText}>{this.props.article?this.props.article.articleContent:''}</Text>\r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{justifyContent: 'flex-end',}]}>\r\n                        <Text style={styles.rowText}>{this.props.article?this.props.article.creatorName:''}</Text>\r\n                    </View>   \r\n                                     \r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    articleArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    articleContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    articleRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        fontSize:18,\r\n        backgroundColor:'',\r\n        textAlign: 'justify'\r\n    },\r\n    articleTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowImage:{\r\n        width:400,\r\n        height:400,\r\n        backgroundColor:''\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,TextInput, Dimensions} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\n\r\nimport PageFooter from './../PageFooter'\r\n\r\nexport default class Login extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            phoneNumber: '',\r\n            password:'',\r\n            error: ' ',\r\n            errorList: [' ','Phải điền số điện thoại', 'Phải điền mật khẩu']\r\n        };\r\n        this.callApiLogin = this.callApiLogin.bind(this)\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    login(){\r\n        if(this.checkValid()){\r\n            this.callApiLogin()\r\n        }    \r\n    }\r\n\r\n    \r\n    checkValid(){     \r\n        if (this.state.phoneNumber == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.password == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiLogin(){\r\n        fetch(getApiUrl()+\"/users/login\",{\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                phoneNumber: this.state.phoneNumber,\r\n                password: this.state.password,\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) this.props.loginSuccess(result.userInfo,result.token)\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={{flex:1}}>\r\n            <View style={styles.loginViewArea}>\r\n                <View style={styles.titleContainer}>\r\n                    <Text style={{fontSize:23,fontWeight:'bold'}}>Đăng nhập</Text>\r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowText}>{'Số điện thoại'}</Text>\r\n                    <TextInput \r\n                        style={styles.rowTextInput}\r\n                        name={\"phoneNumber\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.phoneNumber}\r\n                        >                \r\n                    </TextInput>     \r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowText}>{'Mật khẩu'}</Text>\r\n                    <TextInput \r\n                        style={styles.rowTextInput}\r\n                        name={\"password\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.password}\r\n                        secureTextEntry={true}\r\n                        onSubmitEditing={() => this.login()}\r\n                        >                \r\n                    </TextInput>     \r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowTextError}>{this.state.error}</Text>                         \r\n                </View>\r\n                <TouchableOpacity style={styles.loginButton} onPress={() => this.login()}>\r\n                    <Text style={{color:'white'}}>Đăng nhập</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <PageFooter/>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    loginViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n        paddingTop:70,\r\n    },\r\n    titleContainer:{\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding:20,\r\n        marginBottom:20,\r\n\r\n    },\r\n    rowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width:'100%',\r\n        padding:20,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:130,\r\n        fontSize:18,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 400,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    loginButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:20,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime, getStateName, getStateColor} from './../Common/CommonFunction'\r\n\r\nexport default class RequestListPendingItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            \r\n        };\r\n        this.onRequestPress = this.onRequestPress.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    changeToRequestViewScreen(testList){\r\n        const request= { \r\n            \"requestId\": this.props.requestId,\r\n            \"requestCreatedTime\":this.props.requestCreatedTime,\r\n            \"customerName\":this.props.customerName,\r\n            \"customerPhoneNumber\":this.props.customerPhoneNumber,\r\n            \"customerDOB\":this.props.customerDOB,\r\n            \"requestAddress\":this.props.requestAddress,\r\n            \"requestDistrictName\":this.props.requestDistrictName,\r\n            \"requestTownName\": this.props.requestTownName,\r\n            \"requestMeetingTime\": this.props.requestMeetingTime,\r\n            \"nurseName\":this.props.nurseName,\r\n            \"nurseId\":this.props.nurseId,\r\n            \"coordinatorId\":this.props.coordinatorId,\r\n            \"coordinatorName\":this.props.coordinatorName,\r\n            \"lsSelectedTest\":this.props.lsSelectedTest,\r\n            \"requestAmount\":this.props.requestAmount,\r\n            \"requestStatus\":this.props.requestStatus,\r\n            \"testList\":testList,\r\n            \"requestTestVersion\":this.props.requestTestVersion,\r\n            }\r\n        this.props.setSelectedRequest?this.props.setSelectedRequest(request):null\r\n        this.props.changeShowView?this.props.changeShowView('RequestView'):null\r\n    }\r\n\r\n    onRequestPress(){        \r\n        if (this.checkVersion()) this.changeToRequestViewScreen(this.props.testList)\r\n    }\r\n\r\n    checkVersion(){\r\n        if(this.props.testVersion != this.props.requestTestVersion){\r\n            fetch(getApiUrl()+\"/tests/versions/list-all-test/\"+this.props.requestTestVersion,{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    let list = []\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    {\r\n                        this.changeToRequestViewScreen(result.lsTests)\r\n                        return false\r\n                    }\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )  \r\n        }\r\n        else return true;\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.requestListItem}\r\n                onPress={() => this.onRequestPress()}\r\n                >                                \r\n                <View style={[styles.requestListTextContainer,{\r\n                    marginTop:5,\r\n                }]}>                    \r\n                    <View>\r\n                    <Text style={{fontSize:17,color:'#25345D',fontWeight:'bold'}}>#{this.props.requestId}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={styles.requestListTextContainer}>\r\n                    <View style={styles.requestListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>{this.props.customerName}</Text>\r\n                    </View>\r\n                    <View style={[styles.requestListSecondColumnContainer,{\r\n                        borderRadius:1,\r\n                        borderStyle: 'dashed',\r\n                    }]}>\r\n                    <Text style={{fontSize:17}}>{convertDateTimeToDate(this.props.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.requestCreatedTime)}</Text>                    \r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:16}}>{this.props.requestAddress+', '+this.props.requestTownName+', '+this.props.requestDistrictName}</Text>\r\n                    </View>\r\n                </View>     \r\n                <View style={[styles.requestListTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.requestListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>Số điện thoại:  {this.props.customerPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.requestListSecondColumnContainer}>\r\n                    <Text style={{fontSize:17,color:'#0c59cf'}}>{getStateName(this.props.requestStatus)}</Text>\r\n                    </View>\r\n                    \r\n                </View>                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    requestListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    requestListTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:3,\r\n        paddingTop:3,\r\n    },\r\n    requestListFirstColumnContainer:{\r\n        width:250,\r\n    },\r\n    requestListSecondColumnContainer:{\r\n        width:230,\r\n        marginLeft:20,\r\n        marginRight:50,\r\n\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport RequestListViewItem from './RequestListViewItem'\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport requestList from './../../Data/requestList'\r\nimport districtList from './../../Data/districtList'\r\n\r\nexport default class RequestListView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            districtsList: this.props.districtList,\r\n            statusSelected: 'all',\r\n            districtSelected: 'all',\r\n            dataChanged: true,\r\n            testsList: this.props.testsList,\r\n            requestList: this.props.requestList,\r\n            requestShowList : this.props.requestList,\r\n            requestCount: this.props.requestList?this.props.requestList.length:'0',\r\n        };\r\n        this.getRequestShowList = this.getRequestShowList.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                requestList: this.props.requestList,\r\n                districtsList: this.props.districtList,\r\n                requestCount: this.props.requestList?this.props.requestList.length:'0', \r\n                dataChanged: !this.state.dataChanged\r\n            }));\r\n        }\r\n    }\r\n\r\n    \r\n    getRequestShowList(){\r\n        if (this.state.statusSelected=='all'){\r\n            if (this.state.districtSelected=='all'){\r\n                return this.state.requestList\r\n            }\r\n            else{\r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                \r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        else{\r\n            if (this.state.districtSelected=='all'){\r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestStatus === this.state.statusSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n            else{                \r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestStatus === this.state.statusSelected && this.state.requestList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        return this.state.requestList\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestListArea}>\r\n            <View style={styles.requestListTopMenuArea}>\r\n                <View style={styles.requestListTopMenuContainer}>\r\n                    <Text style={{fontWeight:'bold'}}>Trạng thái: </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.statusSelected}\r\n                        style={styles.requestTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            statusSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}\r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        <Picker.Item label=\"Đang đợi y tá nhận đơn\" value=\"pending\" />\r\n                        <Picker.Item label=\"Đơn đã được y tá chấp nhận\" value=\"accepted\" />\r\n                        <Picker.Item label=\"Đơn đã được lấy mẫu\" value=\"transporting\" />\r\n                        <Picker.Item label=\"Đang đợi kết quả\" value=\"waitingforresult\" />\r\n                        <Picker.Item label=\"Đơn đã xong\" value=\"closed\" />\r\n                        <Picker.Item label=\"Y tá làm mất mẫu\" value=\"lostsample\" />\r\n                        <Picker.Item label=\"Điều phối viên là mất mẫu\" value=\"coordinatorlostsample\" />\r\n                        <Picker.Item label=\"Đơn đã hủy\" value=\"canceled\" />\r\n                    </Picker>\r\n                    <Text style={{marginLeft:200,fontWeight:'bold'}}>Quận/Huyện : </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.districtSelected}\r\n                        style={styles.requestTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            districtSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}                    \r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        {this.state.districtsList?this.state.districtsList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />\r\n                        )):null}\r\n                    </Picker>\r\n                </View>\r\n                <View style={styles.requestListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getRequestShowList()?this.getRequestShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.requestListFlatListArea}>\r\n                <FlatList style={styles.requestListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    // showsVerticalScrollIndicator={false}\r\n                    data={this.getRequestShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <RequestListViewItem\r\n                                    requestId={item.requestID}\r\n                                    requestCreatedTime={item.requestCreatedTime}\r\n                                    customerName={item.customerName}\r\n                                    customerPhoneNumber={item.customerPhoneNumber}\r\n                                    customerDOB={item.customerDOB}\r\n                                    requestAddress={item.requestAddress}\r\n                                    requestDistrictName={item.requestDistrictName}\r\n                                    requestTownName={item.requestTownName}\r\n                                    requestMeetingTime={item.requestMeetingTime}\r\n                                    nurseName={item.nurseName}\r\n                                    nurseId={item.nurseID}\r\n                                    coordinatorId={item.coordinatorID}\r\n                                    coordinatorName={item.coordinatorName}\r\n                                    lsSelectedTest={item.lsSelectedTest}\r\n                                    requestAmount={item.requestAmount}\r\n                                    requestStatus={item.requestStatus}\r\n                                    requestTestVersion={item.versionOfTest}\r\n                                    testVersion={this.props.testVersion}\r\n                                    testList={this.state.testsList} \r\n                                    token={this.props.token}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedRequest={this.props.setSelectedRequest?this.props.setSelectedRequest: null}         \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestListTopMenuArea: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n        paddingTop:10,\r\n    },\r\n    requestListTopMenuContainer: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:10,\r\n        paddingLeft:200,\r\n        paddingRight:200\r\n    },\r\n    requestTypeDropdown:{\r\n        height: 35, \r\n        width: 300,\r\n        borderRadius:5,\r\n        backgroundColor: 'white',\r\n        color:'black'\r\n    },\r\n    requestListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    requestListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, Text, TextInput, ScrollView, TouchableOpacity} from 'react-native';\r\nimport {convertMoney} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class RequestTestViewItem extends Component {\r\n    \r\n    componentDidMount(){\r\n        // console.log(this.props.testID+' '+this.props.index+' '+this.props.countHide+' '+this.props.math+this.props.backgroundColor)\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <View style={[styles.testItem,{\r\n                backgroundColor:this.props.backgroundColor?this.props.backgroundColor:'white',    \r\n            }]}>\r\n                <View style={styles.testName}>\r\n                    <Text style={{fontSize:15,color:'#25345d'}} >{this.props.testName}</Text>\r\n                </View>\r\n                <View style={styles.testPrice}>\r\n                    <Text style={{fontSize:15,color:'#25345d'}}  >{convertMoney(this.props.testPrice)}</Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testItem:{\r\n        height:45,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        //borderWidth:1,\r\n        //borderColor:'#25345d',\r\n    },\r\n    testName:{\r\n        width: 500,\r\n        height:29,\r\n        paddingLeft:5,\r\n        paddingRight:5,\r\n        paddingTop:3\r\n    },\r\n    testPrice:{\r\n        width: 100,\r\n        height:15,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        marginBottom:2,\r\n        paddingRight:10\r\n    }\r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, Text, TextInput, ScrollView, TouchableOpacity, FlatList, Alert} from 'react-native';\r\nimport RequestTestViewItem from './RequestTestViewItem'\r\nimport {convertMoney} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class RequestTestCategoryItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={        \r\n            visible: false\r\n        }\r\n        this.isVisible = this.isVisible.bind(this);\r\n    }\r\n\r\n    isVisible(){\r\n        let result = false;\r\n        this.props.test.forEach(test => {\r\n            this.props.isSelected(test.testID) == true ? result=true : '';  \r\n        });\r\n        return result;\r\n    }\r\n\r\n    render(){\r\n        const testList = this.props.test;\r\n        let countHide = 0;\r\n        return(\r\n            <View>\r\n            {this.isVisible() ?\r\n            <View>\r\n                <View style={styles.testCategoryItem}  >\r\n                    <View style={styles.testCategoryNameContainer}>\r\n                        <Text style={{fontSize:17,color:''}} >{this.props.categoryName}</Text>\r\n                    \r\n                    </View>\r\n                </View>\r\n                <FlatList \r\n                    style ={styles.TestListAreaScrollView}                        \r\n                    showsVerticalScrollIndicator={false}\r\n                    scrollEnabled={false}\r\n                    data={testList}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item, index}) => {\r\n                            this.props.isSelected(item.testID) ?  null : countHide+=1 ;\r\n                            return ( \r\n                                <View>                                 \r\n                                { this.props.isSelected(item.testID) ?\r\n                                    // <View style={[styles.testItem,{\r\n                                    //     backgroundColor:(parseInt(index)-countHide) % 2 == 0 ? '#EEE': '#FFF',    \r\n                                    // }]}>\r\n                                    //     <View style={styles.testName}>\r\n                                    //         <Text style={{fontSize:15,color:'#25345d'}} >{item.testName}</Text>\r\n                                    //     </View>\r\n                                    //     <View style={styles.testPrice}>\r\n                                    //         <Text style={{fontSize:15,color:'#25345d'}}  >{convertMoney(item.price)}</Text>\r\n                                    //     </View>\r\n                                    // </View>\r\n\r\n                                    <RequestTestViewItem \r\n                                    testName={item.testName}\r\n                                    testPrice={item.price}\r\n                                    testID={item.testID}\r\n                                    // backgroundColor={(parseInt(index)-countHide) % 2 === 0 ? '#EEE': '#FFF'}\r\n                                    backgroundColor='white'\r\n                                    countHide={countHide}\r\n                                    index={index}\r\n                                    math={(parseInt(index)-countHide) % 2 }\r\n                                    /> \r\n                                    : null}    \r\n                                </View>                          \r\n                            );\r\n                        }}\r\n                />\r\n            </View> \r\n            : null }\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testCategoryItem:{\r\n        height:50,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n        borderColor:'#25345d',\r\n              \r\n    },\r\n    TestListAreaScrollView:{\r\n        width: '100%',\r\n        flex:1,\r\n        backgroundColor:'white',\r\n        borderRadius:10,\r\n    },\r\n    testCategoryNameContainer:{\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        height:35,\r\n        paddingLeft:5,\r\n        paddingRight:5,   \r\n    },\r\n    testItem:{\r\n        height:45,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        //borderWidth:1,\r\n        //borderColor:'#25345d',\r\n    },\r\n    testName:{\r\n        width: 500,\r\n        height:29,\r\n        paddingLeft:5,\r\n        paddingRight:5,\r\n        paddingTop:3\r\n    },\r\n    testPrice:{\r\n        width: 100,\r\n        height:15,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        marginBottom:2,\r\n        paddingRight:10\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport {getApiUrl, getStateName} from './../Common/CommonFunction'\r\nimport RequestTestCategoryItem from './RequestTestCategoryItem'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class RequestView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {        \r\n            testList: this.props.testList,\r\n        };\r\n        this.isSelected = this.isSelected.bind(this)\r\n        this.getLeftButtonName = this.getLeftButtonName.bind(this)\r\n        this.getRightButtonName = this.getRightButtonName.bind(this)\r\n        this.onLeftButtonPress = this.onLeftButtonPress.bind(this)\r\n        this.onRightButtonPress = this.onRightButtonPress.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n    \r\n    isSelected(id) {\r\n        const found = this.props.request?this.props.request.lsSelectedTest.findIndex(test => test == id) : -1;\r\n        let result = false;\r\n        found === -1 ? '' : result = true;\r\n        return result;\r\n    }\r\n\r\n    \r\n    onTakingSample(){\r\n        fetch(getApiUrl()+\"/requests/update/\"+this.props.request.requestId, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    status: 'waitingforresult',\r\n                    userID: this.props.userInfo.id,\r\n                    note: 'Coordinator have take this request',\r\n                }),\r\n                })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                this.props.changeShowView('RequestListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    onLostSample(){\r\n        this.props.changeShowView('RequestLostSampleView')\r\n    }\r\n\r\n    onUpdateResult(){\r\n        this.props.changeShowView('RequestUpdateResultView')\r\n    }\r\n\r\n    getLeftButtonName(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                return '';\r\n                break;\r\n            case 'waitingforresult':\r\n                return 'Làm mất mẫu';\r\n                break;            \r\n            default: '';\r\n        }\r\n    }\r\n\r\n    getRightButtonName(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                return 'Xác nhận lấy mẫu';\r\n                break;\r\n            case 'waitingforresult':\r\n                return 'Cập nhật kết quả';\r\n                break;            \r\n            default: ''\r\n        }\r\n    }\r\n\r\n\r\n    onLeftButtonPress(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                \r\n                break;\r\n            case 'waitingforresult':\r\n                this.onLostSample();\r\n                break;\r\n        }\r\n    }\r\n\r\n    onRightButtonPress(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                this.onTakingSample();\r\n                break;\r\n            case 'waitingforresult':\r\n                this.onUpdateResult();\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Chi tiết đơn yêu cầu xét nghiệm</Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>      \r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestId:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                        \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerName:''}</Text>    \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Địa chỉ nhận đơn: </Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestAddress+', '+this.props.request.requestTownName+', '+this.props.request.requestDistrictName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Y tá nhận đơn: </Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.nurseName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Điều phối viên: </Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.coordinatorName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Trạng thái: </Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.request?getStateName(this.props.request.requestStatus):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <FlatList\r\n                                style={styles.rowFlatList}\r\n                                showsVerticalScrollIndicator={false}\r\n                                scrollEnabled={false}\r\n                                data={this.props.request?this.props.request.testList:[]}\r\n                                keyExtractor={(item, index) => index.toString()}\r\n                                renderItem={({ item }) => {\r\n                                    return (\r\n                                        <RequestTestCategoryItem\r\n                                            categoryName={item.testTypeName}\r\n                                            test={item.listTest}\r\n                                            isSelected={this.isSelected}\r\n                                        >\r\n                                        </RequestTestCategoryItem>\r\n                                    );\r\n                                }}\r\n                            >\r\n                        </FlatList>\r\n                    </View>\r\n                    {/* <View style={[styles.requestRowContainer,{justifyContent: 'center',}]}>\r\n                        <Image \r\n                            style={styles.rowImage}\r\n                            source={{ uri: this.props.request?this.props.request.requestImageUrl:'' }}\r\n                            >\r\n                        </Image>\r\n                    </View>         */}\r\n                </View>\r\n\r\n                <View style={styles.buttonArea}>\r\n                    {!this.getLeftButtonName(this.props.request?this.props.request.requestStatus:'') ==''?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onLeftButtonPress(this.props.request?this.props.request.requestStatus:'')}>\r\n                        <Text style={{color:'white'}}>{this.getLeftButtonName(this.props.request?this.props.request.requestStatus:'')}</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>\r\n                    }\r\n                    {!this.getRightButtonName(this.props.request?this.props.request.requestStatus:'')==''?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onRightButtonPress(this.props.request?this.props.request.requestStatus:'')}>\r\n                        <Text style={{color:'white'}}>{this.getRightButtonName(this.props.request?this.props.request.requestStatus:'')}</Text>\r\n                    </TouchableOpacity>  \r\n                    :<View/>\r\n                    }\r\n                </View>\r\n\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:10,\r\n        marginBottom:-20,\r\n    },\r\n    requestArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:17,\r\n        fontWeight:'bold',\r\n        backgroundColor:''\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n    },\r\n    rowFlatList: {\r\n        width: '100%',\r\n        alignSelf: 'stretch',\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        // borderRadius: 10,\r\n        marginTop: 5,\r\n        backgroundColor:'gray'\r\n    },\r\n    rowImage:{\r\n        width:400,\r\n        height:400,\r\n        backgroundColor:'red'\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\n\r\nexport default class RequestLostSampleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            reason: '',\r\n            error: '',\r\n            errorList: ['','Phải điền lý do làm mất mẫu'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.lostSample = this.lostSample.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    lostSample(){\r\n        if(this.checkValid()){\r\n            this.callApiLostSample()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.reason == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiLostSample(){\r\n        fetch(getApiUrl()+'/requests/update/'+this.props.request.requestId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            status: 'coordinatorlostsample',\r\n            userID: this.props.userInfo.id,\r\n            note: this.state.reason,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=result.success : null;\r\n                if (success) \r\n                this.props.changeShowView('RequestListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Báo mất mẫu xét nghiệm: </Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>   \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>        \r\n                        <Text style={styles.rowText}>{this.props.request?this.props.request.requestId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowText,{width:300}]}>{this.props.request?this.props.request.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{'Lý do mất mẫu: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Điền lý do làm mất mẫu'}\r\n                            name={\"reason\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reason}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.requestConfirmButton} onPress={() => this.props.changeShowView('RequestView')}>\r\n                        <Text>Quay lại</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.requestConfirmButton} onPress={() => this.lostSample()}>\r\n                        <Text>Báo mất mẫu</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    requestArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n    },\r\n    requestTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    requestConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nexport default class RequestUpdateResultView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            // imageUriList: [{'image':'https://znews-photo.zadn.vn/w1024/Uploaded/jgtnrz/2020_03_23/Rebel_4.jpeg'}],\r\n            imageUriList: [],\r\n            requestTitle: '',\r\n            requestShortContent: '',\r\n            requestContent: '',\r\n            error: '',\r\n            errorList: ['','Bài viết chưa có ảnh min họa'],\r\n\r\n        };\r\n        this.selectPicture = this.selectPicture.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.completeUpdateResult = this.completeUpdateResult.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    completeUpdateResult(){\r\n        if(this.checkValid()){\r\n            this.callApiSetResultImage()\r\n            // this.callApiUpdateRequest()\r\n        }\r\n    }\r\n\r\n    checkValid(){  \r\n        if (this.state.imageUriList.length == 0) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiUpdateRequest(){\r\n        fetch(getApiUrl()+'/requests/update/'+this.props.request.requestId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            status: 'closed',\r\n            userID: this.props.userInfo.id,\r\n            note: 'Đã cập nhật kết quả',\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=true : null;\r\n                if (success) \r\n                this.props.changeShowView('RequestListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    selectPicture = async () =>{\r\n        // console.log(result)\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                // this.callApiSetResultImage(result.uri)\r\n                let tempList = this.state.imageUriList\r\n                tempList.push({'image':result.uri})\r\n                // console.log(tempList)\r\n                this.setState({ imageUriList: tempList });   \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    callApiSetResultImage(){\r\n        let imageList = []\r\n        let index = this.state.imageUriList.length - 1;\r\n        while (index >= 0) {\r\n            imageList.push(this.state.imageUriList[index].image)\r\n            index-=1\r\n        }\r\n        console.log(imageList)\r\n        fetch(getApiUrl()+'/requests/detail/results/add', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            listImage: imageList,\r\n            userID: this.props.userInfo.id,\r\n            requestID: this.props.request.requestId\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=true : null;   \r\n                if(success){\r\n                    this.callApiUpdateRequest()\r\n                }  \r\n                        \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestAddViewArea}>\r\n            <View style={styles.requestAddTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Thêm kết quả xét nghiệm: </Text>                \r\n            </View>\r\n            <View style={styles.requestAddArea}>\r\n                <View style={styles.requestAddContainer}>                    \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>        \r\n                        <Text style={styles.rowText}>{this.props.request?this.props.request.requestId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowText,{width:300}]}>{this.props.request?this.props.request.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh kết quả: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    {this.state.imageUriList.length==0?null:\r\n                    this.state.imageUriList.map(imageUri => (                        \r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Text style={[styles.rowText,{fontSize:15,width:600,paddingTop:3}]}>{' '+imageUri.image}</Text>\r\n                        </View>\r\n                        <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: imageUri.image}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    ))\r\n                    }\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.requestAddConfirmButton} onPress={() => this.completeUpdateResult()}>\r\n                    <Text>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestAddViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestAddTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    requestAddArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestAddContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n    },\r\n    requestTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    requestAddConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getAppointmentStateName, getStateColor} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            testPrice: this.props.testPrice,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                testPrice: this.props.testPrice\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.props.updatePrice?this.props.updatePrice(this.props.testId,value):null\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(        \r\n            <View style={styles.testListItem}>  \r\n                <View style={[styles.testTextContainer,{marginTop:5,}]}>  \r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Loại Test: </Text>\r\n                    </View>\r\n                    <View style={styles.testListSecondColumnContainer}>\r\n                        <Text style={{fontSize:17}}>{this.props.testTypeName}</Text>\r\n                    </View>\r\n                </View>                               \r\n                <View style={styles.testTextContainer}>           \r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Tên Test: </Text>\r\n                    </View>\r\n                    <View style={styles.testListSecondColumnContainer}>\r\n                        <Text style={{fontSize:17}}>{this.props.testName}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={[styles.testTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Giá tiền: </Text>\r\n                    </View>\r\n                    <TextInput style={styles.rowTextInput}\r\n                        placeholder={'nhập giá tiền (VNĐ)'}\r\n                        name={\"testPrice\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.testPrice.toString()}\r\n                        >   \r\n                    </TextInput>\r\n                </View>                     \r\n            </View>      \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    testListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    testTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:20,\r\n        paddingRight:10,\r\n        paddingBottom:5,\r\n        paddingTop:5,\r\n    },\r\n    testListFirstColumnContainer:{\r\n        width:100,\r\n    },\r\n    testListSecondColumnContainer:{\r\n        width:500,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 100,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput} from 'react-native';\r\nimport TestListItem from './TestListItem'\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class TestUpdateView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            versionSelected:'2',\r\n            versionCreatedTime: null,\r\n            versionCreatorName: null,\r\n            testTypeSelected: 'none',\r\n            testTypeSelectedForCreate: 'none',\r\n            dataChanged: true,\r\n            testList: [],\r\n            testListApi: true,\r\n            testListTemp: [],\r\n            versionList: null,\r\n            testName: '',\r\n            testPrice: '',\r\n            newTestId: 1,\r\n            error: '',\r\n            errorList: ['','Phải chọn loại xét nghiệm','Phải điền tên xét nghiệm', 'Phải điền giá xét nghiệm'],\r\n        };\r\n        this.createTest = this.createTest.bind(this)\r\n        this.handleChange= this.handleChange.bind(this)\r\n        this.getTestList = this.getTestList.bind(this)\r\n        this.updatePrice = this.updatePrice.bind(this)\r\n        this.setSelectedVersion = this.setSelectedVersion.bind(this)\r\n        this.callApiUpdateVersion = this.callApiUpdateVersion.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.callApiGetVersionList()\r\n        // this.callApiGetTestList()\r\n    }\r\n\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                // testList: this.props.testList,\r\n                // testListTemp: this.props.testList,\r\n            }));\r\n        }\r\n    }\r\n\r\n    callApiGetVersionList(){\r\n        fetch(getApiUrl()+\"/tests/versions/list\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success){\r\n                    this.setState(previousState => ({\r\n                        versionList: result,\r\n                        versionSelected: result[0].versionID,\r\n                        versionCreatedTime: result[0].createdTime,\r\n                        versionCreatorName: result[0].creatorName,\r\n                    }));\r\n                    this.callApiGetTestList()\r\n                }\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n\r\n    createTest(){\r\n        if(this.checkValid()){\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.testListTemp[index].testTypeID == this.state.testTypeSelectedForCreate) {\r\n                    let testList = this.state.testListTemp[index].listTest\r\n                    let newTest = {\r\n                        'testID':(\"new\"+this.state.newTestId),\r\n                        'testName':this.state.testName,                   \r\n                        'price':this.state.testPrice,\r\n                        'testTypeID': this.state.testTypeSelectedForCreate,\r\n                        'testTypeName': this.state.testListTemp[index].testTypeName,\r\n                        }\r\n                    testList.push(newTest)\r\n\r\n                    // let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                    // while(indexTest >= 0){\r\n                    //     var test = this.state.testListTemp[index].listTest[indexTest]\r\n                    //     test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                    //     result.push(test)\r\n                    //     indexTest -=1;\r\n                    // }\r\n                }\r\n                index -= 1;   \r\n            } \r\n        }    \r\n    }\r\n    \r\n    checkValid(){        \r\n        if (this.state.testTypeSelectedForCreate == 'none') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.testName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.testPrice == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiUpdateVersion  = async () => {\r\n        let result = []\r\n        let index = this.state.testListTemp.length - 1;\r\n        while (index >= 0) {\r\n            let indexTest = this.state.testListTemp[index].listTest.length -1\r\n            while(indexTest >= 0){     \r\n                var test = this.state.testListTemp[index].listTest[indexTest]           \r\n                result.push(test)\r\n                indexTest -=1;\r\n            }\r\n            index -= 1;\r\n        }        \r\n        console.log(result)\r\n        fetch(getApiUrl()+'/tests/versions/upgrade-version', {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            creatorID: this.props.userInfo.id,\r\n            lsInputTest: result,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                this.callApiGetVersionList()\r\n                // this.callApiGetTestList()\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    updatePrice(testId,newPrice){\r\n        let result = []\r\n        let index = this.state.testListTemp.length - 1;\r\n        while (index >= 0) {\r\n            var testType = this.state.testListTemp[index]\r\n            let testList = []\r\n            let indexTest = this.state.testListTemp[index].listTest.length -1\r\n            while(indexTest >= 0){\r\n                var test = this.state.testListTemp[index].listTest[indexTest]\r\n                if (test.testID == testId){\r\n                    test.price = newPrice\r\n                } \r\n                testList.push(test)               \r\n                indexTest -=1;\r\n            }\r\n            testType['listTest'] = testList;\r\n            result.push(testType)\r\n            index -= 1;            \r\n        }      \r\n        // console.log(this.state.testListTemp)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    setSelectedVersion(versionId){\r\n        let index = this.state.versionList.length -1\r\n        while(index >= 0){\r\n            var version = this.state.versionList[index]\r\n            if (version.versionID == versionId){\r\n                this.setState({\r\n                    versionSelected: versionId,\r\n                    versionCreatedTime: version.createdTime,\r\n                    versionCreatorName: version.creatorName,\r\n                })\r\n            }     \r\n            index -= 1;\r\n        }      \r\n        this.callApiGetTestList(versionId)\r\n        \r\n        \r\n    }\r\n\r\n    callApiGetTestList(version){\r\n        \r\n        if(this.state.testListApi){\r\n            this.setState(previousState => ({\r\n                testListApi: false,\r\n            }));\r\n            let url = ''\r\n            if (version) url =  getApiUrl()+\"/tests/versions/list-all-test/\"+version\r\n            else url =  getApiUrl()+\"/tests/versions/lastest-version-test/\"\r\n            fetch(url,{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    let list = []\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    {\r\n                        this.setState(previousState => ({\r\n                            testList: result.lsTests ,\r\n                            testListTemp: result.lsTests ,\r\n                            testListApi: true,\r\n                        }));\r\n                    }\r\n                    else \r\n                    this.setState(previousState => ({\r\n                            testList: [],\r\n                            testListTemp: [],\r\n                            testListApi: true,\r\n                        }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )  \r\n        }\r\n\r\n    }\r\n\r\n    getTestList(){\r\n        if (this.state.testTypeSelected =='none'){\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                while(indexTest >= 0){\r\n                    var test = this.state.testListTemp[index].listTest[indexTest]\r\n                    test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                    result.push(test)\r\n                    indexTest -=1;\r\n                }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        else{\r\n            // console.log(this.state.testTypeSelected)\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n                if (this.state.testListTemp[index].testTypeID == this.state.testTypeSelected) {\r\n                    let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                    while(indexTest >= 0){\r\n                        var test = this.state.testListTemp[index].listTest[indexTest]\r\n                        test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                        result.push(test)\r\n                        indexTest -=1;\r\n                    }\r\n                }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        return this.state.testList\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.testUpdateViewArea}>\r\n            <View style={styles.testUpdateMenuArea}>\r\n                <Picker\r\n                    selectedValue={this.state.versionSelected}\r\n                    style={styles.versionDropdown}\r\n                    onValueChange={(itemValue, itemIndex) => this.setSelectedVersion(itemValue)}                    \r\n                    >\r\n                    {this.state.versionList?this.state.versionList.map(version => (\r\n                        <Picker.Item label={version.versionID} value={version.versionID} key={version.versionID}/>\r\n                    )):null}\r\n                </Picker> \r\n                <View style={{flexDirection: 'row',}}>\r\n                    <Text style={[styles.rowText,{width:79,fontWeight:'bold'}]}>{\"Cập nhật: \"}</Text>\r\n                    <Text style={[styles.rowText,{width:173}]}>{(this.state.versionCreatedTime?convertDateTimeToDate(this.state.versionCreatedTime)+\"   \"+convertDateTimeToTime(this.state.versionCreatedTime):'')}</Text>   \r\n                </View>\r\n                <View style={{flexDirection: 'row',}}>\r\n                    <Text style={[styles.rowText,{width:133,fontWeight:'bold'}]}>{\"Người cập nhật: \"}</Text>  \r\n                    <Text style={[styles.rowText,{width:200}]}>{(this.state.versionCreatorName?this.state.versionCreatorName:'')}</Text> \r\n                </View>\r\n                 \r\n                <TouchableOpacity style={styles.testUpdateConfirmButton} onPress={() => this.callApiUpdateVersion()}>\r\n                    <Text style={{color:'white'}}>Cập nhật</Text>\r\n                </TouchableOpacity>  \r\n            </View>\r\n            \r\n            <View style={styles.testUpdateArea}>\r\n                <View style={styles.testUpdateContainer}>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={[styles.rowText,{fontWeight:'bold'}]}>Loại test: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.testTypeSelectedForCreate}\r\n                            style={styles.testTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                testTypeSelectedForCreate:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label=\"Chọn loại xét nghiệm\" value=\"none\" key='none'/>\r\n                            {this.state.testList?this.state.testList.map(testType => (\r\n                                <Picker.Item label={testType.testTypeName} value={testType.testTypeID} key={testType.testTypeID}/>\r\n                            )):null}\r\n                        </Picker>\r\n                        <TouchableOpacity style={styles.createTestButton} onPress={() => this.createTest()}>\r\n                            <Text style={{color:'white'}}>Tạo bài test</Text>\r\n                        </TouchableOpacity>   \r\n                    </View>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={[styles.rowText,{fontWeight:'bold'}]}>Tên test:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên bài test'}\r\n                            name={\"testName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.testName}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={[styles.rowText,{fontWeight:'bold'}]}>Giá tiền:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập giá tiền (VNĐ)'}\r\n                            name=\"testPrice\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.testPrice}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n\r\n            <View style={styles.testUpdateMenuArea}>\r\n                <Picker\r\n                    selectedValue={this.state.testTypeSelected}\r\n                    style={styles.testTypeDropDown}\r\n                    onValueChange={(itemValue, itemIndex) => this.setState({\r\n                        testTypeSelected:itemValue,\r\n                        dataChanged: !this.state.dataChanged,\r\n                    })}                    \r\n                    >\r\n                    <Picker.Item label=\"Chọn loại xét nghiệm\" value=\"none\" key='none'/>\r\n                    {this.state.testList?this.state.testList.map(testType => (\r\n                        <Picker.Item label={testType.testTypeName} value={testType.testTypeID} key={testType.testTypeID}/>\r\n                    )):null}\r\n                </Picker>\r\n                \r\n                <Text style={[styles.rowText,{width:500}]}>Số lượng: {this.getTestList()?this.getTestList().length:'0'}</Text>\r\n                \r\n            </View>\r\n            {this.state.testListApi?\r\n            <View style={styles.testListFlatListArea}>        \r\n                <FlatList style={styles.testListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getTestList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <TestListItem\r\n                                    testId={item.testID}       \r\n                                    testName={item.testName}                             \r\n                                    testPrice={item.price}\r\n                                    testTypeId={item.testTypeID}  \r\n                                    testTypeName={item.testTypeName}  \r\n                                    updatePrice={this.updatePrice}                                                                   \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n            :<View style={{height:300,flexDirection: 'row',alignItems: 'center',justifyContent: 'center',}}>\r\n                <Text>Hệ thống đang chạy, vui lòng đợi ...</Text>\r\n            </View>}\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testUpdateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    testUpdateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    versionDropdown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 200,\r\n        borderRadius:5,\r\n        marginRight:30,\r\n    },\r\n    testUpdateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    testUpdateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    testUpdateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        \r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    testTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    testUpdateConfirmButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:50,\r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    testListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    testListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, ImageBackground, Picker, TouchableOpacity, Dimensions } from 'react-native';\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            requestId: ''\r\n        }\r\n        this.editProfile = this.editProfile.bind(this)\r\n        this.logOut = this.logOut.bind(this)\r\n        this.searchRequest = this.searchRequest.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    editProfile(){\r\n        if (this.props.userInfo){\r\n            const account= { \r\n            'accountId':this.props.userInfo.id, \r\n            'accountPhoneNumber':this.props.userInfo.phoneNumber,                      \r\n            'accountName':this.props.userInfo.name,\r\n            'accountDob':this.props.userInfo.dob,\r\n            'accountAddress':this.props.userInfo.address,\r\n            'accountPassword':this.props.userInfo.password,\r\n            'accountActive':this.props.userInfo.active,\r\n            'accountEmail':this.props.userInfo.email,\r\n            'accountRole':this.props.userInfo.role,\r\n            'accountGender':this.props.userInfo.gender,\r\n            'accountImageUrl':this.props.userInfo.image,\r\n            'accountTownCode':this.props.userInfo.townCode,\r\n            'accountDistrictCode':this.props.userInfo.districtCode,\r\n            }\r\n            this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n            this.props.changeShowView?this.props.setSelectedAccount(account):null\r\n        }\r\n    }\r\n\r\n    logOut(){\r\n        this.props.changeShowView?this.props.logOut():null\r\n    }\r\n\r\n    searchRequest(){\r\n        this.props.userInfo?this.props.searchRequest(this.state.requestId):null\r\n    }\r\n\r\n    \r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.headerContainer} \r\n            // source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.textArea}>\r\n                <Text>Hệ thống đang chạy, vui lòng đợi ...</Text>\r\n            </View>\r\n            \r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst centerHeight=600\r\nconst WIDTH = Dimensions.get('window').width\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        height:centerHeight,\r\n        width: WIDTH,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    },\r\n    textArea:{\r\n        backgroundColor:''\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions} from 'react-native';\r\n\r\nimport PageHeader from './PageHeader'\r\nimport PageFooter from './PageFooter'\r\n\r\nimport AccountListView from './AccountManagement/AccountListView'\r\nimport AccountCreateView from './AccountManagement/AccountCreateView'\r\nimport AccountView from './AccountManagement/AccountView'\r\nimport AccountChangePasswordView from './AccountManagement/AccountChangePasswordView'\r\n\r\n\r\nimport AppointmentListView from './Appointment/AppointmentListView'\r\nimport AppointmentView from './Appointment/AppointmentView'\r\nimport AppointmentRejectView from './Appointment/AppointmentRejectView'\r\n\r\nimport ArticleListView from './Article/ArticleListView'\r\nimport ArticleAddView from './Article/ArticleAddView'\r\nimport ArticleView from './Article/ArticleView'\r\n\r\nimport LoginView from './Authentication/LoginView'\r\n\r\nimport RequestListView from './Request/RequestListView'\r\nimport RequestView from './Request/RequestView'\r\nimport RequestLostSampleView from './Request/RequestLostSampleView'\r\nimport RequestUpdateResultView from './Request/RequestUpdateResultView'\r\n\r\nimport TestUpdateView from './Test/TestUpdateView'\r\n\r\nimport {getApiUrl} from './Common/CommonFunction'\r\nimport LoadingView from './Common/LoadingView'\r\nimport userList  from './../Data/userList'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            //screen function\r\n            Button1Selected: true,\r\n            Button2Selected: false,\r\n            Button3Selected: false,\r\n            Button4Selected: false,\r\n            Button5Selected: false,\r\n            dataChanged: true,\r\n            showView: 'RequestListView',\r\n\r\n            //authentication\r\n            logIn: false,\r\n            userInfo: null,\r\n            // logIn: true,\r\n            // userInfo: userList[0],\r\n            token: '',\r\n            \r\n            //request\r\n            requestList: null,\r\n            requestListApi: true,\r\n            selectedRequest: null,\r\n\r\n            //appointment\r\n            appointmentList: null,\r\n            appointmentListApi: true,\r\n            selectedAppointment: null,\r\n\r\n            //article\r\n            articleList: null,\r\n            articleListApi: true,\r\n            selectedArticle : null,\r\n\r\n            //test\r\n            testList: [],\r\n            testListApi: true,\r\n            testVersion: '',\r\n\r\n            //account\r\n            userList: null,\r\n            userListApi: true,\r\n            selectedAccount: null,\r\n\r\n            //other data\r\n            districtList: null,\r\n\r\n        };\r\n        this.loginSuccess = this.loginSuccess.bind(this)\r\n        this.logOut = this.logOut.bind(this)\r\n        this.searchRequest = this.searchRequest.bind(this)\r\n        this.menuButtonPress = this.menuButtonPress.bind(this)\r\n        this.changeShowView = this.changeShowView.bind(this)\r\n        this.setSelectedArticle = this.setSelectedArticle.bind(this)\r\n        this.setSelectedRequest = this.setSelectedRequest.bind(this)\r\n        this.setSelectedAppointment = this.setSelectedAppointment.bind(this)\r\n        this.setSelectedAccount = this.setSelectedAccount.bind(this)\r\n        this.updateUserInfo = this.updateUserInfo.bind(this)\r\n        \r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        // console.log(this.state.userInfo)\r\n        // this.callApiRequestList()\r\n        // this.callApiTestList()\r\n        // this.callApiArticleList()\r\n        // this.callApiUserList()\r\n        // this.callApiAppointmentList()\r\n        // this.callApiDistrictList()\r\n        // setInterval(()=>{\r\n        //     console.log('try again')\r\n        //     this.callApiRequestList()\r\n        //     this.callApiArticleList()\r\n        //     this.callApiUserList()\r\n        //     this.callApiAppointmentList()\r\n        // },5000)\r\n    }\r\n\r\n    changeShowView(newView){\r\n        if (newView=='RequestListView') this.menuButtonPress('1')\r\n        if (newView=='AppointmentListView') this.menuButtonPress('2')\r\n        if (newView=='ArticleListView') this.menuButtonPress('3')\r\n        if (newView=='AccountListView') this.menuButtonPress('5')\r\n        this.setState(previousState => ({ \r\n            showView: newView,\r\n        }))\r\n    }\r\n\r\n    setSelectedArticle(_article){        \r\n        this.setState(previousState => ({ \r\n            selectedArticle: _article,\r\n        }))\r\n    }\r\n\r\n    setSelectedRequest(_request){        \r\n        this.setState(previousState => ({ \r\n            selectedRequest: _request,\r\n        }))\r\n    }\r\n\r\n    setSelectedAppointment(_appointment){    \r\n        // console.log(_appointment)    \r\n        this.setState(previousState => ({ \r\n            selectedAppointment: _appointment,\r\n        }))\r\n    }\r\n\r\n    setSelectedAccount(_account){ \r\n        // console.log(_account)       \r\n        this.setState(previousState => ({ \r\n            selectedAccount: _account,\r\n        }))\r\n    }\r\n\r\n    updateUserInfo(_userInfo){\r\n        this.setState(previousState => ({ \r\n            userInfo: _userInfo,\r\n        }))\r\n    }\r\n\r\n    searchRequest(requestId){\r\n        console.log(requestId)\r\n        let request = null\r\n        let index = this.state.requestList.length - 1;\r\n        while (index >= 0) {\r\n            // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n            if (this.state.requestList[index].requestID == requestId) {\r\n                request = this.state.requestList[index]\r\n                console.log(request)\r\n                if(this.state.testVersion != request.versionOfTest){\r\n                    fetch(getApiUrl()+\"/tests/versions/list-all-test/\"+request.versionOfTest,{\r\n                        method: 'GET',\r\n                        headers: {\r\n                            Accept: 'application/json',\r\n                            'Content-Type': 'application/json',\r\n                            Authorization: 'Bearer '+this.state.token,\r\n                        }\r\n                    })\r\n                    .then(res => res.json())\r\n                    .then(\r\n                        (result) => {\r\n                            console.log(result)\r\n                            let success = false\r\n                            let list = []\r\n                            result ? result.message? null : success=true : null;\r\n                            if (success)\r\n                            {\r\n                                this.changeToRequestViewScreen(request,result.lsTests)\r\n                                return false\r\n                            }\r\n                        },            \r\n                        (error) => {\r\n                            console.log(error)\r\n                        }\r\n                    )  \r\n                }\r\n                else this.changeToRequestViewScreen(request,this.state.testList);\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    changeToRequestViewScreen(_request,testList){\r\n        const request= { \r\n            \"requestId\": _request.requestID,\r\n            \"requestCreatedTime\":_request.requestCreatedTime,\r\n            \"customerName\":_request.customerName,\r\n            \"customerPhoneNumber\":_request.customerPhoneNumber,\r\n            \"customerDOB\":_request.customerDOB,\r\n            \"requestAddress\":_request.requestAddress,\r\n            \"requestDistrictName\":_request.requestDistrictName,\r\n            \"requestTownName\": _request.requestTownName,\r\n            \"requestMeetingTime\": _request.requestMeetingTime,\r\n            \"nurseName\":_request.nurseName,\r\n            \"nurseID\":_request.nurseID,\r\n            \"coordinatorName\":_request.coordinatorName,\r\n            \"coordinatorId\":_request.coordinatorID,\r\n            \"lsSelectedTest\":_request.lsSelectedTest,\r\n            \"requestAmount\":_request.requestAmount,\r\n            \"requestStatus\":_request.requestStatus,\r\n            \"testList\":testList,\r\n            \"requestTestVersion\":_request.versionOfTest,\r\n            }\r\n        this.setSelectedRequest(request)\r\n        this.changeShowView('RequestView')\r\n    }\r\n\r\n    loginSuccess(_userInfo,_token){\r\n        this.setState(previousState => ({ \r\n            logIn: true,\r\n            userInfo: _userInfo,\r\n            token: _token,\r\n        }))\r\n        setTimeout(() => {\r\n            this.callApiRequestList()\r\n            this.callApiTestList()\r\n            this.callApiArticleList()\r\n            this.callApiUserList()\r\n            this.callApiAppointmentList()\r\n            this.callApiDistrictList()\r\n        }, 10);\r\n    }\r\n\r\n    logOut(){\r\n        this.setState(previousState => ({ \r\n            logIn: false,\r\n            userInfo: null,\r\n            token: null,\r\n        }))\r\n    }\r\n\r\n    menuButtonPress(button){\r\n        if (button==\"1\") this.callApiRequestList()\r\n        if (button==\"2\") this.callApiAppointmentList()\r\n        if (button==\"3\") this.callApiArticleList()\r\n        if (button==\"5\") this.callApiUserList()\r\n        this.setState(previousState => ({ \r\n            Button1Selected: button==\"1\"?true:false,\r\n            Button2Selected: button==\"2\"?true:false,\r\n            Button3Selected: button==\"3\"?true:false,\r\n            Button4Selected: button==\"4\"?true:false,\r\n            Button5Selected: button==\"5\"?true:false,\r\n            showView:   button==\"1\"? 'RequestListView': \r\n                        button==\"2\"? 'AppointmentListView': \r\n                        button==\"3\"? 'ArticleListView':  \r\n                        button==\"4\"? 'TestUpdateView':  \r\n                        button==\"5\"? 'AccountListView': 'RequestListView'\r\n                        ,\r\n            dataChanged: !this.state.dataChanged,\r\n        }))\r\n    }\r\n\r\n\r\n    callApiRequestList= async () => {\r\n        if(this.state.requestListApi){\r\n            this.setState(previousState => ({\r\n                requestListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/requests/list-all-request\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        requestList: result,\r\n                        requestListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    callApiAppointmentList= async () =>  {\r\n        if(this.state.appointmentListApi){\r\n            this.setState(previousState => ({\r\n                appointmentListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/appointments/list\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        appointmentList: result,\r\n                        appointmentListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    callApiArticleList= async () =>  {\r\n        if(this.state.articleListApi){\r\n            this.setState(previousState => ({\r\n                articleListApi: true,\r\n            }));\r\n            fetch(getApiUrl()+\"/articles/list\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        articleList: result,\r\n                        articleListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    callApiUserList= async () =>  {\r\n        if(this.state.userListApi){\r\n            this.setState(previousState => ({\r\n                userListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/users/list-all-user\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        userList: result,\r\n                        userListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n    \r\n    callApiTestList = async () => {\r\n        if(this.state.testListApi){\r\n            this.setState(previousState => ({\r\n                testListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/tests/versions/lastest-version-test/\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        testList: result.lsTests,\r\n                        testVersion: result.versionID,\r\n                        testListApi: true,\r\n                    }));\r\n                },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )  \r\n        }\r\n    }\r\n\r\n    callApiDistrictList = async () => {\r\n        fetch(getApiUrl()+\"/management/districts/district-town-list\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    districtList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={{flex:1}}>\r\n            <PageHeader userInfo={this.state.userInfo?this.state.userInfo:null} changeShowView={this.state.userInfo?this.changeShowView:null}  setSelectedAccount={this.state.userInfo?this.setSelectedAccount:null} logOut={this.state.userInfo?this.logOut:null} searchRequest={this.searchRequest}/>\r\n            { !this.state.logIn ?\r\n            <LoginView loginSuccess={this.loginSuccess}/>\r\n            :\r\n            <View style={styles.listAreaContainer}>\r\n                <View style={styles.topMenu}>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/parseFloat(5) ,\r\n                        borderWidth: this.state.Button1Selected ? 1:0,\r\n                        backgroundColor: this.state.Button1Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('1')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Yêu cầu xét nghiệm</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/parseFloat(5) ,\r\n                        borderWidth: this.state.Button2Selected ? 1:0,\r\n                        backgroundColor: this.state.Button2Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('2')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Cuộc Hẹn</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/parseFloat(5) ,\r\n                        borderWidth: this.state.Button3Selected ? 1:0,\r\n                        backgroundColor: this.state.Button3Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('3')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Bài đăng</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/parseFloat(5) ,\r\n                        borderWidth: this.state.Button4Selected ? 1:0,\r\n                        backgroundColor: this.state.Button4Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('4')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Test</Text>\r\n                    </TouchableOpacity>\r\n                    {this.state.userInfo.role=='COORDINATOR'? null :\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? 0 : WIDTH/parseFloat(5) ,\r\n                        borderWidth: this.state.Button5Selected ? 1:0,\r\n                        backgroundColor: this.state.Button5Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('5')}\r\n                        >\r\n                        <Text style={styles.topMenuText}>Quản lý tài khoản</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                </View>                \r\n                <View style={{width:'100%',flex:1,backgroundColor:''}}>\r\n                {\r\n                    this.state.showView == 'RequestListView'? this.state.requestListApi?\r\n                    <RequestListView requestList={this.state.requestList} testVersion={this.state.testVersion} changeShowView={this.changeShowView} setSelectedRequest={this.setSelectedRequest} districtList={this.state.districtList} token={this.state.token}/>: <LoadingView  />\r\n                    : this.state.showView == 'AppointmentListView'? this.state.appointmentListApi?\r\n                    <AppointmentListView appointmentList={this.state.appointmentList} changeShowView={this.changeShowView} setSelectedAppointment={this.setSelectedAppointment} districtList={this.state.districtList}/>: <LoadingView  />\r\n                    : this.state.showView == 'ArticleListView'? this.state.articleListApi?\r\n                    <ArticleListView  articleList={this.state.articleList} changeShowView={this.changeShowView} setSelectedArticle={this.setSelectedArticle}/>: <LoadingView  />\r\n                    : this.state.showView == 'TestUpdateView'?\r\n                    <TestUpdateView  testList={this.state.testList} userInfo={this.state.userInfo} token={this.state.token}/>\r\n                    : this.state.showView == 'AccountListView'? this.state.userListApi?\r\n                    <AccountListView userList={this.state.userList}  changeShowView={this.changeShowView} setSelectedAccount={this.setSelectedAccount}/>: <LoadingView  />\r\n                    // sub screen\r\n                    //request\r\n                    : this.state.showView == 'RequestView'?\r\n                    <RequestView  request={this.state.selectedRequest} testList={this.state.testList} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'RequestLostSampleView'?\r\n                    <RequestLostSampleView  request={this.state.selectedRequest} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'RequestUpdateResultView'?\r\n                    <RequestUpdateResultView  request={this.state.selectedRequest} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    //appointment\r\n                    : this.state.showView == 'AppointmentView'?\r\n                    <AppointmentView  appointment={this.state.selectedAppointment} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'AppointmentRejectView'?\r\n                    <AppointmentRejectView appointment={this.state.selectedAppointment} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    //article\r\n                    : this.state.showView == 'ArticleAddView'?\r\n                    <ArticleAddView   token={this.state.token}  userInfo={this.state.userInfo} changeShowView={this.changeShowView} />\r\n                    : this.state.showView == 'ArticleView'?\r\n                    <ArticleView  article={this.state.selectedArticle} />\r\n                    //account\r\n                    : this.state.showView == 'AccountCreateView'?\r\n                    <AccountCreateView  districtList={this.state.districtList} token={this.state.token}/>\r\n                    : this.state.showView == 'AccountView'?\r\n                    <AccountView  districtList={this.state.districtList}  account={this.state.selectedAccount} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo}/>\r\n                    : this.state.showView == 'AccountChangePasswordView'?\r\n                    <AccountChangePasswordView account={this.state.selectedAccount} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo} />\r\n                    : <View/>\r\n                    \r\n                }\r\n                </View>\r\n                <PageFooter/>\r\n            </View>\r\n            }\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst menuHeight= 50\r\n\r\nconst styles = StyleSheet.create({\r\n    listAreaContainer: {\r\n        flex: 1,\r\n        width: Dimensions.get('window').width,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    topMenu:{\r\n        height: menuHeight,\r\n        width: Dimensions.get('window').width,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor:'white'\r\n    },\r\n    topMenuButton:{\r\n        width: Dimensions.get('window').width/parseFloat(5),\r\n        height: menuHeight,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    topMenuText:{\r\n        fontSize:18,\r\n    }\r\n\r\n});\r\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport ListScreen from './components/ListScreen'\n\nexport default function App() {\n  return (\n      <ListScreen/>\n    // <View style={styles.container}>\n    //   <Text>Open up App.js to start working on your app!</Text>\n    // </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/MedTestForCoordinator/expo-service-worker.js', { scope: '/MedTestForCoordinator/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}