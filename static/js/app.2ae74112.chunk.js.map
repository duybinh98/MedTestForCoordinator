{"version":3,"sources":["Data/Group 1.png","Data/ABClinic.jpg","Data/userList.js","components/Common/CommonFunction.js","components/PageHeader.js","components/PageFooter.js","components/AccountManagement/AccountListViewItem.js","components/AccountManagement/AccountListView.js","components/AccountManagement/AccountCreateView.js","components/AccountManagement/AccountView.js","components/AccountManagement/AccountChangePasswordView.js","components/Appointment/AppointmentListViewItem.js","components/Appointment/AppointmentListView.js","components/Common/AlertScreen.js","components/Appointment/AppointmentView.js","components/Appointment/AppointmentRejectView.js","components/Article/ArticleListViewItem.js","components/Article/ArticleListView.js","components/Article/ArticleAddView.js","components/Article/ArticleView.js","components/Authentication/LoginView.js","components/Request/RequestListViewItem.js","components/Request/RequestListView.js","components/Request/RequestTestViewItem.js","components/Request/RequestTestCategoryItem.js","components/Request/RequestView.js","components/Request/RequestLostSampleView.js","components/Request/RequestUpdateResultView.js","components/Test/TestListItem.js","components/Test/TestUpdateView.js","components/Common/LoadingView.js","components/ListScreen.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","convertDateTimeToDate","inputString","substring","convertDateTimeToTime","convertDateToDateTime","inputDate","screenWidth","Dimensions","get","width","getRoleName","role","convertMoney","_price","price","toString","index","length","result","getStateName","status","getAppointmentStateName","ListScreen","props","state","requestId","errorMessage","editProfile","bind","logOut","searchRequest","handleChange","this","userInfo","account","id","phoneNumber","name","dob","address","password","active","email","gender","image","townCode","districtCode","changeShowView","setSelectedAccount","setState","setTimeout","event","target","value","ImageBackground","style","styles","headerContainer","resizeMode","View","leftArea","Image","imageIcon","source","require","leftContainer","titleContainer","Text","fontSize","fontWeight","color","hotlineContainer","middleArea","TextInput","searchInputContainer","placeholder","onChange","onSubmitEditing","padding","rightArea","rightContainer","TouchableOpacity","onPress","height","uri","nameContainer","Component","StyleSheet","create","flexDirection","alignItems","justifyContent","backgroundColor","paddingLeft","marginBottom","borderWidth","marginTop","borderRadius","headerHight","footerContainer","textContainer","middleContainer","paddingRight","alignSelf","AccountListViewItem","onAccountPress","accountId","accountPhoneNumber","accountName","accountDob","accountAddress","accountPassword","accountActive","accountEmail","accountRole","accountGender","accountImageUrl","accountTownCode","accountDistrictCode","accountListItem","accountNameContainer","accountPhoneContainer","accountRoleContainer","paddingBottom","margin","marginRight","AccountListScreen","Button1Selected","Button2Selected","Button3Selected","Button4Selected","accountSelected","inputPhoneNumber","isSearch","userList","dataChanged","menuButtonPress","getAccountShowList","searchUser","push","button","previousState","Button5Selected","prevProps","prevState","articleListArea","accountListTopMenuArea","accountListTopMenuContainer","topMenuTextInput","createNewAccountButton","topMenuButton","roleSelectedColor","topMenuText","articleListFlatListArea","articleListFlatListTitleArea","articleListFlatListTitleContainer","articleListTitleNameContainer","articleListTitleText","articleListTitlePhoneContainer","articleListTitleRoleContainer","FlatList","articleListFlatList","contentContainerStyle","showsVerticalScrollIndicator","data","extraData","keyExtractor","item","renderItem","flex","paddingTop","componentWidth","TestListView","selectPicture","a","async","ImagePicker","console","log","cancelled","callApiUploadImage","accountRePassword","districtList","townList","listTown","districtSelected","townSelected","year","Date","getFullYear","month","getMonth","day","getDate","accountImage","error","errorList","onDistrictChange","createNumberPickerList","getNumberOfDayInMonth","createAccount","districtId","getFebDay","start","end","startToEnd","i","Picker","Item","label","parseInt","checkValid","callApiCreateAccount","fetch","getApiUrl","method","headers","Accept","Authorization","token","body","JSON","stringify","getDob","then","res","json","success","message","_data","accountCreateViewArea","accountCreateMenuArea","rowText","accountCreateArea","accountCreateContainer","imagePreviewArea","accountCreateRowContainer","imagePreview","rowTextInput","selectedValue","accountTypeDropDown","onValueChange","itemValue","itemIndex","secureTextEntry","map","district","districtName","town","townName","rowTextError","accountCreateConfirmButton","createTestButton","marginLeft","accountListFlatListArea","accountListFlatList","addImageButton","updateAccountInformation","resetPassword","checkCurrentUser","checkAdmin","changePassword","getDistrictName","getTownName","userProcessingID","callApiUpdateAccountInfo","updateUserInfo","indexTown","accountViewArea","accountMenuArea","accountArea","accountContainer","accountRowContainer","rowTextLong","buttonArea","accountOldPassword","callApiChangePassword","url","oldPassword","newPassword","AppointmentListView","onAppointmentPress","appointment","appointmentId","appointmentCreatedTime","customerName","customerPhoneNumber","customerDOB","appointmentMeetingTime","appointmentStatus","setSelectedAppointment","appointmentListItem","appointmentTextContainer","appointmentListFirstColumnContainer","appointmentListSecondColumnContainer","borderStyle","districtsList","statusSelected","testsList","appointmentList","getAppointmentShowList","requestDistrictID","appointment_status","appointmentListArea","appointmentListTopMenuArea","appointmentListTopMenuContainer","appointmentTypeDropdown","appointmentListFlatListArea","appointmentListFlatList","appointment_id","appointment_createdTime","appointment_customerName","appointment_phoneNumber","appointment_DOB","appointment_meetingTime","container","alertContainer","title","content","onCancel","onConfirm","AppointmentView","onAccept","onReject","callApiAcceptAppointment","coordinatorID","note","appointmentViewArea","appointmentTopMenuArea","appointmentArea","appointmentContainer","appointmentRowContainer","rowFirstContainer","rowSecondContainer","AppointmentLostSampleView","reason","rejectAppointment","callApiRejectAppointment","multiline","numberOfLines","appointmentConfirmButton","appointmentTypeDropDown","ArticleListViewItem","onArticlePress","article","articleId","articleTitle","articleContent","articleShortContent","articleImageUrl","userId","articleCreatedTime","creatorName","setSelectedArticle","articleListItem","articleImageContainer","articleImage","articleTextContainer","articleTextContentContainer","articleTitleContainer","articleCreateTimeContainer","articleShortContentContainer","textAlign","articleTextCreatorNameContainer","articleCreatorNameContainer","ArticleListScreen","articleList","onAddArticlePress","articleListTopMenuArea","createNewArticleButton","tittle","shortContent","userID","createdTime","ArticleAddView","imageResultUri","createArticle","callApiCreateArticle","articleAddViewArea","articleAddTopMenuArea","articleAddArea","articleAddContainer","articleAddRowContainer","articleAddConfirmButton","articleTypeDropDown","ArticleView","imageUri","imageType","articleViewArea","articleArea","articleContainer","articleRowContainer","rowImage","articleTopMenuArea","Login","callApiLogin","loginSuccess","loginViewArea","rowContainer","login","loginButton","RequestListPendingItem","onRequestPress","testList","request","requestCreatedTime","requestAddress","requestDistrictName","requestTownName","requestMeetingTime","nurseName","nurseId","coordinatorId","coordinatorName","lsSelectedTest","requestAmount","requestStatus","requestTestVersion","setSelectedRequest","checkVersion","changeToRequestViewScreen","testVersion","lsTests","requestListItem","requestListTextContainer","requestListFirstColumnContainer","requestListSecondColumnContainer","RequestListView","requestList","requestShowList","requestCount","getRequestShowList","requestListArea","requestListTopMenuArea","requestListTopMenuContainer","requestTypeDropdown","requestListFlatListArea","requestListFlatList","requestID","nurseID","versionOfTest","RequestTestViewItem","testItem","testName","testPrice","RequestTestCategoryItem","visible","isVisible","test","forEach","isSelected","testID","countHide","testCategoryItem","testCategoryNameContainer","categoryName","TestListAreaScrollView","scrollEnabled","math","borderColor","RequestView","resultList","getLeftButtonName","getRightButtonName","onLeftButtonPress","onRightButtonPress","callApiTakingSample","callApiResultList","findIndex","onLostSample","onTakingSample","onUpdateResult","requestViewArea","requestTopMenuArea","requestArea","requestContainer","requestRowContainer","rowFlatList","testTypeName","listTest","aspectRatio","RequestLostSampleView","lostSample","callApiLostSample","requestConfirmButton","requestTypeDropDown","RequestUpdateResultView","imageUriList","requestTitle","requestShortContent","requestContent","completeUpdateResult","callApiSetResultImage","tempList","imageList","listImage","callApiUpdateRequest","requestAddViewArea","requestAddTopMenuArea","requestAddArea","requestAddContainer","requestAddConfirmButton","updatePrice","testId","testListItem","testTextContainer","testListFirstColumnContainer","testListSecondColumnContainer","TestUpdateView","callApiUpdateVersion","testListTemp","indexTest","creatorID","lsInputTest","callApiGetVersionList","versionSelected","versionCreatedTime","versionCreatorName","testTypeSelected","testTypeSelectedForCreate","testListApi","testVersionApi","versionList","newTestId","createTest","getTestList","setSelectedVersion","versionID","callApiGetTestList","isNaN","newPrice","testType","versionId","version","testTypeID","testUpdateViewArea","testUpdateMenuArea","versionDropdown","key","testUpdateConfirmButton","testAddArea","testUpdateContainer","testUpdateRowContainer","testTypeDropDown","testListFlatListArea","testListFlatList","testTypeId","textArea","callApiRequestList","requestListApi","callApiAppointmentList","appointmentListApi","callApiArticleList","articleListApi","callApiUserList","userListApi","callApiTestList","callApiDistrictList","showView","logIn","selectedRequest","selectedAppointment","selectedArticle","selectedAccount","newView","_article","_request","_appointment","_account","_userInfo","userPhoneNumber","changeToAccountViewScreen","_token","listAreaContainer","topMenu","parseFloat","App","navigator","window","addEventListener","serviceWorker","register","scope","info","catch"],"mappings":"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","file":"static/js/app.2ae74112.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Group 1.656244df.png\";","module.exports = __webpack_public_path__ + \"static/media/ABClinic.013acc21.jpg\";","var userList = [\r\n    {\r\n        \"id\":1,\r\n        \"phoneNumber\":\"0000000000\",\r\n        \"name\":\"Lam Phan\",\r\n        \"dob\":\"1970-01-01T00:00:00.000+0000\",\r\n        \"address\":\"Default-Address\",\r\n        \"password\":\"$2a$10$Rqs8uzm/mZzJHWABOeOi7OuqyPsptBgWNL5k7Cf9bDnWpRL4gSfbW\",\r\n        \"active\":1,\r\n        \"email\":\"medtest.default@gmail.com\",\r\n        \"role\":\"COORDINATOR\",\r\n        \"gender\":0,\r\n        \"image\":\"https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png\",\r\n        \"townCode\":\"T0\",\r\n        \"districtCode\":\"D0\"\r\n    },\r\n    {\r\n        \"id\":2,\r\n        \"phoneNumber\":\"0000000001\",\r\n        \"name\":\"DefaultCoordinator\",\r\n        \"dob\":\"1970-01-01T00:00:00.000+0000\",\r\n        \"address\":\"Default-Address\",\r\n        \"password\":\"$2a$10$Rqs8uzm/mZzJHWABOeOi7OuqyPsptBgWNL5k7Cf9bDnWpRL4gSfbW\",\r\n        \"active\":1,\r\n        \"email\":\"medtest.default@gmail.com\",\r\n        \"role\":\"ADMIN\",\r\n        \"gender\":0,\r\n        \"image\":\"https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png\",\r\n        \"townCode\":\"T0\",\r\n        \"districtCode\":\"D0\"\r\n    },\r\n]\r\n\r\n\r\nmodule.exports = userList;\r\n","import {Dimensions} from 'react-native';\r\n\r\nexport function convertDateTimeToDate(inputString){\r\n    if (inputString == null ) return ''\r\n    return inputString.substring(8,10)+'-'+inputString.substring(5,7)+'-'+inputString.substring(0,4);\r\n}\r\n\r\nexport function convertDateTimeToTime(inputString){\r\n    if (inputString == null ) return ''\r\n    return inputString.substring(11,13)+':'+inputString.substring(14,16);\r\n}\r\n\r\nexport function convertDateAndTimeToDateTime(inputDate,inputTime){\r\n    return inputDate.substring(6,10)+'-'+inputDate.substring(3,5)+'-'+inputDate.substring(0,2)+'T'+inputTime+':00.000+0000'\r\n}\r\n\r\nexport function convertDateToDateTime(inputDate){\r\n    return inputDate.substring(6,10)+'-'+inputDate.substring(3,5)+'-'+inputDate.substring(0,2)+'T00:00:00.000+0000'\r\n}\r\n\r\nexport function getApiUrl(){\r\n    // return \"http://192.168.1.17:8080\";\r\n    return \"https://medtest-backend.herokuapp.com\";\r\n}\r\n\r\nexport const componentWidth = 1100\r\n\r\nexport const screenWidth =  Dimensions.get('window').width<1201?1200:\r\n                            // Dimensions.get('window').width<1269?1268:\r\n                            // Dimensions.get('window').width<1350?1349:\r\n                            // Dimensions.get('window').width<1367?1366:\r\n                            // Dimensions.get('window').width<1537?1536:\r\n                            // Dimensions.get('window').width<1921?1920:\r\n                            Dimensions.get('window').width\r\n\r\nexport function getRoleName(role){\r\n    switch (role) {\r\n        case 'CUSTOMER':\r\n            return 'Khách hàng';\r\n            break;\r\n        case 'NURSE':\r\n            return 'Y tá';\r\n            break;\r\n        case 'COORDINATOR':\r\n            return 'Điều phối viên'\r\n            break;\r\n        case 'ADMIN':\r\n            return 'Quản trị hệ thống'\r\n            break;\r\n        }   \r\n    }\r\n\r\n\r\nexport function convertMoney(_price){\r\n    let price = _price.toString()\r\n    let index = price.length -1\r\n    let result = ''\r\n    while (index >= 3) {\r\n        // console.log(price+\": \"+price.substring(index-2,index+1)+', '+index)\r\n        result = '.'+price.substring(index-2,index+1)+result\r\n        index-=3\r\n    }\r\n    result = price.substring(0,index+1)+result\r\n    return result\r\n}\r\n\r\nexport function getStateName(status){\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'Đang đợi y tá nhận đơn';\r\n            break;\r\n        case 'coordinatorlostsample':\r\n            return 'Điều phối viên làm mất mẫu';\r\n            break;\r\n        case 'accepted':\r\n            return 'Đang đợi lấy mẫu';\r\n            break;\r\n        case 'transporting':\r\n            return 'Đang vận chuyển mẫu';\r\n            break;\r\n        case 'lostsample':\r\n            return 'Đang đợi lấy lại mẫu';\r\n            break;\r\n        case 'waitingforresult':\r\n            return 'Đang đợi kết quả';\r\n            break;\r\n        case 'closed':\r\n            return 'Đã xong';\r\n            break;\r\n        case 'canceled':\r\n            return 'Đã bị hủy';\r\n            break;\r\n        case 'reaccepted':\r\n            return 'Đã nhận đơn bị mất do điều phối viên';\r\n            break;\r\n        case 'retransporting':\r\n            return 'Đang vận chuyển đơn bị mất do điều phối viên';\r\n            break;\r\n        case 'relostsample':\r\n            return 'Đang đợi lấy lại mẫu do điều phối viên làm mất';\r\n            break;\r\n        \r\n    } \r\n}\r\n\r\n\r\nexport function getAppointmentStateName(status){\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'Đơn đang đợi xử lý';\r\n            break;\r\n        case 'accepted':\r\n            return 'Đơn đã được chấp nhận';\r\n            break;\r\n        case 'rejected':\r\n            return 'Đơn đã bị từ chối';\r\n            break;\r\n        case 'canceled':\r\n            return 'Đơn đã bị hủy';\r\n            break;\r\n        \r\n        } \r\n    }\r\n\r\n\r\n\r\nexport function getStateColor(status){\r\n        switch (status) {\r\n        case 'pending':\r\n            return '#ffd66f';\r\n            break;\r\n        case 'coordinatorlostsample':\r\n            return '#ffd66f';\r\n            break;\r\n        case 'accepted':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'transporting':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'lostsample':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'waitingforresult':\r\n            return '#6398d6';\r\n            break;\r\n        case 'closed':\r\n            return '#000';\r\n            break;\r\n        \r\n        } \r\n    }","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, ImageBackground, Picker, TouchableOpacity, Dimensions } from 'react-native';\r\nimport {screenWidth} from './Common/CommonFunction'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            requestId: '',\r\n            errorMessage: '',\r\n        }\r\n        this.editProfile = this.editProfile.bind(this)\r\n        this.logOut = this.logOut.bind(this)\r\n        this.searchRequest = this.searchRequest.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    editProfile(){\r\n        if (this.props.userInfo){\r\n            const account= { \r\n            'accountId':this.props.userInfo.id, \r\n            'accountPhoneNumber':this.props.userInfo.phoneNumber,                      \r\n            'accountName':this.props.userInfo.name,\r\n            'accountDob':this.props.userInfo.dob,\r\n            'accountAddress':this.props.userInfo.address,\r\n            'accountPassword':this.props.userInfo.password,\r\n            'accountActive':this.props.userInfo.active,\r\n            'accountEmail':this.props.userInfo.email,\r\n            'accountRole':this.props.userInfo.role,\r\n            'accountGender':this.props.userInfo.gender,\r\n            'accountImageUrl':this.props.userInfo.image,\r\n            'accountTownCode':this.props.userInfo.townCode,\r\n            'accountDistrictCode':this.props.userInfo.districtCode,\r\n            }\r\n            this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n            this.props.changeShowView?this.props.setSelectedAccount(account):null\r\n        }\r\n    }\r\n\r\n    logOut(){\r\n        this.props.changeShowView?this.props.logOut():null\r\n    }\r\n\r\n    searchRequest(){\r\n        let result = this.props.userInfo?this.props.searchRequest(this.state.requestId):''\r\n        this.setState({\r\n            errorMessage: result,\r\n            requestId: ''\r\n            });\r\n        setTimeout(() => {\r\n            this.setState({errorMessage: ''});\r\n        }, 2500);\r\n    }\r\n\r\n    \r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.headerContainer} \r\n            // source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.leftArea}>\r\n                <Image \r\n                    style={styles.imageIcon}\r\n                    source={require('./../Data/Group 1.png')}>\r\n                </Image>\r\n                <View style={styles.leftContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:25, fontWeight:'bold',color:'white'}}>MedTest</Text>\r\n                    </View>\r\n                    <View style={styles.hotlineContainer}>\r\n                        <Text style={{fontSize:14}}>Hotline: 1900561252</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.middleArea}>\r\n                {this.props.userInfo?\r\n                <View>\r\n                <TextInput style={styles.searchInputContainer}\r\n                placeholder={'Tìm xét nghiệm'}\r\n                name=\"requestId\"\r\n                onChange={this.handleChange}\r\n                value={this.state.requestId}\r\n                onSubmitEditing={() => this.searchRequest()}\r\n                >                \r\n                </TextInput>\r\n                <Text style={{color:'white',padding:7}}>{this.state.errorMessage}</Text>\r\n                </View>\r\n                :<View/>\r\n                }\r\n            </View>\r\n            <View style={styles.rightArea}>\r\n                {this.props.userInfo?\r\n                <View style={styles.rightContainer}>\r\n                    <TouchableOpacity style={{}} onPress={() => this.editProfile()}>\r\n                        <Image \r\n                            style={{\r\n                                width:100,\r\n                                height:100,\r\n                            }}\r\n                            source={{uri:this.props.userInfo?this.props.userInfo.image:''}}>\r\n                            \r\n                        </Image>\r\n                    </TouchableOpacity>\r\n                    <View style={styles.nameContainer} >\r\n                        <Text style={{fontSize:14,color:'white'}}>{this.props.userInfo?this.props.userInfo.name:''}</Text>\r\n                    </View>\r\n                    <TouchableOpacity style={styles.nameContainer} onPress={() => this.logOut()}>\r\n                        <Text style={{fontSize:14,color:'white'}}>{this.props.userInfo?'Đăng xuất':''} </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                :null}\r\n            </View>\r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst headerHight=185\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        height:headerHight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#25345D',\r\n\r\n    },\r\n    leftArea:{\r\n        height:headerHight,\r\n        width:300,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        padding:20,\r\n        \r\n    },\r\n    imageIcon:{\r\n        width:100,\r\n        height:100,\r\n        // marginTop:5\r\n    },\r\n    leftContainer:{\r\n        height:headerHight,\r\n        width:180,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',    \r\n        backgroundColor:'',\r\n        paddingLeft:20,\r\n\r\n    },\r\n    titleContainer:{\r\n        width:100,\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        backgroundColor:'',\r\n        marginBottom:10,\r\n    },\r\n    hotlineContainer:{\r\n        height:35,\r\n        width:150,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        marginTop:10,\r\n    },\r\n    middleArea:{\r\n        height:headerHight,\r\n        // flex:1,\r\n        width: screenWidth-600,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:''\r\n    },\r\n    searchInputContainer:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:25,\r\n    },\r\n    rightArea:{\r\n        height:headerHight,\r\n        width:300,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:'',\r\n    },\r\n    rightContainer:{\r\n        height:headerHight-10,\r\n        width:200,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        padding:0,\r\n        backgroundColor:'',\r\n    },\r\n    nameContainer:{\r\n        height:30,\r\n        width:140,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, ImageBackground, Picker, TouchableOpacity, Dimensions } from 'react-native';\r\nimport {screenWidth} from './Common/CommonFunction'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.footerContainer} \r\n            // source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.leftArea}>                \r\n                <View style={styles.leftContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>TRỤ SỞ HÀ NỘI</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>159 B Lê Thanh Nghị, Hai Bà Trưng, Hà Nội</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.middleArea}>\r\n                <View style={styles.middleContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>CHỊU TRÁCH NHIỆM QUẢN LÝ NỘI DUNG</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Bác sĩ Nguyễn Trần Kiên</Text>\r\n                    </View>\r\n                    <View style={[styles.titleContainer,{marginTop:15}]}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>HỢP TÁC TRUYỀN THÔNG</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Liên hệ: 096 159 1593</Text>\r\n                    </View>\r\n                    <View style={[styles.titleContainer,{marginTop:15}]}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>LIÊN HỆ QUẢNG CÁO</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>medtest.default@gmail.com</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.rightArea}>\r\n                \r\n                <View style={styles.rightContainer}>\r\n                    <Image \r\n                        style={styles.imageIcon}\r\n                        source={require('./../Data/ABClinic.jpg')}>\r\n                    </Image>\r\n                    {/* <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:14, fontWeight:'',color:'white'}}>© Copyright 2007 - 2020 – </Text>\r\n                        <Text style={{fontSize:14, fontWeight:'bold',color:'white'}}>CÔNG TY CỔ PHẦN VCCORP</Text>\r\n                    </View> */}\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Tầng 17, 19, 20, 21 Tòa nhà Center Building - Hapulico Complex, Số 1 Nguyễn Huy Tưởng, Thanh Xuân, Hà Nội.</Text>\r\n                    </View>\r\n                    {/* <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Giấy phép số 2215/GP-TTĐT do Sở Thông tin và Truyền thông Hà Nội cấp ngày 10 tháng 4 năm 2019</Text>\r\n                    </View> */}\r\n                </View>\r\n                \r\n            </View>\r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst footerHeight=200\r\n\r\nconst styles = StyleSheet.create({\r\n    footerContainer: {\r\n        height:footerHeight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#25345D',\r\n    },\r\n    leftArea:{\r\n        height:footerHeight,\r\n        width:500,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        padding:20,\r\n    },\r\n    leftContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        paddingLeft:100,\r\n        paddingRight:50,\r\n\r\n    },\r\n    middleArea:{\r\n        height:footerHeight,\r\n        width: 500,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        padding:20,\r\n        backgroundColor:''\r\n    },\r\n    middleContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        paddingLeft:100,\r\n        paddingRight:100,\r\n    },\r\n    searchInputContainer:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:25,\r\n    },\r\n    rightArea:{\r\n        height:footerHeight,\r\n        width:500,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:'',\r\n    },\r\n    rightContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start', \r\n        paddingLeft:50,\r\n        paddingRight:100,\r\n        backgroundColor:'',\r\n    },\r\n    nameContainer:{\r\n        height:30,\r\n        width:140,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    },\r\n    imageIcon:{\r\n        width:50,\r\n        height:50,\r\n        marginTop:5\r\n    },\r\n    titleContainer:{\r\n        height:20,\r\n        width:'100%',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        backgroundColor:''\r\n    },\r\n    textContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        marginTop:8,\r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getRoleName, componentWidth} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class AccountListViewItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            // appointment_date: convertDateTimeToDate(this.props.appoint_date),\r\n            // appointment_time: convertDateTimeToTime(this.props.appoint_date),\r\n        };\r\n        this.onAccountPress = this.onAccountPress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n\r\n    onAccountPress(){\r\n        const account= { \r\n            'accountId':this.props.accountId, \r\n            'accountPhoneNumber':this.props.accountPhoneNumber,                      \r\n            'accountName':this.props.accountName,\r\n            'accountDob':this.props.accountDob,\r\n            'accountAddress':this.props.accountAddress,\r\n            'accountPassword':this.props.accountPassword,\r\n            'accountActive':this.props.accountActive,\r\n            'accountEmail':this.props.accountEmail,\r\n            'accountRole':this.props.accountRole,\r\n            'accountGender':this.props.accountGender,\r\n            'accountImageUrl':this.props.accountImageUrl,\r\n            'accountTownCode':this.props.accountTownCode,\r\n            'accountDistrictCode':this.props.accountDistrictCode,\r\n            }\r\n        // console.log(account)\r\n        this.props.setSelectedAccount?this.props.setSelectedAccount(account):null\r\n        this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.accountListItem}\r\n                onPress={() => this.onAccountPress()}\r\n                >\r\n                <View style={styles.accountNameContainer}>                                       \r\n                <Text style={{fontSize:17}}>{this.props.accountName}</Text>\r\n                </View>\r\n                <View style={styles.accountPhoneContainer}>                                       \r\n                <Text style={{fontSize:17}}>{this.props.accountPhoneNumber}</Text>\r\n                </View>\r\n                <View style={styles.accountRoleContainer}>                                       \r\n                <Text style={{fontSize:17}}>{getRoleName(this.props.accountRole)}</Text>  \r\n                </View>\r\n                     \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    accountListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingBottom:2,  \r\n    },\r\n    accountNameContainer:{\r\n        margin:10,\r\n        width:350,\r\n        alignItems: 'center',\r\n        marginRight:150,\r\n    },\r\n    accountPhoneContainer:{\r\n        margin:10,\r\n        width:200,\r\n        marginRight:100,\r\n        alignItems: 'center',\r\n    },\r\n    accountRoleContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n    },\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput} from 'react-native';\r\nimport {getApiUrl, componentWidth} from './../Common/CommonFunction'\r\nimport AccountListViewItem from './AccountListViewItem'\r\n\r\nexport default class AccountListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            Button1Selected: true,\r\n            Button2Selected: false,\r\n            Button3Selected: false,\r\n            Button4Selected: false,\r\n            Button4Selected: false,\r\n            accountSelected: 'all',\r\n            inputPhoneNumber: '',\r\n            isSearch: false,\r\n            userList: this.props.userList?this.props.userList:[],\r\n            dataChanged: true,\r\n        };\r\n        this.menuButtonPress = this.menuButtonPress.bind(this)\r\n        this.getAccountShowList = this.getAccountShowList.bind(this)\r\n        this.searchUser = this.searchUser.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    // componentDidUpdate  (prevProps, prevState) {        \r\n    //      if (prevProps !== this.props) {\r\n    //         this.setState(previousState => ({ \r\n    //             userList: this.props.userList,\r\n    //         }));\r\n    //     }\r\n    // }\r\n    \r\n    getAccountShowList(){\r\n        if (this.state.isSearch){\r\n            let result = []\r\n            let index = this.state.userList.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.userList[index].phoneNumber === this.state.inputPhoneNumber && \r\n                    (this.state.accountSelected=='all' || this.state.userList[index].role === this.state.accountSelected ) ) {\r\n                    result.push(this.state.userList[index]);\r\n                    }\r\n                index -= 1;\r\n            }\r\n            return result;\r\n        }\r\n        if (this.state.accountSelected=='all'){\r\n            return this.state.userList\r\n        }\r\n        else{\r\n            let result = []\r\n            let index = this.state.userList.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.userList[index].role === this.state.accountSelected) {\r\n                    result.push(this.state.userList[index]);\r\n                    }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        return this.state.userList\r\n    }\r\n\r\n\r\n\r\n\r\n    menuButtonPress(button){\r\n        this.setState(previousState => ({ \r\n            Button1Selected: button==\"1\"?true:false,\r\n            Button2Selected: button==\"2\"?true:false,\r\n            Button3Selected: button==\"3\"?true:false,\r\n            Button4Selected: button==\"4\"?true:false,\r\n            Button5Selected: button==\"5\"?true:false,\r\n            accountSelected: button==\"1\"? 'all': button==\"2\"? 'COORDINATOR': button==\"3\"? 'NURSE' : button==\"4\"? 'CUSTOMER': 'ADMIN',\r\n            dataChanged: !this.state.dataChanged,\r\n            isSearch: false,\r\n            inputPhoneNumber: '',\r\n        }))\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                userList: this.props.userList,\r\n                dataChanged: !this.state.dataChanged,\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    searchUser(){\r\n        // this.props.searchUser?this.props.searchUser(this.state.inputPhoneNumber):null\r\n        this.setState(previousState => ({ \r\n            dataChanged: !this.state.dataChanged,\r\n            isSearch: true,\r\n        }))\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleListArea}>\r\n            <View style={styles.accountListTopMenuArea}>\r\n                <View style={styles.accountListTopMenuContainer}>\r\n                    <TextInput style={styles.topMenuTextInput}\r\n                    placeholder={'Tìm kiếm tài khoản theo số điện thoại'}\r\n                    name=\"inputPhoneNumber\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.inputPhoneNumber}\r\n                    onSubmitEditing={() => this.searchUser()}\r\n                    >                \r\n                    </TextInput>\r\n                    <TouchableOpacity \r\n                        style={styles.createNewAccountButton} \r\n                        onPress={() => this.props.changeShowView ? this.props.changeShowView('AccountCreateView'): null}\r\n                        >\r\n                        <Text style={{color:'white'}}>Tạo tài khoản nhân viên</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={[styles.accountListTopMenuContainer,{\r\n                    }]}>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button1Selected ? 1:0,\r\n                        backgroundColor: this.state.Button1Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('1')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Tất cả</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button2Selected ? 1:0,\r\n                        backgroundColor: this.state.Button2Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('2')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Điều phối viên</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button3Selected ? 1:0,\r\n                        backgroundColor: this.state.Button3Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('3')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Y tá</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button4Selected ? 1:0,\r\n                        backgroundColor: this.state.Button4Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('4')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Khách hàng</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button5Selected ? 1:0,\r\n                        backgroundColor: this.state.Button5Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('5')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Quản trị hệ thống</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={styles.accountListTopMenuContainer}>\r\n                    <Text >Số lượng: {this.getAccountShowList()?this.getAccountShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.articleListFlatListArea}>     \r\n                <View style={styles.articleListFlatListTitleArea}> \r\n                    <View style={styles.articleListFlatListTitleContainer}> \r\n                        <View style={styles.articleListTitleNameContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Tên người dùng</Text>\r\n                        </View>\r\n                        <View style={styles.articleListTitlePhoneContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Số điện thoại</Text>\r\n                        </View>\r\n                        <View style={styles.articleListTitleRoleContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Vị trí</Text>  \r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <FlatList style={styles.articleListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getAccountShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <AccountListViewItem\r\n                                    accountId={item.id}         \r\n                                    accountPhoneNumber={item.phoneNumber}                            \r\n                                    accountName={item.name}    \r\n                                    accountDob={item.dob}    \r\n                                    accountAddress={item.address}\r\n                                    accountPassword={item.password}\r\n                                    accountActive={item.active}\r\n                                    accountEmail={item.email}         \r\n                                    accountRole={item.role}                            \r\n                                    accountGender={item.gender}    \r\n                                    accountImageUrl={item.image}    \r\n                                    accountTownCode={item.townCode}\r\n                                    accountDistrictCode={item.districtCode}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedAccount={this.props.setSelectedAccount?this.props.setSelectedAccount: null}  \r\n                                                                                                    \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList> \r\n                       \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst roleSelectedColor = '#c0c0c0';\r\n\r\nconst roleSelectButtonHeight = 30;\r\n\r\nconst styles = StyleSheet.create({\r\n    articleListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountListTopMenuArea: {\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:40,\r\n        paddingTop:10,\r\n    },\r\n    accountListTopMenuContainer: {\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:10,\r\n        paddingBottom:10,\r\n    },\r\n    topMenuTextInput:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:10,\r\n    },\r\n    topMenuButton:{\r\n        width: componentWidth/5,\r\n        height: roleSelectButtonHeight,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    createNewAccountButton:{\r\n        width: 240,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        // marginRight:200,\r\n    },\r\n    articleListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    articleListFlatListTitleArea:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    articleListFlatListTitleContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',   \r\n        backgroundColor:'#c0c0c0',     \r\n    },\r\n    articleListTitleNameContainer:{\r\n        margin:10,\r\n        width:350,\r\n        alignItems: 'center',\r\n        marginRight:150,\r\n    },\r\n    articleListTitlePhoneContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n        marginRight:100,\r\n    },\r\n    articleListTitleRoleContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n    },\r\n    articleListTitleText:{\r\n        fontSize:17, \r\n        fontWeight:'bold'\r\n    },\r\n    articleListFlatList:{\r\n        width: componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingBottom:40,\r\n    },\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime, componentWidth} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',\r\n            accountEmail:'',\r\n            accountDob: '',\r\n            accountGender: '',\r\n            accountPassword: '',\r\n            accountRePassword: '',\r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountAddress: '',\r\n            accountRole: 'NURSE',\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            day: new Date().getDate(),\r\n            accountImage: 'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            error: '',\r\n            errorList: ['',\r\n                    'Tên chủ tài khoản không được bỏ trống',\r\n                    'Số điện thoại phải có mười số',\r\n                    'Địa chỉ email không được bỏ trống',\r\n                    'Mật khẩu phải có ít nhất 6 kí tự',\r\n                    'Xác nhận mật khẩu không trùng với mật khẩu ',\r\n                    'Địa chỉ không được bỏ trống'],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onDistrictChange = this.onDistrictChange.bind(this)\r\n        this.createNumberPickerList = this.createNumberPickerList.bind(this)\r\n        this.getNumberOfDayInMonth = this.getNumberOfDayInMonth.bind(this)\r\n        this.createAccount = this.createAccount.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountImage: 'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            error: '',\r\n        }));\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                districtList: this.props.districtList?this.props.districtList:[],\r\n                townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n                districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n                townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n                accountImage: 'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n                error: '',\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onDistrictChange(districtId){\r\n        this.setState({\r\n            districtSelected:districtId,                  \r\n        })\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == districtId){\r\n                this.setState({\r\n                    townList:  this.state.districtList[index].listTown,\r\n                    townSelected: this.state.districtList[index].listTown[0]?this.state.districtList[index].listTown[0].townCode:'none'              \r\n                })\r\n                index = 0;\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    getFebDay(){        \r\n        const year = this.state.year\r\n        if (year % 400 == 0 ) return 29\r\n        if (year % 100 == 0 ) return 28\r\n        if (year % 4 == 0) return 29\r\n        return 28\r\n    }\r\n\r\n    getNumberOfDayInMonth(month){\r\n        switch (month) {\r\n            case '1':\r\n            case '3':\r\n            case '5':\r\n            case '7':\r\n            case '8':\r\n            case '10':\r\n            case '12':\r\n                return 31;\r\n                break;\r\n            case '4':\r\n            case '6':\r\n            case '9':\r\n            case '11':\r\n                return 30;\r\n                break;\r\n            case '2':\r\n                return this.getFebDay();\r\n                break;\r\n            \r\n        }   \r\n    }\r\n\r\n    createNumberPickerList(start,end,startToEnd){\r\n        let result = [];\r\n        if(startToEnd){\r\n            for (let i = start; i <= end; i++)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        else{\r\n            for (let i = end; i >= start; i--)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        return result\r\n    }\r\n\r\n    getDob(){\r\n        let result = ''\r\n        if(parseInt(this.state.month)<10)\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n        else\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n        return result\r\n    }\r\n\r\n    \r\n    createAccount(){\r\n        // console.log(this.state.accountRole)\r\n        if(this.checkValid()){\r\n            this.callApiCreateAccount()\r\n        }\r\n    }\r\n\r\n    \r\n    checkValid(){        \r\n        if (this.state.accountName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.accountPhoneNumber == '' ||  this.state.accountPhoneNumber.length<10) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        \r\n        if (this.state.accountEmail == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (this.state.accountPassword == '' || this.state.accountPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        if (this.state.accountRePassword != this.state.accountPassword) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[5]\r\n            }));\r\n        if (this.state.accountAddress == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[6]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n\r\n    callApiCreateAccount(){\r\n        fetch(getApiUrl()+'/users/create-employee', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            name: this.state.accountName,\r\n            phoneNumber: this.state.accountPhoneNumber,\r\n            email: this.state.accountEmail,\r\n            dob: convertDateToDateTime(this.getDob()),\r\n            gender: this.state.accountGender,\r\n            password: this.state.accountPassword,\r\n            districtCode: this.state.districtSelected,\r\n            townCode: this.state.townSelected,\r\n            address: this.state.accountAddress,\r\n            role: this.state.accountRole,\r\n            image: this.state.accountImage\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.props.changeShowView('AccountListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n\r\n    selectPicture = async () =>{\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                this.setState({ accountImage: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Tạo nhân viên mới: \"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    {/* <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đại diện: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text style={{color:'white'}}>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                    </View> */}\r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <TouchableOpacity onPress={() => this.selectPicture()}\r\n                            >\r\n                                <Image \r\n                                    style={styles.imagePreview}\r\n                                    source={{ uri: this.state.accountImage}}\r\n                                    >\r\n                                </Image>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên nhân viên:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên nhân viên'}\r\n                            name={\"accountName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountName}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập số điện thoại của nhân viên'}\r\n                            name=\"accountPhoneNumber\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPhoneNumber}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ email:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ email của nhân viên'}\r\n                            name=\"accountEmail\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountEmail}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.day}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,this.getNumberOfDayInMonth(this.state.month.toString()),true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.month}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day: this.getNumberOfDayInMonth(itemValue)<this.state.day?'1':this.state.day,\r\n                                month:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,12,true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.year}\r\n                            style={[styles.accountTypeDropDown,{width:80}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                year:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1920,new Date().getFullYear(),false)}\r\n                        </Picker>\r\n                        \r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Giới tính:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.accountGender}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountGender:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Nam'} value={'1'} />\r\n                            <Picker.Item label={'Nữ'} value={'0'} />\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu'}\r\n                            name=\"accountPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Xác nhận mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Xác nhận lại mật khẩu'}\r\n                            name=\"accountRePassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountRePassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>                    \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Quận/huyện:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.districtSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.onDistrictChange(itemValue)}                    \r\n                            >\r\n                            {this.state.districtList?this.state.districtList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />))\r\n                            : null }\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Phường/xã:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.townSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                townSelected:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.state.townList?this.state.townList.map(town => (\r\n                            <Picker.Item label={town.townName} value={town.townCode} />\r\n                            )): null}\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ chi tiết:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ chi tiết: số nhà, đường, thôn, ..'}\r\n                            name=\"accountAddress\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountAddress}\r\n                            >                \r\n                        </TextInput>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Vị trí nhân viên:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.accountRole}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountRole:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Y tá'} value={'NURSE'} />\r\n                            <Picker.Item label={'Điều phối viên'} value={'COORDINATOR'} />\r\n                            <Picker.Item label={'Quản trị hệ thống'} value={'ADMIN'} />\r\n                        </Picker>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n            <TouchableOpacity style={styles.accountCreateConfirmButton} onPress={()=>this.createAccount()}>\r\n                    <Text style={{color:'white'}}>Tạo tài khoản nhân viên</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:50,\r\n        paddingBottom:50,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        fontWeight:'bold'\r\n        \r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    accountCreateConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:30,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        \r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime, componentWidth} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',\r\n            accountEmail:'',\r\n            accountDob: '',\r\n            accountGender: '',\r\n            accountPassword: '',\r\n            accountRePassword: '',\r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountAddress: '',\r\n            accountRole: '',\r\n            accountActive: '',\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            day: new Date().getDate(),\r\n            accountImage: 'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            error: '',\r\n            errorList: ['','Tên chủ tài khoản không được bỏ trống','Địa chỉ email không được bỏ trống', 'Địa chỉ không được bỏ trống'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onDistrictChange = this.onDistrictChange.bind(this)\r\n        this.createNumberPickerList = this.createNumberPickerList.bind(this)\r\n        this.getNumberOfDayInMonth = this.getNumberOfDayInMonth.bind(this)\r\n        this.updateAccountInformation = this.updateAccountInformation.bind(this)\r\n        this.resetPassword = this.resetPassword.bind(this)\r\n        this.checkCurrentUser = this.checkCurrentUser.bind(this)\r\n        this.checkAdmin = this.checkAdmin.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n        this.getDob = this.getDob.bind(this)\r\n        this.getDistrictName = this.getDistrictName.bind(this)\r\n        this.getTownName = this.getTownName.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log('')\r\n        this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.account?this.props.account.accountDistrictCode:this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.account?this.props.account.accountTownCode:this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            accountEmail: this.props.account?this.props.account.accountEmail:'',\r\n            accountDob: this.props.account?this.props.account.accountDob:'',\r\n            accountGender: this.props.account?this.props.account.accountGender:'',\r\n            accountRole: this.props.account?this.props.account.accountRole:'',\r\n            accountAddress: this.props.account?this.props.account.accountAddress:'',\r\n            accountActive: this.props.account?this.props.account.accountActive:'',\r\n            accountImage: this.props.account?this.props.account.accountImageUrl:'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            year: this.props.account?this.props.account.accountDob? this.props.account.accountDob.substring(0,4):'2020':'2020',\r\n            month: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(5,7)).toString():'2020':'2020',\r\n            day: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(8,10)).toString():'2020':'2020',\r\n            error: '',\r\n        }));\r\n    }\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n        if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.account?this.props.account.accountDistrictCode:this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.account?this.props.account.accountTownCode:this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            accountEmail: this.props.account?this.props.account.accountEmail:'',\r\n            accountDob: this.props.account?this.props.account.accountDob:'',\r\n            accountGender: this.props.account?this.props.account.accountGender:'',\r\n            accountRole: this.props.account?this.props.account.accountRole:'',\r\n            accountAddress: this.props.account?this.props.account.accountAddress:'',\r\n            accountActive: this.props.account?this.props.account.accountActive:'',\r\n            accountImage: this.props.account?this.props.account.accountImageUrl:'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            year: this.props.account?this.props.account.accountDob? this.props.account.accountDob.substring(0,4):'2020':'2020',\r\n            month: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(5,7)).toString():'2020':'2020',\r\n            day: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(8,10)).toString():'2020':'2020',\r\n            error: '',\r\n        }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onDistrictChange(districtId){\r\n        this.setState({\r\n            districtSelected:districtId,                  \r\n        })\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == districtId){\r\n                this.setState({\r\n                    townList:  this.state.districtList[index].listTown,\r\n                    townSelected: this.state.districtList[index].listTown[0]?this.state.districtList[index].listTown[0].townCode:'none'              \r\n                })\r\n                index = 0;\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    getFebDay(){        \r\n        const year = this.state.year\r\n        if (year % 400 == 0 ) return 29\r\n        if (year % 100 == 0 ) return 28\r\n        if (year % 4 == 0) return 29\r\n        return 28\r\n    }\r\n\r\n    getNumberOfDayInMonth(month){\r\n        switch (month) {\r\n            case '1':\r\n            case '3':\r\n            case '5':\r\n            case '7':\r\n            case '8':\r\n            case '10':\r\n            case '12':\r\n                return 31;\r\n                break;\r\n            case '4':\r\n            case '6':\r\n            case '9':\r\n            case '11':\r\n                return 30;\r\n                break;\r\n            case '2':\r\n                return this.getFebDay();\r\n                break;\r\n            \r\n        }   \r\n    }\r\n\r\n    createNumberPickerList(start,end,startToEnd){\r\n        let result = [];\r\n        if(startToEnd){\r\n            for (let i = start; i <= end; i++)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        else{\r\n            for (let i = end; i >= start; i--)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        return result\r\n    }\r\n\r\n\r\n    getDob(){\r\n        let result = ''\r\n        if(parseInt(this.state.month)<10)\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n        else\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n        return result\r\n    }\r\n    \r\n\r\n    resetPassword(){\r\n        console.log(this.props.account.accountId),\r\n        console.log(this.props.userInfo.id),\r\n        fetch(getApiUrl()+'/users/reset-password/'+this.props.account.accountId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n            \r\n        },\r\n        body: JSON.stringify({\r\n            userProcessingID: this.props.userInfo.id\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message?  success=true : null : null;\r\n                if (success)\r\n                    this.props.changeShowView('AccountListView')\r\n                \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    changePassword(){\r\n        this.props.changeShowView('AccountChangePasswordView')\r\n    }\r\n\r\n    updateAccountInformation(){\r\n        if(this.checkValid()){\r\n            this.callApiUpdateAccountInfo()\r\n        }\r\n    }\r\n\r\n    \r\n    checkValid(){        \r\n        if (this.state.accountName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.accountEmail == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.accountAddress == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n    callApiUpdateAccountInfo(){\r\n        fetch(getApiUrl()+'/users/update-user/'+this.props.account.accountId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            name: this.state.accountName,\r\n            dob: convertDateToDateTime(this.getDob()),\r\n            address: this.state.accountAddress,\r\n            active: this.state.accountActive,\r\n            email: this.state.accountEmail,\r\n            gender: this.state.accountGender,\r\n            townCode: this.state.townSelected,\r\n            districtCode: this.state.districtSelected,\r\n            image: this.state.accountImage\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) {\r\n                    if (this.checkCurrentUser()) this.props.updateUserInfo(result)\r\n                    // this.props.changeShowView('AccountListView')\r\n                }\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    \r\n    selectPicture = async () =>{\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                this.setState({ accountImage: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    checkCurrentUser(){\r\n        if (this.props.account.accountId == this.props.userInfo.id) return true\r\n        return false\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n\r\n    getDistrictName(){\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == this.state.districtSelected){\r\n                return this.state.districtList[index].districtName\r\n            }\r\n            index -= 1;\r\n        }  \r\n        return ''\r\n    }\r\n\r\n    getTownName(){\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            let indexTown = this.state.districtList[index].listTown.length - 1;\r\n            while(indexTown >=0 ){\r\n                if (this.state.districtList[index].listTown[indexTown].townCode == this.state.townSelected){\r\n                    return this.state.districtList[index].listTown[indexTown].townName\r\n                }\r\n                indexTown-=1;\r\n            }\r\n            index -= 1;\r\n        }  \r\n        return ''\r\n    }\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountViewArea}>\r\n            <View style={styles.accountMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Chỉnh sửa thông tin nhân viên: \"}</Text>   \r\n            </View>\r\n            <View style={styles.accountArea}>\r\n                <View style={styles.accountContainer}>\r\n                    {/* <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đại diện: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text style={{color:'white'}}>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                    </View> */}\r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={styles.accountRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <TouchableOpacity onPress={() => this.checkAdmin()?this.selectPicture():null}\r\n                            >\r\n                                <Image \r\n                                    style={styles.imagePreview}\r\n                                    source={{ uri: this.state.accountImage}}\r\n                                    >\r\n                                </Image>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Tên nhân viên:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên nhân viên'}\r\n                            name={\"accountName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountName}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountName}</Text>\r\n                        }\r\n                        \r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <Text style={styles.rowTextLong}>{this.state.accountPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ email:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ email của nhân viên'}\r\n                            name=\"accountEmail\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountEmail}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountEmail}</Text>\r\n                        }\r\n                    </View>\r\n                    {this.checkAdmin()?\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.day}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,this.getNumberOfDayInMonth(this.state.month.toString()),true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.month}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day: this.getNumberOfDayInMonth(itemValue)<this.state.day?'1':this.state.day,\r\n                                month:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,12,true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.year}\r\n                            style={[styles.accountTypeDropDown,{width:80}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                year:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1920,2020,false)}\r\n                        </Picker>\r\n                    </View>\r\n                    :\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Text style={styles.rowTextLong}>{this.getDob()}</Text>\r\n                    </View>\r\n                    }\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Giới tính:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.accountGender}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountGender:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Nam'} value={'1'} />\r\n                            <Picker.Item label={'Nữ'} value={'0'} />\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountGender=='1'?'Nam':'Nữ'}</Text>\r\n                        }\r\n                        \r\n                    </View>                   \r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Quận/huyện:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.districtSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.onDistrictChange(itemValue)}                    \r\n                            >\r\n                            {this.state.districtList?this.state.districtList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />))\r\n                            : null }\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.getDistrictName()}</Text>\r\n                        }\r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Phường/xã:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.townSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                townSelected:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.state.townList?this.state.townList.map(town => (\r\n                            <Picker.Item label={town.townName} value={town.townCode} />\r\n                            )): null}\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.getTownName()}</Text>\r\n                        }\r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ chi tiết:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ chi tiết: số nhà, đường, thôn, ..'}\r\n                            name=\"accountAddress\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountAddress}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountAddress}</Text>\r\n                        }\r\n                    </View> \r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Vị trí nhân viên:</Text>\r\n                        <Text style={styles.rowTextLong}>{getRoleName(this.state.accountRole)}</Text>\r\n                    </View> \r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Trạng thái:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.accountActive}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountActive:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Đang hoạt động'} value={'1'} />\r\n                            <Picker.Item label={'Bị khóa'} value={'0'} />\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountActive=='1'?'Đang hoạt động':'Bị khóa'}</Text>\r\n                        }\r\n                    </View> \r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>  \r\n                <View style={styles.buttonArea}>\r\n                    {this.checkCurrentUser()?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.changePassword()}>\r\n                        <Text style={{color:'white'}}>Thay đổi mật khẩu</Text>\r\n                    </TouchableOpacity>\r\n                    :\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.resetPassword()}>\r\n                        <Text style={{color:'white'}}>Đặt lại mật khẩu</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.updateAccountInformation()}>\r\n                        <Text style={{color:'white'}}>Lưu thay đổi</Text>\r\n                    </TouchableOpacity>\r\n                </View>  \r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:50,\r\n        paddingBottom:50,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginBottom:10,\r\n    },\r\n    accountContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    accountRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        fontWeight:'bold'\r\n        \r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:30,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime,componentWidth} from './../Common/CommonFunction'\r\n// import DatePicker from 'react-native-date-picker'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',    \r\n            accountOldPassword: '',        \r\n            accountPassword: '',\r\n            accountRePassword: '',            \r\n            error: '',\r\n            errorList: ['',\r\n                    'Mật khẩu cũ phải có ít nhất 6 kí tự',\r\n                    'Mật khẩu mới phải có ít nhất 6 kí tự',\r\n                    'Xác nhận mới mật khẩu không trùng với mật khẩu '],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            error: '',\r\n        }));\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                accountName: this.props.account?this.props.account.accountName:'',\r\n                accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n                error: '',\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    \r\n    changePassword(){\r\n        if(this.checkValid()){\r\n            this.callApiChangePassword()\r\n        }\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n    \r\n    checkValid(){    \r\n        if (this.state.accountOldPassword == '' || this.state.accountOldPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));   \r\n        if (this.state.accountPassword == '' || this.state.accountPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.accountRePassword != this.state.accountPassword) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n\r\n    callApiChangePassword(){\r\n        console.log(this.props.userInfo.id)\r\n        let url = ''\r\n        if (this.checkAdmin()) url = getApiUrl()+'/users/admin/change-password/'+this.props.userInfo.id\r\n        else url = getApiUrl()+'/users/coordinators/change-password/'+this.props.userInfo.id\r\n        fetch(url, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            oldPassword: this.state.accountOldPassword,\r\n            newPassword: this.state.accountPassword,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? result.message == \"Thay đổi mật khẩu thành công!\"? success=true : null : null : null;\r\n                if (success)\r\n                this.props.changeShowView('AccountListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Thay đổi mật khẩu:\"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên người dùng:</Text>\r\n                        <Text style={styles.rowTextLong}>{this.state.accountName}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <Text style={styles.rowText}>{this.state.accountPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu cũ:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu cũ'}\r\n                            name=\"accountOldPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountOldPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu mới:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu mới'}\r\n                            name=\"accountPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Xác nhận mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Xác nhận lại mật khẩu'}\r\n                            name=\"accountRePassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountRePassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>           \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n            <TouchableOpacity style={styles.accountCreateConfirmButton} onPress={()=>this.changePassword()}>\r\n                    <Text style={{color:'white'}}>Đổi mật khẩu</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:50,\r\n        paddingBottom:50,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    accountCreateConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:30,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getAppointmentStateName, getStateColor, componentWidth} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class AppointmentListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n        };\r\n        this.onAppointmentPress = this.onAppointmentPress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n\r\n    onAppointmentPress(){\r\n        const appointment= { \r\n            \"appointmentId\": this.props.appointmentId,\r\n            \"appointmentCreatedTime\":this.props.appointmentCreatedTime,\r\n            \"customerName\":this.props.customerName,\r\n            \"customerPhoneNumber\":this.props.customerPhoneNumber,\r\n            \"customerDOB\":this.props.customerDOB,\r\n            \"appointmentMeetingTime\":this.props.appointmentMeetingTime,\r\n            \"appointmentStatus\":this.props.appointmentStatus,\r\n            }\r\n            \r\n        this.props.setSelectedAppointment?this.props.setSelectedAppointment(appointment):null\r\n        this.props.changeShowView?this.props.changeShowView('AppointmentView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.appointmentListItem}\r\n                onPress={() => this.onAppointmentPress()}\r\n                >                          \r\n                <View style={[styles.appointmentTextContainer,{\r\n                    marginTop:5,\r\n                }]}>                    \r\n                    <View>\r\n                    <Text style={{fontSize:17,color:'#25345D',fontWeight:'bold'}}>#{this.props.appointmentId}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={styles.appointmentTextContainer}>\r\n                    <View style={styles.appointmentListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>{this.props.customerName}</Text>\r\n                    </View>\r\n                    <View style={[styles.appointmentListSecondColumnContainer,{\r\n                        borderRadius:1,\r\n                        borderStyle: 'dashed',\r\n                    }]}>\r\n                    <Text style={{fontSize:17}}>{convertDateTimeToDate(this.props.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointmentCreatedTime)}</Text>                    \r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:15}}>Khung giờ hẹn: {convertDateTimeToTime(this.props.appointmentMeetingTime)}</Text>\r\n                    </View>\r\n                </View>     \r\n                <View style={[styles.appointmentTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.appointmentListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>Số điện thoại:  {this.props.customerPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentListSecondColumnContainer}>\r\n                    <Text style={{fontSize:17,color:'#0c59cf'}}>{getAppointmentStateName(this.props.appointmentStatus)}</Text>\r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:15}}>Ngày hẹn: {convertDateTimeToDate(this.props.appointmentMeetingTime)}</Text>\r\n                    </View>\r\n                    \r\n                </View>                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    appointmentListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    appointmentTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:3,\r\n        paddingTop:3,\r\n    },\r\n    appointmentListFirstColumnContainer:{\r\n        width:250,\r\n    },\r\n    appointmentListSecondColumnContainer:{\r\n        width:200,\r\n        marginLeft:20,\r\n        marginRight:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport {getApiUrl, componentWidth} from './../Common/CommonFunction'\r\nimport AppointmentListViewItem from './AppointmentListViewItem'\r\n\r\nexport default class AppointmentListView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            districtsList: this.props.districtList,\r\n            statusSelected: 'all',\r\n            districtSelected: 'all',\r\n            dataChanged: true,\r\n            testsList: this.props.testsList,\r\n            appointmentList: this.props.appointmentList,\r\n        };\r\n        this.getAppointmentShowList = this.getAppointmentShowList.bind(this)\r\n    }\r\n\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                appointmentList: this.props.appointmentList,\r\n                districtsList: this.props.districtList,\r\n                dataChanged: !this.state.dataChanged\r\n            }));\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    getAppointmentShowList(){\r\n        if (this.state.statusSelected=='all'){\r\n            if (this.state.districtSelected=='all'){\r\n                return this.state.appointmentList\r\n            }\r\n            else{\r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        else{\r\n            if (this.state.districtSelected=='all'){\r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].appointment_status === this.state.statusSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n            else{                \r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].appointment_status === this.state.statusSelected && this.state.appointmentList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        return this.state.appointmentList\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentListArea}>\r\n            <View style={styles.appointmentListTopMenuArea}>\r\n                <View style={styles.appointmentListTopMenuContainer}>\r\n                    <Text style={{fontWeight:'bold'}}>Trạng thái: </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.statusSelected}\r\n                        style={[styles.appointmentTypeDropdown,{width:360}]}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            statusSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged\r\n                        })}\r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        <Picker.Item label=\"Đơn đang đợi xử lý\" value=\"pending\" />\r\n                        <Picker.Item label=\"Đơn đã được chấp nhận\" value=\"accepted\" />\r\n                        <Picker.Item label=\"Đơn đã bị từ chối\" value=\"rejected\" />\r\n                        <Picker.Item label=\"Đơn đã bị hủy\" value=\"canceled\" />\r\n                    </Picker>                    \r\n                </View>\r\n                <View style={styles.appointmentListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getAppointmentShowList()?this.getAppointmentShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.appointmentListFlatListArea}>        \r\n                <FlatList style={styles.appointmentListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getAppointmentShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <AppointmentListViewItem\r\n                                    appointmentId={item.appointment_id}       \r\n                                    appointmentCreatedTime={item.appointment_createdTime}                             \r\n                                    customerName={item.appointment_customerName}\r\n                                    customerPhoneNumber={item.appointment_phoneNumber}\r\n                                    customerDOB={item.appointment_DOB}\r\n                                    appointmentMeetingTime={item.appointment_meetingTime}\r\n                                    appointmentStatus={item.appointment_status}        \r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedAppointment={this.props.setSelectedAppointment?this.props.setSelectedAppointment: null}                                                                 \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentListTopMenuArea: {\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n        paddingTop:10,\r\n    },\r\n    appointmentListTopMenuContainer: {\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n        paddingTop:10,\r\n        paddingBottom:10,\r\n    },\r\n    appointmentTypeDropdown:{\r\n        height: 35, \r\n        width: 300,\r\n        borderRadius:5,\r\n        marginLeft:27,\r\n    },\r\n    appointmentListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    appointmentListFlatList:{\r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, Image, Dimensions, TouchableOpacity } from 'react-native';\r\nimport {screenWidth} from './CommonFunction'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    \r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <View  style={styles.container}>\r\n            <View style={styles.alertContainer}>\r\n                <View style={styles.textContainer}>\r\n                    <Text style={{fontSize:25}}>{this.props.title?this.props.title:'Cập nhập thông tin'}</Text>\r\n                    <Text>{this.props.content?this.props.content:'Bạn có muốn cập nhật thông tin không ?'}</Text>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.props.onCancel?this.props.onCancel():null}>\r\n                        <Text style={{color:'white'}}>Hủy</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.props.onConfirm?this.props.onConfirm():null}>\r\n                        <Text style={{color:'white'}}>Xác nhận</Text>\r\n                    </TouchableOpacity> \r\n                </View>\r\n            </View>\r\n            \r\n\r\n        </View >\r\n    );\r\n  }\r\n}\r\n\r\nconst centerHeight=600\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: centerHeight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    alertContainer:{\r\n        height: 250,\r\n        width: 700,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 20,\r\n        paddingLeft: 60,\r\n        paddingRight: 60,\r\n        paddingBottom: 35,\r\n    },\r\n    textContainer:{\r\n        height: 90,\r\n        width: 700,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor:'white',\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        fontSize:17,\r\n        backgroundColor:''\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getApiUrl, getAppointmentStateName, componentWidth} from './../Common/CommonFunction'\r\nimport AlertScreen from './../Common/AlertScreen'\r\n\r\nexport default class AppointmentView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {     \r\n            \r\n        };\r\n        this.onAccept = this.onAccept.bind(this)\r\n        this.onReject = this.onReject.bind(this)\r\n        this.callApiAcceptAppointment = this.callApiAcceptAppointment.bind(this)\r\n        \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n\r\n            }));\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n    callApiAcceptAppointment(){\r\n        fetch(getApiUrl()+\"/appointments/accept/\"+this.props.appointment.appointmentId, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                status: 'accepted',\r\n                coordinatorID: this.props.userInfo.id,\r\n                note: 'ok',\r\n            }),\r\n            })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) {\r\n                    let appointment = this.props.appointment\r\n                    appointment.appointmentStatus = 'accepted'\r\n                    this.props.setSelectedAppointment(appointment)\r\n                    // this.props.changeShowView('AppointmentView')\r\n                }\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    onAccept(){\r\n        this.callApiAcceptAppointment()\r\n        \r\n    }\r\n\r\n    onReject(){\r\n        this.props.changeShowView('AppointmentRejectView')\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    return (\r\n        <View style={styles.appointmentViewArea}>\r\n            <View style={styles.appointmentTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Chi tiết đơn khám</Text>                \r\n            </View>\r\n            <View style={styles.appointmentArea}>\r\n                <View style={styles.appointmentContainer}>      \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Mã đơn xét khám: </Text> \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.appointmentId:''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentCreatedTime):''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ hẹn:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentMeetingTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentMeetingTime):''}</Text>\r\n                    </View>  \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.customerPhoneNumber:''}</Text>\r\n                    </View>                  \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Trạng thái: </Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?getAppointmentStateName(this.props.appointment.appointmentStatus):''}</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    {this.props.appointment.appointmentStatus =='pending'?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onReject()}>\r\n                        <Text style={{color:'white'}}>Từ chối</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>}\r\n                    {this.props.appointment.appointmentStatus =='pending'?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onAccept()}>\r\n                        <Text style={{color:'white'}}>Xác nhận</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>}\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    appointmentArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    appointmentContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    appointmentRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowFirstContainer:{\r\n        width:200,\r\n    },\r\n    rowSecondContainer:{\r\n        width:'100%',\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:17,\r\n        fontWeight:'bold',\r\n        backgroundColor:''\r\n    },\r\n    \r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        backgroundColor:''\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class AppointmentLostSampleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            reason: '',\r\n            error: '',\r\n            errorList: ['','Phải điền lý do từ chối'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.rejectAppointment = this.rejectAppointment.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    rejectAppointment(){\r\n        if(this.checkValid()){\r\n            this.callApiRejectAppointment()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.reason == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiRejectAppointment(){\r\n        fetch(getApiUrl()+\"/appointments/reject/\"+this.props.appointment.appointmentId, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                status: 'rejected',\r\n                coordinatorID: this.props.userInfo.id,\r\n                note: this.state.reason,\r\n            }),\r\n            })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) {\r\n                    let appointment = this.props.appointment\r\n                    appointment.appointmentStatus = 'rejected'\r\n                    this.props.setSelectedAppointment(appointment)\r\n                    this.props.changeShowView('AppointmentView')\r\n                }\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n    return (\r\n        <View style={styles.appointmentViewArea}>\r\n            <View style={styles.appointmentTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Từ chối đơn hẹn: </Text>                \r\n            </View>\r\n            <View style={styles.appointmentArea}>\r\n                <View style={styles.appointmentContainer}>   \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn hẹn: </Text>        \r\n                        <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.appointmentId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowTextLong,{width:300}]}>{this.props.appointment?this.props.appointment.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowText}>{'Lý do từ chối: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Điền lý do từ chối'}\r\n                            name={\"reason\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reason}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.appointmentConfirmButton} onPress={() => this.props.changeShowView('AppointmentView')}>\r\n                        <Text style={{color:'white'}}>Quay lại</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.appointmentConfirmButton} onPress={() => this.rejectAppointment()}>\r\n                        <Text style={{color:'white'}}>Từ chối đơn hẹn</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    appointmentArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    appointmentContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    appointmentRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n        fontWeight:'bold'\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        backgroundColor:''\r\n    },\r\n    appointmentTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    appointmentConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class ArticleListViewItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n        };\r\n        this.onArticlePress = this.onArticlePress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n    onArticlePress(){\r\n        const article= { \r\n            \"articleId\": this.props.articleId,\r\n            \"articleTitle\":this.props.articleTitle,\r\n            \"articleContent\":this.props.articleContent,\r\n            \"articleShortContent\":this.props.articleShortContent,\r\n            \"articleImageUrl\":this.props.articleImageUrl,\r\n            \"userId\":this.props.userId,\r\n            \"articleCreatedTime\":this.props.articleCreatedTime,\r\n            \"creatorName\": this.props.creatorName,\r\n            }\r\n        this.props.setSelectedArticle?this.props.setSelectedArticle(article):null\r\n        this.props.changeShowView?this.props.changeShowView('ArticleView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.articleListItem}\r\n                onPress={() => this.onArticlePress()}\r\n                >                                \r\n                <View style={styles.articleImageContainer}>\r\n                    <Image \r\n                        style={styles.articleImage}\r\n                        source={{uri:this.props.articleImageUrl}}>\r\n                    </Image>\r\n                </View>  \r\n                <View style={styles.articleTextContainer}>\r\n                    <View style={styles.articleTextContentContainer}>\r\n                        <View style={styles.articleTitleContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'Bold'}}>{this.props.articleTitle}</Text>\r\n                        </View>\r\n                        <View style={[styles.articleCreateTimeContainer,{\r\n                            borderRadius:1,\r\n                            borderStyle: 'dashed',\r\n                        }]}>\r\n                        <Text style={{fontSize:15}}>{convertDateTimeToDate(this.props.articleCreatedTime)+\"   \"+convertDateTimeToTime(this.props.articleCreatedTime)}</Text>                                   \r\n                        </View>\r\n                        <View style={styles.articleShortContentContainer}>\r\n                            <Text style={{fontSize:17, textAlign: 'justify'}}>{this.props.articleShortContent}</Text>        \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.articleTextCreatorNameContainer}>\r\n                        <View style={styles.articleCreatorNameContainer}>\r\n                            <Text style={{fontSize:17}}>{this.props.creatorName}</Text>\r\n                        </View>\r\n                    </View>\r\n                    \r\n                </View>     \r\n                                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    articleListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    articleImageContainer:{\r\n        margin:10,\r\n        height:200,\r\n        width:200,\r\n    },\r\n    articleImage:{\r\n        height:200,\r\n        width:200,\r\n    },\r\n    articleTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth-220,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        backgroundColor:'',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:5,\r\n        paddingTop:10,\r\n    },\r\n    articleTextContentContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth-250,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        backgroundColor:''\r\n    },\r\n    articleTextCreatorNameContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth-230,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        backgroundColor:'',\r\n        paddingRight:10,\r\n    },\r\n    articleTitleContainer:{\r\n        marginBottom:10,\r\n    },\r\n    articleCreateTimeContainer:{\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n        padding:2,\r\n        marginBottom:10\r\n    },\r\n    articleShortContentContainer:{\r\n    },\r\n    articleCreatorNameContainer:{\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, Alert} from 'react-native';\r\nimport {getApiUrl,componentWidth} from './../Common/CommonFunction'\r\nimport ArticleListViewItem from './ArticleListViewItem'\r\n\r\nexport default class ArticleListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            statusSelected: 'pending',\r\n            districtSelected: 'D0',\r\n            articleList: this.props.articleList,\r\n        };\r\n        this.onArticlePress = this.onArticlePress.bind(this)\r\n        this.onAddArticlePress = this.onAddArticlePress.bind(this)\r\n    }\r\n\r\n    \r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                articleList: this.props.articleList,\r\n            }));\r\n        }\r\n    }\r\n\r\n    onArticlePress (){\r\n        this.props.changeShowView ? this.props.changeShowView('ArticleView'): null\r\n    }\r\n\r\n\r\n    onAddArticlePress(){\r\n        this.props.changeShowView ? this.props.changeShowView('ArticleAddView'): null\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleListArea}>\r\n            <View style={styles.articleListTopMenuArea}>\r\n                <Text style={{fontSize:25,fontWeight:'bold'}}>Bài viết mới </Text>\r\n                <TouchableOpacity \r\n                    style={styles.createNewArticleButton}\r\n                    onPress={() => this.onAddArticlePress()}\r\n                    >\r\n                    <Text style={{color:'white'}}>Tạo bài viết mới</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.articleListFlatListArea}>        \r\n                <FlatList style={styles.articleListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.state.articleList}\r\n                    // extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <ArticleListViewItem\r\n                                    articleId={item.id}         \r\n                                    articleTitle={item.tittle}                            \r\n                                    articleShortContent={item.shortContent}    \r\n                                    articleContent={item.content}    \r\n                                    articleImageUrl={item.image}\r\n                                    userId={item.userID}\r\n                                    articleCreatedTime={item.createdTime}\r\n                                    creatorName={item.creatorName}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedArticle={this.props.setSelectedArticle?this.props.setSelectedArticle: null}\r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleListTopMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n    createNewArticleButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    articleListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    articleListFlatList:{\r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n    \r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image, Alert} from 'react-native';\r\nimport {getApiUrl, componentWidth} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n// import * as DocumentPicker from 'expo-document-picker';\r\n\r\nexport default class ArticleAddView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            imageResultUri: '',\r\n            articleTitle: '',\r\n            articleShortContent: '',\r\n            articleContent: '',\r\n            error: '',\r\n            errorList: ['','Phải điền tiêu đề bài viết','Phải điền nội dung ngắn ngọn bài viết', 'Phải điền nội dung bài viết','Bài viết chưa có ảnh min họa'],\r\n\r\n        };\r\n        this.selectPicture = this.selectPicture.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.createArticle = this.createArticle.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    createArticle(){\r\n        if(this.checkValid()){\r\n            this.callApiCreateArticle()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.articleTitle == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.articleShortContent == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.articleContent == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (this.state.imageResultUri == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiCreateArticle(){\r\n        fetch(getApiUrl()+'/articles/create', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            tittle: this.state.articleTitle,\r\n            shortContent:this.state.articleShortContent,\r\n            content: this.state.articleContent,\r\n            image: this.state.imageResultUri,\r\n            userID: this.props.userInfo.id\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.success? success=result.success : null : null;\r\n                if (success) \r\n                this.props.changeShowView('ArticleListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    selectPicture = async () =>{\r\n        // const result = await DocumentPicker.getDocumentAsync({copyToCacheDirectory:true})\r\n        // console.log(result)\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                this.setState({ imageResultUri: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleAddViewArea}>\r\n            <View style={styles.articleAddTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Thêm bài viết: </Text>                \r\n            </View>\r\n            <View style={styles.articleAddArea}>\r\n                <View style={styles.articleAddContainer}>                    \r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>Tiêu đề: </Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                        placeholder={'Nhập tiêu đề'}   \r\n                        name={\"articleTitle\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.articleTitle}  \r\n                        >           \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Nội dung\\nngắn gọn: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Nhập nội dung ngắn gọn'}\r\n                            name={\"articleShortContent\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.articleShortContent}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Nội dung\\nbài viết: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={12}\r\n                            placeholder={'Nhập nội dung '}\r\n                            name={\"articleContent\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.articleContent} \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đính kèm: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text style={{color:'white'}}>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                        {/* <Text style={[styles.rowText,{fontSize:15,width:600,paddingTop:3,marginLeft:20}]}>{' '+this.state.imageResultUri}</Text> */}\r\n                    </View>\r\n                    {this.state.imageResultUri?\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{' '}</Text>\r\n                        <Image \r\n                            style={styles.imagePreview}\r\n                            source={{ uri: this.state.imageResultUri}}\r\n                            >\r\n                        </Image>\r\n                    </View>\r\n                    :null\r\n                    }\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.articleAddConfirmButton} onPress={() => this.createArticle()}>\r\n                    <Text style={{color:'white'}}>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleAddViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleAddTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    articleAddArea:{\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    articleAddContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    articleAddRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:18,\r\n    },\r\n    articleTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    articleAddConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:500,\r\n        height:500,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\n\r\nexport default class ArticleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            imageUri: '',\r\n            imageType: '',\r\n            imageResultUri: '',\r\n        };\r\n        \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <View style={styles.articleViewArea}>\r\n            \r\n            <View style={styles.articleArea}>\r\n                <View style={styles.articleContainer}>      \r\n                    <View style={styles.articleRowContainer}>\r\n                        <Text style={{fontSize:25,fontWeight:'bold'}}>{this.props.article?this.props.article.articleTitle:''}</Text>                \r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{borderWidth:1,borderRadius:1,borderStyle: 'dashed',width:180}]}>\r\n                        <Text style={[styles.rowText,{flex:1,textAlign: 'center',}]}>{this.props.article?convertDateTimeToDate(this.props.article.articleCreatedTime)+\"   \"+convertDateTimeToTime(this.props.article.articleCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{justifyContent: 'center',}]}>\r\n                        <Image \r\n                            style={styles.rowImage}\r\n                            source={{ uri: this.props.article?this.props.article.articleImageUrl:'' }}\r\n                            >\r\n                            </Image>\r\n                    </View>\r\n                    <View style={styles.articleRowContainer}>\r\n                        <Text style={styles.rowText}>{this.props.article?this.props.article.articleContent:''}</Text>\r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{justifyContent: 'flex-end',}]}>\r\n                        <Text style={styles.rowText}>{this.props.article?this.props.article.creatorName:''}</Text>\r\n                    </View>   \r\n                                     \r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    articleArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    articleContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    articleRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        fontSize:18,\r\n        backgroundColor:'',\r\n        textAlign: 'justify'\r\n    },\r\n    articleTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowImage:{\r\n        width:400,\r\n        height:400,\r\n        backgroundColor:''\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,TextInput, Dimensions} from 'react-native';\r\nimport {getApiUrl,screenWidth} from './../Common/CommonFunction'\r\n\r\nimport PageFooter from './../PageFooter'\r\n\r\nexport default class Login extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            phoneNumber: '',\r\n            password:'',\r\n            error: ' ',\r\n            errorList: [' ','Phải điền số điện thoại', 'Phải điền mật khẩu']\r\n        };\r\n        this.callApiLogin = this.callApiLogin.bind(this)\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    login(){\r\n        if(this.checkValid()){\r\n            this.callApiLogin()\r\n        }    \r\n    }\r\n\r\n    \r\n    checkValid(){     \r\n        if (this.state.phoneNumber == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.password == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiLogin(){\r\n        fetch(getApiUrl()+\"/users/login\",{\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                phoneNumber: this.state.phoneNumber,\r\n                password: this.state.password,\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) this.props.loginSuccess(result.userInfo,result.token)\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <View style={{flex:1, width:screenWidth}}>\r\n            <View style={styles.loginViewArea}>\r\n                <View style={styles.titleContainer}>\r\n                    <Text style={{fontSize:23,fontWeight:'bold'}}>Đăng nhập</Text>\r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowText}>{'Số điện thoại'}</Text>\r\n                    <TextInput \r\n                        style={styles.rowTextInput}\r\n                        name={\"phoneNumber\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.phoneNumber}\r\n                        >                \r\n                    </TextInput>     \r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowText}>{'Mật khẩu'}</Text>\r\n                    <TextInput \r\n                        style={styles.rowTextInput}\r\n                        name={\"password\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.password}\r\n                        secureTextEntry={true}\r\n                        onSubmitEditing={() => this.login()}\r\n                        >                \r\n                    </TextInput>     \r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowTextError}>{this.state.error}</Text>                         \r\n                </View>\r\n                <TouchableOpacity style={styles.loginButton} onPress={() => this.login()}>\r\n                    <Text style={{color:'white'}}>Đăng nhập</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <PageFooter/>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    loginViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n        paddingTop:70,\r\n    },\r\n    titleContainer:{\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding:20,\r\n        marginBottom:20,\r\n\r\n    },\r\n    rowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width:'100%',\r\n        padding:20,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:130,\r\n        fontSize:18,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 400,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    loginButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:20,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime, getStateName, getStateColor,componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class RequestListPendingItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            \r\n        };\r\n        this.onRequestPress = this.onRequestPress.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    changeToRequestViewScreen(testList){\r\n        const request= { \r\n            \"requestId\": this.props.requestId,\r\n            \"requestCreatedTime\":this.props.requestCreatedTime,\r\n            \"customerName\":this.props.customerName,\r\n            \"customerPhoneNumber\":this.props.customerPhoneNumber,\r\n            \"customerDOB\":this.props.customerDOB,\r\n            \"requestAddress\":this.props.requestAddress,\r\n            \"requestDistrictName\":this.props.requestDistrictName,\r\n            \"requestTownName\": this.props.requestTownName,\r\n            \"requestMeetingTime\": this.props.requestMeetingTime,\r\n            \"nurseName\":this.props.nurseName,\r\n            \"nurseId\":this.props.nurseId,\r\n            \"coordinatorId\":this.props.coordinatorId,\r\n            \"coordinatorName\":this.props.coordinatorName,\r\n            \"lsSelectedTest\":this.props.lsSelectedTest,\r\n            \"requestAmount\":this.props.requestAmount,\r\n            \"requestStatus\":this.props.requestStatus,\r\n            \"testList\":testList,\r\n            \"requestTestVersion\":this.props.requestTestVersion,\r\n            }\r\n        this.props.setSelectedRequest?this.props.setSelectedRequest(request):null\r\n        this.props.changeShowView?this.props.changeShowView('RequestView'):null\r\n    }\r\n\r\n    onRequestPress(){        \r\n        if (this.checkVersion()) this.changeToRequestViewScreen(this.props.testList)\r\n    }\r\n\r\n    checkVersion(){\r\n        if(this.props.testVersion != this.props.requestTestVersion){\r\n            fetch(getApiUrl()+\"/tests/versions/list-all-test/\"+this.props.requestTestVersion,{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    let list = []\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    {\r\n                        this.changeToRequestViewScreen(result.lsTests)\r\n                        return false\r\n                    }\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )  \r\n        }\r\n        else return true;\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.requestListItem}\r\n                onPress={() => this.onRequestPress()}\r\n                >                                \r\n                <View style={[styles.requestListTextContainer,{\r\n                    marginTop:5,\r\n                }]}>                    \r\n                    <View>\r\n                    <Text style={{fontSize:17,color:'#25345D',fontWeight:'bold'}}>#{this.props.requestId}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={styles.requestListTextContainer}>\r\n                    <View style={styles.requestListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>{this.props.customerName}</Text>\r\n                    </View>\r\n                    <View style={[styles.requestListSecondColumnContainer,{\r\n                        borderRadius:1,\r\n                        borderStyle: 'dashed',\r\n                    }]}>\r\n                    <Text style={{fontSize:17}}>{convertDateTimeToDate(this.props.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.requestCreatedTime)}</Text>                    \r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:16}}>{this.props.requestAddress+', '+this.props.requestTownName+', '+this.props.requestDistrictName}</Text>\r\n                    </View>\r\n                </View>     \r\n                <View style={[styles.requestListTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.requestListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>Số điện thoại:  {this.props.customerPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.requestListSecondColumnContainer}>\r\n                    <Text style={{fontSize:17,color:'#0c59cf'}}>{getStateName(this.props.requestStatus)}</Text>\r\n                    </View>\r\n                    \r\n                </View>                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    requestListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    requestListTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:3,\r\n        paddingTop:3,\r\n    },\r\n    requestListFirstColumnContainer:{\r\n        width:250,\r\n    },\r\n    requestListSecondColumnContainer:{\r\n        width:230,\r\n        marginLeft:20,\r\n        marginRight:50,\r\n\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport RequestListViewItem from './RequestListViewItem'\r\nimport {getApiUrl,componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class RequestListView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            districtsList: this.props.districtList,\r\n            statusSelected: 'all',\r\n            districtSelected: 'all',\r\n            dataChanged: true,\r\n            testsList: this.props.testsList,\r\n            requestList: this.props.requestList,\r\n            requestShowList : this.props.requestList,\r\n            requestCount: this.props.requestList?this.props.requestList.length:'0',\r\n        };\r\n        this.getRequestShowList = this.getRequestShowList.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                requestList: this.props.requestList,\r\n                districtsList: this.props.districtList,\r\n                requestCount: this.props.requestList?this.props.requestList.length:'0', \r\n                dataChanged: !this.state.dataChanged\r\n            }));\r\n        }\r\n    }\r\n\r\n    \r\n    getRequestShowList(){\r\n        if (this.state.statusSelected=='all'){\r\n            if (this.state.districtSelected=='all'){\r\n                return this.state.requestList\r\n            }\r\n            else{\r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                \r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        else{\r\n            if (this.state.districtSelected=='all'){\r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestStatus === this.state.statusSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n            else{                \r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestStatus === this.state.statusSelected && this.state.requestList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        return this.state.requestList\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestListArea}>\r\n            <View style={styles.requestListTopMenuArea}>\r\n                <View style={styles.requestListTopMenuContainer}>\r\n                    <Text style={{fontWeight:'bold'}}>Trạng thái: </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.statusSelected}\r\n                        style={[styles.requestTypeDropdown,{width:360}]}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            statusSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}\r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        <Picker.Item label=\"Đang đợi y tá nhận đơn\" value=\"pending\" />\r\n                        <Picker.Item label=\"Đơn đã được y tá chấp nhận\" value=\"accepted\" />\r\n                        <Picker.Item label=\"Đơn đã được lấy mẫu\" value=\"transporting\" />\r\n                        <Picker.Item label=\"Đang đợi kết quả\" value=\"waitingforresult\" />\r\n                        <Picker.Item label=\"Đơn đã xong\" value=\"closed\" />\r\n                        <Picker.Item label=\"Y tá làm mất mẫu\" value=\"lostsample\" />\r\n                        <Picker.Item label=\"Điều phối viên là mất mẫu\" value=\"coordinatorlostsample\" />\r\n                        <Picker.Item label=\"Đơn đã hủy\" value=\"canceled\" />\r\n                        <Picker.Item label=\"Đã nhận đơn bị mất do điều phối viên\" value=\"reaccepted\" />\r\n                        <Picker.Item label=\"Đang vận chuyển đơn bị mất do điều phối viên\" value=\"retransporting\" />\r\n                        <Picker.Item label=\"Đang đợi lấy lại mẫu do điều phối viên làm mất\" value=\"relostsample\" />\r\n                    </Picker>\r\n                    <Text style={{marginLeft:200,fontWeight:'bold'}}>Quận/Huyện : </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.districtSelected}\r\n                        style={styles.requestTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            districtSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}                    \r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        {this.state.districtsList?this.state.districtsList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />\r\n                        )):null}\r\n                    </Picker>\r\n                </View>\r\n                <View style={styles.requestListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getRequestShowList()?this.getRequestShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.requestListFlatListArea}>\r\n                <FlatList style={styles.requestListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    // showsVerticalScrollIndicator={false}\r\n                    data={this.getRequestShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <RequestListViewItem\r\n                                    requestId={item.requestID}\r\n                                    requestCreatedTime={item.requestCreatedTime}\r\n                                    customerName={item.customerName}\r\n                                    customerPhoneNumber={item.customerPhoneNumber}\r\n                                    customerDOB={item.customerDOB}\r\n                                    requestAddress={item.requestAddress}\r\n                                    requestDistrictName={item.requestDistrictName}\r\n                                    requestTownName={item.requestTownName}\r\n                                    requestMeetingTime={item.requestMeetingTime}\r\n                                    nurseName={item.nurseName}\r\n                                    nurseId={item.nurseID}\r\n                                    coordinatorId={item.coordinatorID}\r\n                                    coordinatorName={item.coordinatorName}\r\n                                    lsSelectedTest={item.lsSelectedTest}\r\n                                    requestAmount={item.requestAmount}\r\n                                    requestStatus={item.requestStatus}\r\n                                    requestTestVersion={item.versionOfTest}\r\n                                    testVersion={this.props.testVersion}\r\n                                    testList={this.state.testsList} \r\n                                    token={this.props.token}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedRequest={this.props.setSelectedRequest?this.props.setSelectedRequest: null}         \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestListTopMenuArea: {\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n        paddingTop:10,\r\n    },\r\n    requestListTopMenuContainer: {\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:10,\r\n        paddingBottom:10,\r\n    },\r\n    requestTypeDropdown:{\r\n        height: 35, \r\n        width: 300,\r\n        borderRadius:5,\r\n        backgroundColor: 'white',\r\n        color:'black'\r\n    },\r\n    requestListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    requestListFlatList:{\r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n    \r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, Text, TextInput, ScrollView, TouchableOpacity} from 'react-native';\r\nimport {convertMoney} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class RequestTestViewItem extends Component {\r\n    \r\n    componentDidMount(){\r\n        // console.log(this.props.testID+' '+this.props.index+' '+this.props.countHide+' '+this.props.math+this.props.backgroundColor)\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <View style={[styles.testItem,{\r\n                backgroundColor:this.props.backgroundColor?this.props.backgroundColor:'white',    \r\n            }]}>\r\n                <View style={styles.testName}>\r\n                    <Text style={{fontSize:15,color:'#25345d'}} >{this.props.testName}</Text>\r\n                </View>\r\n                <View style={styles.testPrice}>\r\n                    <Text style={{fontSize:15,color:'#25345d'}}  >{convertMoney(this.props.testPrice)}</Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testItem:{\r\n        height:45,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        //borderWidth:1,\r\n        //borderColor:'#25345d',\r\n    },\r\n    testName:{\r\n        width: 500,\r\n        height:29,\r\n        paddingLeft:5,\r\n        paddingRight:5,\r\n        paddingTop:3\r\n    },\r\n    testPrice:{\r\n        width: 100,\r\n        height:15,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        marginBottom:2,\r\n        paddingRight:10\r\n    }\r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, Text, TextInput, ScrollView, TouchableOpacity, FlatList, Alert} from 'react-native';\r\nimport RequestTestViewItem from './RequestTestViewItem'\r\nimport {convertMoney} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class RequestTestCategoryItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={        \r\n            visible: false\r\n        }\r\n        this.isVisible = this.isVisible.bind(this);\r\n    }\r\n\r\n    isVisible(){\r\n        let result = false;\r\n        this.props.test.forEach(test => {\r\n            this.props.isSelected(test.testID) == true ? result=true : '';  \r\n        });\r\n        return result;\r\n    }\r\n\r\n    render(){\r\n        const testList = this.props.test;\r\n        let countHide = 0;\r\n        return(\r\n            <View>\r\n            {this.isVisible() ?\r\n            <View>\r\n                <View style={styles.testCategoryItem}  >\r\n                    <View style={styles.testCategoryNameContainer}>\r\n                        <Text style={{fontSize:17,color:''}} >{this.props.categoryName}</Text>\r\n                    \r\n                    </View>\r\n                </View>\r\n                <FlatList \r\n                    style ={styles.TestListAreaScrollView}                        \r\n                    showsVerticalScrollIndicator={false}\r\n                    scrollEnabled={false}\r\n                    data={testList}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item, index}) => {\r\n                            this.props.isSelected(item.testID) ?  null : countHide+=1 ;\r\n                            return ( \r\n                                <View>                                 \r\n                                { this.props.isSelected(item.testID) ?\r\n                                    // <View style={[styles.testItem,{\r\n                                    //     backgroundColor:(parseInt(index)-countHide) % 2 == 0 ? '#EEE': '#FFF',    \r\n                                    // }]}>\r\n                                    //     <View style={styles.testName}>\r\n                                    //         <Text style={{fontSize:15,color:'#25345d'}} >{item.testName}</Text>\r\n                                    //     </View>\r\n                                    //     <View style={styles.testPrice}>\r\n                                    //         <Text style={{fontSize:15,color:'#25345d'}}  >{convertMoney(item.price)}</Text>\r\n                                    //     </View>\r\n                                    // </View>\r\n\r\n                                    <RequestTestViewItem \r\n                                    testName={item.testName}\r\n                                    testPrice={item.price}\r\n                                    testID={item.testID}\r\n                                    // backgroundColor={(parseInt(index)-countHide) % 2 === 0 ? '#EEE': '#FFF'}\r\n                                    backgroundColor='white'\r\n                                    countHide={countHide}\r\n                                    index={index}\r\n                                    math={(parseInt(index)-countHide) % 2 }\r\n                                    /> \r\n                                    : null}    \r\n                                </View>                          \r\n                            );\r\n                        }}\r\n                />\r\n            </View> \r\n            : null }\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testCategoryItem:{\r\n        height:50,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n        borderColor:'#25345d',\r\n              \r\n    },\r\n    TestListAreaScrollView:{\r\n        width: '100%',\r\n        flex:1,\r\n        backgroundColor:'white',\r\n        borderRadius:10,\r\n    },\r\n    testCategoryNameContainer:{\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        height:35,\r\n        paddingLeft:5,\r\n        paddingRight:5,   \r\n    },\r\n    testItem:{\r\n        height:45,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        //borderWidth:1,\r\n        //borderColor:'#25345d',\r\n    },\r\n    testName:{\r\n        width: 500,\r\n        height:29,\r\n        paddingLeft:5,\r\n        paddingRight:5,\r\n        paddingTop:3\r\n    },\r\n    testPrice:{\r\n        width: 100,\r\n        height:15,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        marginBottom:2,\r\n        paddingRight:10\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, getStateName, componentWidth, convertDateTimeToDate, convertDateTimeToTime, convertMoney} from './../Common/CommonFunction'\r\nimport AlertScreen from './../Common/AlertScreen'\r\nimport RequestTestCategoryItem from './RequestTestCategoryItem'\r\n\r\nexport default class RequestView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {        \r\n            testList: this.props.testList,\r\n            resultList: [],\r\n        };\r\n        this.isSelected = this.isSelected.bind(this)\r\n        this.getLeftButtonName = this.getLeftButtonName.bind(this)\r\n        this.getRightButtonName = this.getRightButtonName.bind(this)\r\n        this.onLeftButtonPress = this.onLeftButtonPress.bind(this)\r\n        this.onRightButtonPress = this.onRightButtonPress.bind(this)\r\n        this.callApiTakingSample = this.callApiTakingSample.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.request.requestStatus=='closed') this.callApiResultList()\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n        if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n            if(this.props.request.requestStatus=='closed') this.callApiResultList()\r\n        }\r\n    }\r\n\r\n    callApiResultList () {\r\n        fetch(getApiUrl()+\"/requests/detail/\"+this.props.request.requestId+\"/result\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                result ? result.message? null :\r\n                this.setState(previousState => ({\r\n                    resultList: result,\r\n                })) :null\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    \r\n    isSelected(id) {\r\n        const found = this.props.request?this.props.request.lsSelectedTest.findIndex(test => test == id) : -1;\r\n        let result = false;\r\n        found === -1 ? '' : result = true;\r\n        return result;\r\n    }\r\n\r\n    callApiTakingSample(){\r\n        fetch(getApiUrl()+\"/requests/update/\"+this.props.request.requestId, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    status: 'waitingforresult',\r\n                    userID: this.props.userInfo.id,\r\n                    note: 'Coordinator have take this request',\r\n                }),\r\n                })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) {\r\n                    let request = this.props.request\r\n                    request.requestStatus = 'waitingforresult'\r\n                    this.props.setSelectedRequest(request)\r\n                    this.props.changeShowView('RequestView')\r\n                }\r\n                \r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n    \r\n    onTakingSample(){\r\n        this.callApiTakingSample()\r\n        \r\n    }\r\n\r\n    onLostSample(){\r\n        this.props.changeShowView('RequestLostSampleView')\r\n    }\r\n\r\n    onUpdateResult(){\r\n        this.props.changeShowView('RequestUpdateResultView')\r\n    }\r\n\r\n    getLeftButtonName(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                return '';\r\n                break;\r\n            case 'waitingforresult':\r\n                return 'Làm mất mẫu';\r\n                break;            \r\n            default: '';\r\n        }\r\n    }\r\n\r\n    getRightButtonName(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                return 'Xác nhận lấy mẫu';\r\n                break;\r\n            case 'waitingforresult':\r\n                return 'Cập nhật kết quả';\r\n                break;            \r\n            default: ''\r\n        }\r\n    }\r\n\r\n\r\n    onLeftButtonPress(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                \r\n                break;\r\n            case 'waitingforresult':\r\n                this.onLostSample();\r\n                break;\r\n        }\r\n    }\r\n\r\n    onRightButtonPress(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                this.onTakingSample();\r\n                break;\r\n            case 'waitingforresult':\r\n                this.onUpdateResult();\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Chi tiết đơn yêu cầu xét nghiệm</Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>      \r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestId:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                        \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerName:''}</Text>    \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Địa chỉ nhận đơn: </Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestAddress+', '+this.props.request.requestTownName+', '+this.props.request.requestDistrictName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Y tá nhận đơn: </Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.nurseName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Điều phối viên: </Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.coordinatorName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Trạng thái: </Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.request?getStateName(this.props.request.requestStatus):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Tổng tiền: </Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.request?convertMoney(this.props.request.requestAmount)+'đ':''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <FlatList\r\n                                style={styles.rowFlatList}\r\n                                showsVerticalScrollIndicator={false}\r\n                                scrollEnabled={false}\r\n                                data={this.props.request?this.props.request.testList:[]}\r\n                                keyExtractor={(item, index) => index.toString()}\r\n                                renderItem={({ item }) => {\r\n                                    return (\r\n                                        <RequestTestCategoryItem\r\n                                            categoryName={item.testTypeName}\r\n                                            test={item.listTest}\r\n                                            isSelected={this.isSelected}\r\n                                        >\r\n                                        </RequestTestCategoryItem>\r\n                                    );\r\n                                }}\r\n                            >\r\n                        </FlatList>\r\n                    </View>\r\n                    {this.state.resultList.length==0?null:\r\n                    this.state.resultList.map(result => (                        \r\n                    <View style={styles.imagePreviewArea}>\r\n                        {/* <View style={styles.requestRowContainer}>\r\n                            <Text style={[styles.rowTextLong,{fontSize:15,width:600,paddingTop:3}]}>{' '+result.image}</Text>\r\n                        </View> */}\r\n                        <View style={styles.requestRowContainer}>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: result.image}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    ))\r\n                    }\r\n                </View>\r\n\r\n                <View style={styles.buttonArea}>\r\n                    {!this.getLeftButtonName(this.props.request?this.props.request.requestStatus:'') ==''?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onLeftButtonPress(this.props.request?this.props.request.requestStatus:'')}>\r\n                        <Text style={{color:'white'}}>{this.getLeftButtonName(this.props.request?this.props.request.requestStatus:'')}</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>\r\n                    }\r\n                    {!this.getRightButtonName(this.props.request?this.props.request.requestStatus:'')==''?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onRightButtonPress(this.props.request?this.props.request.requestStatus:'')}>\r\n                        <Text style={{color:'white'}}>{this.getRightButtonName(this.props.request?this.props.request.requestStatus:'')}</Text>\r\n                    </TouchableOpacity>  \r\n                    :<View/>\r\n                    }\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    requestArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:17,\r\n        fontWeight:'bold',\r\n        backgroundColor:''\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n    },\r\n    rowFlatList: {\r\n        width: '100%',\r\n        alignSelf: 'stretch',\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        // borderRadius: 10,\r\n        marginTop: 5,\r\n        backgroundColor:'gray'\r\n    },\r\n    rowImage:{\r\n        width:400,\r\n        height:400,\r\n        backgroundColor:'red'\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    imagePreview:{\r\n        height: 800,\r\n        width: 800,\r\n        aspectRatio: 10/10,\r\n        backgroundColor:''\r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class RequestLostSampleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            reason: '',\r\n            error: '',\r\n            errorList: ['','Phải điền lý do làm mất mẫu'],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.lostSample = this.lostSample.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    lostSample(){\r\n        if(this.checkValid()){\r\n            this.callApiLostSample()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.reason == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiLostSample(){\r\n        fetch(getApiUrl()+'/requests/update/'+this.props.request.requestId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            status: 'coordinatorlostsample',\r\n            userID: this.props.userInfo.id,\r\n            note: this.state.reason,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=true : null;\r\n                if (success) {\r\n                    let request = this.props.request\r\n                    request.requestStatus = 'coordinatorlostsample'\r\n                    this.props.setSelectedRequest(request)\r\n                    this.props.changeShowView('RequestView')\r\n                }\r\n                \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Báo mất mẫu xét nghiệm: </Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>   \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>        \r\n                        <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{'Lý do mất mẫu: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Điền lý do làm mất mẫu'}\r\n                            name={\"reason\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reason}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.requestConfirmButton} onPress={() => this.props.changeShowView('RequestView')}>\r\n                        <Text style={{color:'white'}}>Quay lại</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.requestConfirmButton} onPress={() => this.lostSample()}>\r\n                        <Text style={{color:'white'}}>Báo mất mẫu</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    requestArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:18,\r\n        fontWeight:'bold',\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n    },\r\n    requestTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    requestConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nexport default class RequestUpdateResultView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            // imageUriList: [{'image':'https://znews-photo.zadn.vn/w1024/Uploaded/jgtnrz/2020_03_23/Rebel_4.jpeg'}],\r\n            imageUriList: [],\r\n            requestTitle: '',\r\n            requestShortContent: '',\r\n            requestContent: '',\r\n            error: '',\r\n            errorList: ['','Bài viết chưa có ảnh min họa'],\r\n\r\n        };\r\n        this.selectPicture = this.selectPicture.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.completeUpdateResult = this.completeUpdateResult.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    completeUpdateResult(){\r\n        if(this.checkValid()){\r\n            this.callApiSetResultImage()\r\n            // this.callApiUpdateRequest()\r\n        }\r\n    }\r\n\r\n    checkValid(){  \r\n        if (this.state.imageUriList.length == 0) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiUpdateRequest(){\r\n        fetch(getApiUrl()+'/requests/update/'+this.props.request.requestId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            status: 'closed',\r\n            userID: this.props.userInfo.id,\r\n            note: 'Đã cập nhật kết quả',\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=true : null;\r\n                if (success) {\r\n                    let request = this.props.request\r\n                    request.requestStatus = 'closed'\r\n                    this.props.setSelectedRequest(request)\r\n                    this.props.changeShowView('RequestView')\r\n                }\r\n                \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    selectPicture = async () =>{\r\n        // console.log(result)\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                // this.callApiSetResultImage(result.uri)\r\n                let tempList = this.state.imageUriList\r\n                tempList.push({'image':result.uri})\r\n                // console.log(tempList)\r\n                this.setState({ imageUriList: tempList });   \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    callApiSetResultImage(){\r\n        let imageList = []\r\n        let index = this.state.imageUriList.length - 1;\r\n        while (index >= 0) {\r\n            imageList.push(this.state.imageUriList[index].image)\r\n            index-=1\r\n        }\r\n        console.log(imageList)\r\n        fetch(getApiUrl()+'/requests/detail/results/add', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            listImage: imageList,\r\n            userID: this.props.userInfo.id,\r\n            requestID: this.props.request.requestId\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=true : null;   \r\n                if(success){\r\n                    this.callApiUpdateRequest()\r\n                }  \r\n                        \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestAddViewArea}>\r\n            <View style={styles.requestAddTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Thêm kết quả xét nghiệm: </Text>                \r\n            </View>\r\n            <View style={styles.requestAddArea}>\r\n                <View style={styles.requestAddContainer}>                    \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>        \r\n                        <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh kết quả: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    {this.state.imageUriList.length==0?null:\r\n                    this.state.imageUriList.map(imageUri => (                        \r\n                    <View style={styles.imagePreviewArea}>\r\n                        {/* <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Text style={[styles.rowTextLong,{fontSize:15,width:600,paddingTop:3}]}>{' '+imageUri.image}</Text>\r\n                        </View> */}\r\n                        <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: imageUri.image}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    ))\r\n                    }\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.requestAddConfirmButton} onPress={() => this.completeUpdateResult()}>\r\n                    <Text>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestAddViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestAddTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    requestAddArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestAddContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:18,\r\n        fontWeight:'bold'\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:18,\r\n    },\r\n    requestTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    requestAddConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    imagePreview:{\r\n        width:600,\r\n        height:600,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getAppointmentStateName, getStateColor, componentWidth} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            testPrice: this.props.testPrice,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                testPrice: this.props.testPrice\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        // this.props.updatePrice?this.props.updatePrice(this.props.testId,value):null\r\n        if(name=='testPrice'){\r\n            this.setState({[name]: this.props.updatePrice(this.props.testId,value)});\r\n        }\r\n        else\r\n        this.setState({[name]: value});\r\n        \r\n        \r\n    }\r\n\r\n\r\n    render(){        \r\n        return(        \r\n            <View style={styles.testListItem}>  \r\n                <View style={[styles.testTextContainer,{marginTop:5,}]}>  \r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Loại Test: </Text>\r\n                    </View>\r\n                    <View style={styles.testListSecondColumnContainer}>\r\n                        <Text style={{fontSize:17}}>{this.props.testTypeName}</Text>\r\n                    </View>\r\n                </View>                               \r\n                <View style={styles.testTextContainer}>           \r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Tên Test: </Text>\r\n                    </View>\r\n                    <View style={styles.testListSecondColumnContainer}>\r\n                        <Text style={{fontSize:17}}>{this.props.testName}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={[styles.testTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Giá tiền: </Text>\r\n                    </View>\r\n                    <TextInput style={styles.rowTextInput}\r\n                        placeholder={'nhập giá tiền (VNĐ)'}\r\n                        name={\"testPrice\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.testPrice.toString()}\r\n                        >   \r\n                    </TextInput>\r\n                </View>                     \r\n            </View>      \r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    testListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    testTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:20,\r\n        paddingRight:10,\r\n        paddingBottom:5,\r\n        paddingTop:5,\r\n    },\r\n    testListFirstColumnContainer:{\r\n        width:100,\r\n    },\r\n    testListSecondColumnContainer:{\r\n        width:500,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 100,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput} from 'react-native';\r\nimport TestListItem from './TestListItem'\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class TestUpdateView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            versionSelected:'2',\r\n            versionCreatedTime: null,\r\n            versionCreatorName: null,\r\n            testTypeSelected: 'none',\r\n            testTypeSelectedForCreate: 'none',\r\n            dataChanged: true,\r\n            testList: [],\r\n            testListApi: true,\r\n            testVersionApi: true,\r\n            testListTemp: [],\r\n            versionList: null,\r\n            testName: '',\r\n            testPrice: '',\r\n            newTestId: 1,\r\n            error: '',\r\n            errorList: ['','Phải chọn loại xét nghiệm','Phải điền tên xét nghiệm', 'Phải điền giá xét nghiệm'],\r\n        };\r\n        this.createTest = this.createTest.bind(this)\r\n        this.handleChange= this.handleChange.bind(this)\r\n        this.getTestList = this.getTestList.bind(this)\r\n        this.updatePrice = this.updatePrice.bind(this)\r\n        this.setSelectedVersion = this.setSelectedVersion.bind(this)\r\n        this.callApiUpdateVersion = this.callApiUpdateVersion.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.callApiGetVersionList()\r\n        // this.callApiGetTestList()\r\n    }\r\n\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                // testList: this.props.testList,\r\n                // testListTemp: this.props.testList,\r\n            }));\r\n        }\r\n    }\r\n\r\n    callApiGetVersionList(){\r\n        if(this.state.testVersionApi){\r\n            this.setState(previousState => ({\r\n                testVersionApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/tests/versions/list\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success){\r\n                        this.setState(previousState => ({\r\n                            versionList: result,\r\n                            versionSelected: result[0].versionID,\r\n                            versionCreatedTime: result[0].createdTime,\r\n                            versionCreatorName: result[0].creatorName,\r\n                            testVersionApi: true,\r\n                        }));\r\n                        this.callApiGetTestList()\r\n                    }\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )  \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    createTest(){\r\n        if(this.checkValid()){\r\n            // let result = []\r\n            // let index = this.state.testListTemp.length - 1;\r\n            // while (index >= 0) {\r\n            //     if (this.state.testListTemp[index].testTypeID == this.state.testTypeSelectedForCreate) {\r\n            //         let testList = this.state.testListTemp[index].listTest\r\n            //         let newTest = {\r\n            //             'testID':(\"new\"+this.state.newTestId),\r\n            //             'testName':this.state.testName,                   \r\n            //             'price':this.state.testPrice,\r\n            //             'testTypeID': this.state.testTypeSelectedForCreate,\r\n            //             'testTypeName': this.state.testListTemp[index].testTypeName,\r\n            //             }\r\n            //         testList.push(newTest)\r\n\r\n            //         // let indexTest = this.state.testListTemp[index].listTest.length -1\r\n            //         // while(indexTest >= 0){\r\n            //         //     var test = this.state.testListTemp[index].listTest[indexTest]\r\n            //         //     test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n            //         //     result.push(test)\r\n            //         //     indexTest -=1;\r\n            //         // }\r\n            //     }\r\n            //     index -= 1;   \r\n            // } \r\n        }    \r\n    }\r\n    \r\n    checkValid(){     \r\n        // console.log(\"base \"+this.state.testPrice)   \r\n        // console.log(\"isNaN \"+isNaN(this.state.testPrice))   \r\n        // console.log(\"prase \"+parseInt(this.state.testPrice))   \r\n        // var numbers = \"/^[0-9]+$/\";\r\n        // console.log(\"match \"+this.state.testPrice.match(numbers))   \r\n        if (this.state.testTypeSelectedForCreate == 'none') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.testName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.testPrice == '' || isNaN(this.state.testPrice)) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiUpdateVersion  = async () => {\r\n        let result = []\r\n        let index = this.state.testListTemp.length - 1;\r\n        while (index >= 0) {\r\n            let indexTest = this.state.testListTemp[index].listTest.length -1\r\n            while(indexTest >= 0){     \r\n                var test = this.state.testListTemp[index].listTest[indexTest]           \r\n                result.push(test)\r\n                indexTest -=1;\r\n            }\r\n            index -= 1;\r\n        }        \r\n        console.log(result)\r\n        fetch(getApiUrl()+'/tests/versions/upgrade-version', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                creatorID: this.props.userInfo.id,\r\n                lsInputTest: result,\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                this.callApiGetVersionList()\r\n                // this.callApiGetTestList()\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    updatePrice(testId,newPrice){\r\n        if (newPrice == '' || isNaN(newPrice)) return '0'\r\n        let result = []\r\n        let index = this.state.testListTemp.length - 1;\r\n        while (index >= 0) {\r\n            var testType = this.state.testListTemp[index]\r\n            let testList = []\r\n            let indexTest = this.state.testListTemp[index].listTest.length -1\r\n            while(indexTest >= 0){\r\n                var test = this.state.testListTemp[index].listTest[indexTest]\r\n                if (test.testID == testId){\r\n                    test.price = newPrice\r\n                } \r\n                testList.push(test)               \r\n                indexTest -=1;\r\n            }\r\n            testType['listTest'] = testList;\r\n            result.push(testType)\r\n            index -= 1;            \r\n        }      \r\n        return newPrice\r\n        // console.log(this.state.testListTemp)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    setSelectedVersion(versionId){\r\n        let index = this.state.versionList.length -1\r\n        while(index >= 0){\r\n            var version = this.state.versionList[index]\r\n            if (version.versionID == versionId){\r\n                this.setState({\r\n                    versionSelected: versionId,\r\n                    versionCreatedTime: version.createdTime,\r\n                    versionCreatorName: version.creatorName,\r\n                })\r\n            }     \r\n            index -= 1;\r\n        }      \r\n        this.callApiGetTestList(versionId)\r\n        \r\n        \r\n    }\r\n\r\n    callApiGetTestList(version){\r\n        if(this.state.testListApi){\r\n            this.setState(previousState => ({\r\n                testListApi: false,\r\n            }));\r\n            let url = ''\r\n            if (version) url =  getApiUrl()+\"/tests/versions/list-all-test/\"+version\r\n            else url =  getApiUrl()+\"/tests/versions/lastest-version-test/\"\r\n            fetch(url,{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    let list = []\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    {\r\n                        this.setState(previousState => ({\r\n                            testList: result.lsTests ,\r\n                            testListTemp: result.lsTests ,\r\n                            testListApi: true,\r\n                        }));\r\n                    }\r\n                    else \r\n                    this.setState(previousState => ({\r\n                            testList: [],\r\n                            testListTemp: [],\r\n                            testListApi: true,\r\n                        }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )  \r\n        }\r\n\r\n    }\r\n\r\n    getTestList(){\r\n        if (this.state.testTypeSelected =='none'){\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                while(indexTest >= 0){\r\n                    var test = this.state.testListTemp[index].listTest[indexTest]\r\n                    test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                    result.push(test)\r\n                    indexTest -=1;\r\n                }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        else{\r\n            // console.log(this.state.testTypeSelected)\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n                if (this.state.testListTemp[index].testTypeID == this.state.testTypeSelected) {\r\n                    let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                    while(indexTest >= 0){\r\n                        var test = this.state.testListTemp[index].listTest[indexTest]\r\n                        test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                        result.push(test)\r\n                        indexTest -=1;\r\n                    }\r\n                }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        return this.state.testList\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        \r\n        <View style={styles.testUpdateViewArea}>\r\n            {this.state.testListApi?this.state.testVersionApi?\r\n            <View style={styles.testUpdateViewArea}>\r\n                <View style={styles.testUpdateMenuArea}>\r\n                    <Picker\r\n                        selectedValue={this.state.versionSelected}\r\n                        style={styles.versionDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setSelectedVersion(itemValue)}                    \r\n                        >\r\n                        {this.state.versionList?this.state.versionList.map(version => (\r\n                            <Picker.Item label={version.versionID} value={version.versionID} key={version.versionID}/>\r\n                        )):null}\r\n                    </Picker> \r\n                    <View style={{flexDirection: 'row',}}>\r\n                        <Text style={[styles.rowText,{width:89,fontWeight:'bold'}]}>{\"Cập nhật: \"}</Text>\r\n                        <Text style={[styles.rowText,{width:173}]}>{(this.state.versionCreatedTime?convertDateTimeToDate(this.state.versionCreatedTime)+\"   \"+convertDateTimeToTime(this.state.versionCreatedTime):'')}</Text>   \r\n                    </View>\r\n                    <View style={{flexDirection: 'row',}}>\r\n                        <Text style={[styles.rowText,{width:143,fontWeight:'bold'}]}>{\"Người cập nhật: \"}</Text>  \r\n                        <Text style={[styles.rowText,{width:200}]}>{(this.state.versionCreatorName?this.state.versionCreatorName:'')}</Text> \r\n                    </View>\r\n                    \r\n                    <TouchableOpacity style={styles.testUpdateConfirmButton} onPress={() => this.callApiUpdateVersion()}>\r\n                        <Text style={{color:'white'}}>Cập nhật</Text>\r\n                    </TouchableOpacity>  \r\n                </View>\r\n                \r\n                <View style={styles.testAddArea}>\r\n                    <View style={styles.testUpdateContainer}>\r\n                        <View style={styles.testUpdateRowContainer}>\r\n                            <Text style={[styles.rowText,{fontWeight:'bold'}]}>Loại test: </Text>\r\n                            <Picker\r\n                                selectedValue={this.state.testTypeSelectedForCreate}\r\n                                style={styles.testTypeDropDown}\r\n                                onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                    testTypeSelectedForCreate:itemValue,\r\n                                })}                    \r\n                                >\r\n                                <Picker.Item label=\"Chọn loại xét nghiệm\" value=\"none\" key='none'/>\r\n                                {this.state.testList?this.state.testList.map(testType => (\r\n                                    <Picker.Item label={testType.testTypeName} value={testType.testTypeID} key={testType.testTypeID}/>\r\n                                )):null}\r\n                            </Picker>\r\n                            <TouchableOpacity style={styles.createTestButton} onPress={() => this.createTest()}>\r\n                                <Text style={{color:'white'}}>Tạo bài test</Text>\r\n                            </TouchableOpacity>   \r\n                        </View>\r\n                        <View style={styles.testUpdateRowContainer}>\r\n                            <Text style={[styles.rowText,{fontWeight:'bold'}]}>Tên test:</Text>\r\n                            <TextInput style={styles.rowTextInput}\r\n                                placeholder={'Nhập tên bài test'}\r\n                                name={\"testName\"}\r\n                                onChange={this.handleChange}\r\n                                value={this.state.testName}\r\n                                >                \r\n                            </TextInput>\r\n                        </View>\r\n                        <View style={styles.testUpdateRowContainer}>\r\n                            <Text style={[styles.rowText,{fontWeight:'bold'}]}>Giá tiền:</Text>\r\n                            <TextInput style={styles.rowTextInput}\r\n                                placeholder={'Nhập giá tiền (VNĐ)'}\r\n                                name=\"testPrice\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.testPrice}\r\n                                >                \r\n                            </TextInput>\r\n                        </View>\r\n                        <View style={styles.testUpdateRowContainer}>\r\n                            <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                        </View>\r\n                    </View>    \r\n                </View>\r\n                <View style={styles.testUpdateMenuArea}>\r\n                    <Picker\r\n                        selectedValue={this.state.testTypeSelected}\r\n                        style={styles.testTypeDropDown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            testTypeSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}                    \r\n                        >\r\n                        <Picker.Item label=\"Chọn loại xét nghiệm\" value=\"none\" key='none'/>\r\n                        {this.state.testList?this.state.testList.map(testType => (\r\n                            <Picker.Item label={testType.testTypeName} value={testType.testTypeID} key={testType.testTypeID}/>\r\n                        )):null}\r\n                    </Picker>\r\n                    <Text style={[styles.rowText,{width:500}]}>Số lượng: {this.getTestList()?this.getTestList().length:'0'}</Text>\r\n                </View>\r\n                <View style={styles.testListFlatListArea}>        \r\n                    <FlatList style={styles.testListFlatList}\r\n                        contentContainerStyle={{\r\n                            alignItems: 'center',\r\n                            justifyContent: 'flex-start',\r\n                        }}\r\n                        showsVerticalScrollIndicator={false}\r\n                        data={this.getTestList()}\r\n                        extraData={this.state.dataChanged}\r\n                        keyExtractor={(item, index) => index.toString()}\r\n                        renderItem={({item}) => {\r\n                                return (\r\n                                    <View>                                \r\n                                    <TestListItem\r\n                                        testId={item.testID}       \r\n                                        testName={item.testName}                             \r\n                                        testPrice={item.price}\r\n                                        testTypeId={item.testTypeID}  \r\n                                        testTypeName={item.testTypeName}  \r\n                                        updatePrice={this.updatePrice}                                                                   \r\n                                    />   \r\n                                    </View>                             \r\n                                );\r\n                            }}\r\n                        >                   \r\n                    </FlatList>        \r\n                </View>\r\n                \r\n            </View>\r\n            :\r\n            <View style={{height:300,flexDirection: 'row',alignItems: 'center',justifyContent: 'center',}}>\r\n                <Text>Hệ thống đang chạy, vui lòng đợi ...</Text>\r\n            </View>\r\n            :\r\n            <View style={{height:300,flexDirection: 'row',alignItems: 'center',justifyContent: 'center',}}>\r\n                <Text>Hệ thống đang chạy, vui lòng đợi ...</Text>\r\n            </View>\r\n            }\r\n        </View>\r\n        \r\n        \r\n    );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    testUpdateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    testUpdateMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    versionDropdown:{\r\n        padding:3,\r\n        width: 200,\r\n        borderRadius:5,\r\n        marginRight:30,\r\n    },\r\n    testAddArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginBottom:10,\r\n    },\r\n    testUpdateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    testUpdateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        \r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    testTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    testUpdateConfirmButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:50,\r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    testListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    testListFlatList:{\r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, Image, ImageBackground, Dimensions } from 'react-native';\r\nimport {screenWidth} from './CommonFunction'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    \r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.headerContainer} \r\n            // source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.textArea}>\r\n                <Text>Hệ thống đang chạy, vui lòng đợi ...</Text>\r\n            </View>\r\n            \r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst centerHeight=600\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        height:centerHeight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    },\r\n    textArea:{\r\n        backgroundColor:''\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions} from 'react-native';\r\n\r\nimport PageHeader from './PageHeader'\r\nimport PageFooter from './PageFooter'\r\n\r\nimport AccountListView from './AccountManagement/AccountListView'\r\nimport AccountCreateView from './AccountManagement/AccountCreateView'\r\nimport AccountView from './AccountManagement/AccountView'\r\nimport AccountChangePasswordView from './AccountManagement/AccountChangePasswordView'\r\n\r\n\r\nimport AppointmentListView from './Appointment/AppointmentListView'\r\nimport AppointmentView from './Appointment/AppointmentView'\r\nimport AppointmentRejectView from './Appointment/AppointmentRejectView'\r\n\r\nimport ArticleListView from './Article/ArticleListView'\r\nimport ArticleAddView from './Article/ArticleAddView'\r\nimport ArticleView from './Article/ArticleView'\r\n\r\nimport LoginView from './Authentication/LoginView'\r\n\r\nimport RequestListView from './Request/RequestListView'\r\nimport RequestView from './Request/RequestView'\r\nimport RequestLostSampleView from './Request/RequestLostSampleView'\r\nimport RequestUpdateResultView from './Request/RequestUpdateResultView'\r\n\r\nimport TestUpdateView from './Test/TestUpdateView'\r\n\r\nimport AlertScreen from './Common/AlertScreen'\r\n\r\nimport {getApiUrl, screenWidth} from './Common/CommonFunction'\r\nimport LoadingView from './Common/LoadingView'\r\nimport userList  from './../Data/userList'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            //screen function\r\n            Button1Selected: true,\r\n            Button2Selected: false,\r\n            Button3Selected: false,\r\n            Button4Selected: false,\r\n            Button5Selected: false,\r\n            dataChanged: true,\r\n            showView: 'RequestListView',\r\n\r\n            //authentication\r\n            logIn: false,\r\n            userInfo: null,\r\n            // logIn: true,\r\n            // userInfo: userList[0],\r\n            token: '',\r\n            \r\n            //request\r\n            requestList: null,\r\n            requestListApi: true,\r\n            selectedRequest: null,\r\n\r\n            //appointment\r\n            appointmentList: null,\r\n            appointmentListApi: true,\r\n            selectedAppointment: null,\r\n\r\n            //article\r\n            articleList: null,\r\n            articleListApi: true,\r\n            selectedArticle : null,\r\n\r\n            //test\r\n            testList: [],\r\n            testListApi: true,\r\n            testVersion: '',\r\n\r\n            //account\r\n            userList: null,\r\n            userListApi: true,\r\n            selectedAccount: null,\r\n\r\n            //other data\r\n            districtList: null,\r\n\r\n        };\r\n        this.loginSuccess = this.loginSuccess.bind(this)\r\n        this.logOut = this.logOut.bind(this)\r\n        this.searchRequest = this.searchRequest.bind(this)\r\n        this.menuButtonPress = this.menuButtonPress.bind(this)\r\n        this.changeShowView = this.changeShowView.bind(this)\r\n        this.setSelectedArticle = this.setSelectedArticle.bind(this)\r\n        this.setSelectedRequest = this.setSelectedRequest.bind(this)\r\n        this.setSelectedAppointment = this.setSelectedAppointment.bind(this)\r\n        this.setSelectedAccount = this.setSelectedAccount.bind(this)\r\n        this.updateUserInfo = this.updateUserInfo.bind(this)\r\n        this.searchUser = this.searchUser.bind(this)\r\n        \r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        console.log(Dimensions.get('window').width)\r\n        // console.log(this.state.userInfo)\r\n        // this.callApiRequestList()\r\n        // this.callApiTestList()\r\n        // this.callApiArticleList()\r\n        // this.callApiUserList()\r\n        // this.callApiAppointmentList()\r\n        // this.callApiDistrictList()\r\n        // setInterval(()=>{\r\n        //     console.log('try again')\r\n        //     this.callApiRequestList()\r\n        //     this.callApiArticleList()\r\n        //     this.callApiUserList()\r\n        //     this.callApiAppointmentList()\r\n        // },5000)\r\n    }\r\n\r\n    changeShowView(newView){\r\n        if (newView=='RequestListView') this.menuButtonPress('1')\r\n        if (newView=='AppointmentListView') this.menuButtonPress('2')\r\n        if (newView=='ArticleListView') this.menuButtonPress('3')\r\n        if (newView=='AccountListView') this.menuButtonPress('5')\r\n        this.setState(previousState => ({ \r\n            showView: newView,\r\n        }))\r\n    }\r\n\r\n    setSelectedArticle(_article){        \r\n        this.setState(previousState => ({ \r\n            selectedArticle: _article,\r\n        }))\r\n    }\r\n\r\n    setSelectedRequest(_request){        \r\n        this.setState(previousState => ({ \r\n            selectedRequest: _request,\r\n        }))\r\n    }\r\n\r\n    setSelectedAppointment(_appointment){    \r\n        // console.log(_appointment)    \r\n        this.setState(previousState => ({ \r\n            selectedAppointment: _appointment,\r\n        }))\r\n    }\r\n\r\n    setSelectedAccount(_account){ \r\n        // console.log(_account)       \r\n        this.setState(previousState => ({ \r\n            selectedAccount: _account,\r\n        }))\r\n    }\r\n\r\n    updateUserInfo(_userInfo){\r\n        this.setState(previousState => ({ \r\n            userInfo: _userInfo,\r\n        }))\r\n    }\r\n\r\n    searchRequest(requestId){\r\n        console.log(requestId)\r\n        let request = null\r\n        let index = this.state.requestList.length - 1;\r\n        while (index >= 0) {\r\n            // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n            if (this.state.requestList[index].requestID == requestId) {\r\n                request = this.state.requestList[index]\r\n                console.log(request)\r\n                if(this.state.testVersion != request.versionOfTest){\r\n                    fetch(getApiUrl()+\"/tests/versions/list-all-test/\"+request.versionOfTest,{\r\n                        method: 'GET',\r\n                        headers: {\r\n                            Accept: 'application/json',\r\n                            'Content-Type': 'application/json',\r\n                            Authorization: 'Bearer '+this.state.token,\r\n                        }\r\n                    })\r\n                    .then(res => res.json())\r\n                    .then(\r\n                        (result) => {\r\n                            console.log(result)\r\n                            let success = false\r\n                            let list = []\r\n                            result ? result.message? null : success=true : null;\r\n                            if (success)\r\n                            {\r\n                                this.changeToRequestViewScreen(request,result.lsTests)\r\n                                return false\r\n                            }\r\n                        },            \r\n                        (error) => {\r\n                            console.log(error)\r\n                        }\r\n                    )  \r\n                }\r\n                else this.changeToRequestViewScreen(request,this.state.testList);\r\n            }\r\n            index -= 1;\r\n        }   \r\n        if (request == null) return 'Không có xét nghiệm này'     \r\n    }\r\n\r\n    changeToRequestViewScreen(_request,testList){\r\n        const request= { \r\n            \"requestId\": _request.requestID,\r\n            \"requestCreatedTime\":_request.requestCreatedTime,\r\n            \"customerName\":_request.customerName,\r\n            \"customerPhoneNumber\":_request.customerPhoneNumber,\r\n            \"customerDOB\":_request.customerDOB,\r\n            \"requestAddress\":_request.requestAddress,\r\n            \"requestDistrictName\":_request.requestDistrictName,\r\n            \"requestTownName\": _request.requestTownName,\r\n            \"requestMeetingTime\": _request.requestMeetingTime,\r\n            \"nurseName\":_request.nurseName,\r\n            \"nurseID\":_request.nurseID,\r\n            \"coordinatorName\":_request.coordinatorName,\r\n            \"coordinatorId\":_request.coordinatorID,\r\n            \"lsSelectedTest\":_request.lsSelectedTest,\r\n            \"requestAmount\":_request.requestAmount,\r\n            \"requestStatus\":_request.requestStatus,\r\n            \"testList\":testList,\r\n            \"requestTestVersion\":_request.versionOfTest,\r\n            }\r\n        this.setSelectedRequest(request)\r\n        this.changeShowView('RequestView')\r\n    }\r\n\r\n    searchUser(userPhoneNumber){\r\n        console.log(userPhoneNumber)\r\n        let account = null\r\n        let index = this.state.userList.length - 1;\r\n        while (index >= 0) {\r\n            // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n            if (this.state.userList[index].phoneNumber == userPhoneNumber) {\r\n                account = this.state.userList[index]\r\n                console.log(account)\r\n                this.changeToAccountViewScreen(account);\r\n            }\r\n            index -= 1;\r\n        }   \r\n    }\r\n\r\n    changeToAccountViewScreen(_account){\r\n        const account= { \r\n            'accountId':_account.id, \r\n            'accountPhoneNumber':_account.phoneNumber,                      \r\n            'accountName':_account.name,\r\n            'accountDob':_account.dob,\r\n            'accountAddress':_account.address,\r\n            'accountPassword':_account.password,\r\n            'accountActive':_account.active,\r\n            'accountEmail':_account.email,\r\n            'accountRole':_account.role,\r\n            'accountGender':_account.gender,\r\n            'accountImageUrl':_account.image,\r\n            'accountTownCode':_account.townCode,\r\n            'accountDistrictCode':_account.districtCode,\r\n            }\r\n        this.setSelectedAccount(account)\r\n        this.changeShowView('AccountView')\r\n\r\n    }\r\n\r\n    loginSuccess(_userInfo,_token){\r\n        this.setState(previousState => ({ \r\n            logIn: true,\r\n            userInfo: _userInfo,\r\n            token: _token,\r\n        }))\r\n        setTimeout(() => {\r\n            this.callApiRequestList()\r\n            // this.callApiTestList()\r\n            // this.callApiArticleList()\r\n            // this.callApiUserList()\r\n            // this.callApiAppointmentList()\r\n            this.callApiDistrictList()\r\n        }, 5);\r\n    }\r\n\r\n    logOut(){\r\n        this.changeShowView('RequestListView')\r\n        this.setState(previousState => ({ \r\n            logIn: false,\r\n            userInfo: null,\r\n            token: null,\r\n        }))\r\n    }\r\n\r\n    menuButtonPress(button){\r\n        if (button==\"1\") this.callApiRequestList()\r\n        if (button==\"2\") this.callApiAppointmentList()\r\n        if (button==\"3\") this.callApiArticleList()\r\n        if (button==\"5\") this.callApiUserList()\r\n        this.setState(previousState => ({ \r\n            Button1Selected: button==\"1\"?true:false,\r\n            Button2Selected: button==\"2\"?true:false,\r\n            Button3Selected: button==\"3\"?true:false,\r\n            Button4Selected: button==\"4\"?true:false,\r\n            Button5Selected: button==\"5\"?true:false,\r\n            showView:   button==\"1\"? 'RequestListView': \r\n                        button==\"2\"? 'AppointmentListView': \r\n                        button==\"3\"? 'ArticleListView':  \r\n                        button==\"4\"? 'TestUpdateView':  \r\n                        button==\"5\"? 'AccountListView': 'RequestListView'\r\n                        ,\r\n            dataChanged: !this.state.dataChanged,\r\n        }))\r\n    }\r\n\r\n\r\n    callApiRequestList= async () => {\r\n        if(this.state.requestListApi){\r\n            this.setState(previousState => ({\r\n                requestListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/requests/list-all-request\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        requestList: result,\r\n                        requestListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    callApiAppointmentList= async () =>  {\r\n        if(this.state.appointmentListApi){\r\n            this.setState(previousState => ({\r\n                appointmentListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/appointments/list\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        appointmentList: result,\r\n                        appointmentListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    callApiArticleList= async () =>  {\r\n        if(this.state.articleListApi){\r\n            this.setState(previousState => ({\r\n                articleListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/articles/list\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        articleList: result,\r\n                        articleListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    callApiUserList= async () =>  {\r\n        if(this.state.userListApi){\r\n            this.setState(previousState => ({\r\n                userListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/users/list-all-user\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        userList: result,\r\n                        userListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n    \r\n    callApiTestList = async () => {\r\n        if(this.state.testListApi){\r\n            this.setState(previousState => ({\r\n                testListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/tests/versions/lastest-version-test/\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        testList: result.lsTests,\r\n                        testVersion: result.versionID,\r\n                        testListApi: true,\r\n                    }));\r\n                },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )  \r\n        }\r\n    }\r\n\r\n    callApiDistrictList = async () => {\r\n        fetch(getApiUrl()+\"/management/districts/district-town-list\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    districtList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <View style={{flex:1}}>\r\n            <PageHeader userInfo={this.state.userInfo?this.state.userInfo:null} changeShowView={this.state.userInfo?this.changeShowView:null}  setSelectedAccount={this.state.userInfo?this.setSelectedAccount:null} logOut={this.state.userInfo?this.logOut:null} searchRequest={this.searchRequest}/>\r\n            { !this.state.logIn ?\r\n            <LoginView loginSuccess={this.loginSuccess}/>\r\n            // <AlertScreen/>\r\n            :\r\n            <View style={styles.listAreaContainer}>\r\n                <View style={styles.topMenu}>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? screenWidth/4 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button1Selected ? 1:0,\r\n                        backgroundColor: this.state.Button1Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('1')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Yêu cầu xét nghiệm</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? screenWidth/4 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button2Selected ? 1:0,\r\n                        backgroundColor: this.state.Button2Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('2')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Cuộc Hẹn</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? screenWidth/4 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button3Selected ? 1:0,\r\n                        backgroundColor: this.state.Button3Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('3')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Bài đăng</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? screenWidth/4 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button4Selected ? 1:0,\r\n                        backgroundColor: this.state.Button4Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('4')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Test</Text>\r\n                    </TouchableOpacity>\r\n                    {this.state.userInfo.role=='COORDINATOR'? null :\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? 0 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button5Selected ? 1:0,\r\n                        backgroundColor: this.state.Button5Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('5')}\r\n                        >\r\n                        <Text style={styles.topMenuText}>Quản lý tài khoản</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                </View>                \r\n                <View style={{width:'100%',flex:1,backgroundColor:''}}>\r\n                {\r\n                //request\r\n                this.state.showView == 'RequestView'?\r\n                <RequestView  request={this.state.selectedRequest} testList={this.state.testList} userInfo={this.state.userInfo} changeShowView={this.changeShowView} setSelectedRequest={this.setSelectedRequest} token={this.state.token} />\r\n                : this.state.showView == 'RequestLostSampleView'?\r\n                <RequestLostSampleView  request={this.state.selectedRequest} userInfo={this.state.userInfo} changeShowView={this.changeShowView} setSelectedRequest={this.setSelectedRequest} token={this.state.token}/>\r\n                : this.state.showView == 'RequestUpdateResultView'?\r\n                <RequestUpdateResultView  request={this.state.selectedRequest} userInfo={this.state.userInfo} changeShowView={this.changeShowView} setSelectedRequest={this.setSelectedRequest} token={this.state.token}/>\r\n                //appointment\r\n                : this.state.showView == 'AppointmentView'?\r\n                <AppointmentView  appointment={this.state.selectedAppointment} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token} setSelectedAppointment={this.setSelectedAppointment}/>\r\n                : this.state.showView == 'AppointmentRejectView'?\r\n                <AppointmentRejectView appointment={this.state.selectedAppointment} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token} setSelectedAppointment={this.setSelectedAppointment}/>\r\n                //article\r\n                : this.state.showView == 'ArticleAddView'?\r\n                <ArticleAddView   token={this.state.token}  userInfo={this.state.userInfo} changeShowView={this.changeShowView} />\r\n                : this.state.showView == 'ArticleView'?\r\n                <ArticleView  article={this.state.selectedArticle} />\r\n                //account\r\n                : this.state.showView == 'AccountCreateView'?\r\n                <AccountCreateView  districtList={this.state.districtList} token={this.state.token}/>\r\n                : this.state.showView == 'AccountView'?\r\n                <AccountView  districtList={this.state.districtList}  account={this.state.selectedAccount} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo}/>\r\n                : this.state.showView == 'AccountChangePasswordView'?\r\n                <AccountChangePasswordView account={this.state.selectedAccount} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo} />\r\n                \r\n                : this.state.showView == 'RequestListView'? this.state.requestListApi?\r\n                <RequestListView requestList={this.state.requestList} testVersion={this.state.testVersion} changeShowView={this.changeShowView} setSelectedRequest={this.setSelectedRequest} districtList={this.state.districtList} token={this.state.token}/>: <LoadingView  />\r\n                : this.state.showView == 'AppointmentListView'? this.state.appointmentListApi?\r\n                <AppointmentListView appointmentList={this.state.appointmentList} changeShowView={this.changeShowView} setSelectedAppointment={this.setSelectedAppointment} districtList={this.state.districtList}/>: <LoadingView  />\r\n                : this.state.showView == 'ArticleListView'? this.state.articleListApi?\r\n                <ArticleListView  articleList={this.state.articleList} changeShowView={this.changeShowView} setSelectedArticle={this.setSelectedArticle}/>: <LoadingView  />\r\n                : this.state.showView == 'TestUpdateView'?\r\n                <TestUpdateView  testList={this.state.testList} userInfo={this.state.userInfo} token={this.state.token}/>\r\n                : this.state.showView == 'AccountListView'? this.state.userListApi?\r\n                <AccountListView userList={this.state.userList}  changeShowView={this.changeShowView} setSelectedAccount={this.setSelectedAccount} searchUser={this.searchUser}/>: <LoadingView  />                    \r\n                : <View/>\r\n                    \r\n                }\r\n                </View>\r\n                <PageFooter/>\r\n            </View>\r\n            }\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst menuHeight= 50\r\n\r\nconst styles = StyleSheet.create({\r\n    listAreaContainer: {\r\n        flex: 1,\r\n        width: screenWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    topMenu:{\r\n        height: menuHeight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor:'white'\r\n    },\r\n    topMenuButton:{\r\n        width: screenWidth/parseFloat(5),\r\n        height: menuHeight,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    topMenuText:{\r\n        fontSize:18,\r\n    }\r\n\r\n});\r\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport ListScreen from './components/ListScreen'\n\nexport default function App() {\n  return (\n      <ListScreen/>\n    // <View style={styles.container}>\n    //   <Text>Open up App.js to start working on your app!</Text>\n    // </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/MedTestForCoordinator/expo-service-worker.js', { scope: '/MedTestForCoordinator/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}