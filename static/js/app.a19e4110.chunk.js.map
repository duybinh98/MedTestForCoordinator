{"version":3,"sources":["Data/requestList.js","Data/districtList.js","Data/appointmentList.js","Data/userList.js","components/PageHeader.js","components/Common/CommonFunction.js","components/AccountManagement/AccountListViewItem.js","components/AccountManagement/AccountListView.js","components/AccountManagement/AccountCreateView.js","components/AccountManagement/AccountView.js","components/AccountManagement/AccountChangePasswordView.js","components/Appointment/AppointmentListViewItem.js","components/Appointment/AppointmentListView.js","components/Appointment/AppointmentView.js","components/Appointment/AppointmentRejectView.js","components/Article/ArticleListViewItem.js","components/Article/ArticleListView.js","components/Article/ArticleAddView.js","components/Article/ArticleView.js","components/Authentication/LoginView.js","components/Request/RequestListViewItem.js","components/Request/RequestListView.js","components/Request/RequestTestViewItem.js","components/Request/RequestTestCategoryItem.js","components/Request/RequestView.js","components/Request/RequestLostSampleView.js","components/Request/RequestUpdateResultView.js","components/Test/TestListItem.js","components/Test/TestUpdateView.js","components/ListScreen.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","ListScreen","props","state","editProfile","bind","logOut","this","userInfo","account","id","phoneNumber","name","dob","address","password","active","email","role","gender","image","townCode","districtCode","changeShowView","setSelectedAccount","ImageBackground","style","styles","headerContainer","source","resizeMode","View","leftArea","titleContainer","Text","fontSize","fontWeight","color","hotlineContainer","middleArea","TextInput","searchInputContainer","placeholder","rightArea","TouchableOpacity","onPress","Image","width","height","uri","nameContainer","Component","StyleSheet","create","flexDirection","alignItems","justifyContent","backgroundColor","padding","borderWidth","marginTop","flex","borderRadius","paddingLeft","convertDateTimeToDate","inputString","substring","convertDateTimeToTime","convertDateToDateTime","inputDate","getRoleName","getStateName","status","getAppointmentStateName","AccountListViewItem","onAccountPress","accountId","accountPhoneNumber","accountName","accountDob","accountAddress","accountPassword","accountActive","accountEmail","accountRole","accountGender","accountImageUrl","accountTownCode","accountDistrictCode","accountListItem","accountNameContainer","accountPhoneContainer","accountRoleContainer","alignSelf","Dimensions","get","paddingBottom","margin","marginRight","AccountListScreen","Button1Selected","Button2Selected","Button3Selected","Button4Selected","districtsList","districtList","accountSelected","userList","dataChanged","menuButtonPress","getAccountShowList","result","index","length","push","button","setState","previousState","Button5Selected","prevProps","prevState","articleListArea","accountListTopMenuArea","accountListTopMenuContainer","topMenuTextInput","createNewAccountButton","topMenuButton","roleSelectedColor","topMenuText","articleListFlatListArea","articleListFlatListTitleArea","articleListFlatListTitleContainer","articleListTitleNameContainer","articleListTitleText","articleListTitlePhoneContainer","articleListTitleRoleContainer","FlatList","articleListFlatList","contentContainerStyle","showsVerticalScrollIndicator","data","extraData","keyExtractor","item","toString","renderItem","paddingTop","paddingRight","TestListView","selectPicture","a","async","ImagePicker","console","log","cancelled","callApiUploadImage","accountRePassword","townList","listTown","districtSelected","townSelected","year","Date","getFullYear","month","getMonth","day","getDate","imageResultUri","error","errorList","handleChange","onDistrictChange","createNumberPickerList","getNumberOfDayInMonth","createAccount","event","target","value","districtId","getFebDay","start","end","startToEnd","i","Picker","Item","label","parseInt","checkValid","callApiCreateAccount","fetch","getApiUrl","method","headers","Accept","Authorization","token","body","JSON","stringify","getDob","then","res","json","success","message","_data","accountCreateViewArea","accountCreateMenuArea","rowText","accountCreateArea","accountCreateContainer","accountCreateRowContainer","rowTextInput","onChange","selectedValue","accountTypeDropDown","onValueChange","itemValue","itemIndex","secureTextEntry","map","district","districtName","town","townName","addImageButton","imagePreviewArea","imagePreview","rowTextError","accountCreateConfirmButton","marginBottom","createTestButton","marginLeft","accountListFlatListArea","accountListFlatList","updateAccountInformation","resetPassword","checkCurrentUser","checkAdmin","changePassword","userProcessingID","callApiUpdateAccountInfo","updateUserInfo","rowTextLong","buttonArea","accountOldPassword","callApiChangePassword","url","oldPassword","newPassword","AppointmentListView","onAppointmentPress","appointment","appointmentId","appointmentCreatedTime","customerName","customerPhoneNumber","customerDOB","appointmentMeetingTime","appointmentStatus","setSelectedAppointment","appointmentListItem","appointmentTextContainer","appointmentListFirstColumnContainer","appointmentListSecondColumnContainer","borderStyle","statusSelected","testsList","appointmentList","getAppointmentShowList","requestDistrictID","appointment_status","appointmentListArea","appointmentListTopMenuArea","appointmentListTopMenuContainer","appointmentTypeDropdown","appointmentListFlatListArea","appointmentListFlatList","appointment_id","appointment_createdTime","appointment_customerName","appointment_phoneNumber","appointment_DOB","appointment_meetingTime","AppointmentView","onAccept","onReject","_status","coordinatorID","note","callApiAcceptAppointment","appointmentViewArea","appointmentTopMenuArea","appointmentArea","appointmentContainer","appointmentRowContainer","rowFirstContainer","rowSecondContainer","AppointmentLostSampleView","reason","rejectAppointment","callApiRejectAppointment","multiline","numberOfLines","appointmentConfirmButton","appointmentTypeDropDown","ArticleListViewItem","onArticlePress","article","articleId","articleTitle","articleContent","articleShortContent","articleImageUrl","userId","articleCreatedTime","creatorName","setSelectedArticle","articleListItem","articleImageContainer","articleImage","articleTextContainer","articleTextContentContainer","articleTitleContainer","articleCreateTimeContainer","articleShortContentContainer","textAlign","articleTextCreatorNameContainer","articleCreatorNameContainer","ArticleListScreen","articleList","articleListTopMenuArea","createNewArticleButton","tittle","shortContent","content","userID","createdTime","ArticleAddView","createArticle","callApiCreateArticle","articleAddViewArea","articleAddTopMenuArea","articleAddArea","articleAddContainer","articleAddRowContainer","articleAddConfirmButton","articleTypeDropDown","ArticleView","imageUri","imageType","articleViewArea","articleArea","articleContainer","articleRowContainer","rowImage","articleTopMenuArea","Login","callApiLogin","loginSuccess","loginViewArea","rowContainer","loginButton","login","RequestListPendingItem","onRequestPress","request","requestId","requestCreatedTime","requestAddress","requestDistrictName","requestTownName","requestMeetingTime","nurseName","nurseID","lsSelectedTest","requestAmount","requestStatus","setSelectedRequest","requestListItem","requestListTextContainer","requestListFirstColumnContainer","requestListSecondColumnContainer","RequestListView","requestList","requestShowList","requestCount","getRequestShowList","requestListArea","requestListTopMenuArea","requestListTopMenuContainer","requestTypeDropdown","requestListFlatListArea","requestListFlatList","requestID","testList","RequestTestViewItem","testItem","testName","testPrice","_price","price","convertMoney","RequestTestCategoryItem","visible","isVisible","test","forEach","isSelected","testID","countHide","testCategoryItem","testCategoryNameContainer","categoryName","TestListAreaScrollView","scrollEnabled","math","borderColor","RequestView","getLeftButtonName","getRightButtonName","onLeftButtonPress","onRightButtonPress","findIndex","onLostSample","onTakingSample","onUpdateResult","requestViewArea","requestTopMenuArea","requestArea","requestContainer","requestRowContainer","rowFlatList","testTypeName","listTest","RequestLostSampleView","lostSample","callApiLostSample","requestConfirmButton","requestTypeDropDown","RequestUpdateResultView","imageUriList","requestTitle","requestShortContent","requestContent","completeUpdateResult","callApiSetResultImage","tempList","imageList","listImage","callApiUpdateRequest","requestAddViewArea","requestAddTopMenuArea","requestAddArea","requestAddContainer","requestAddConfirmButton","updatePrice","testId","testListItem","testTextContainer","testListFirstColumnContainer","testListSecondColumnContainer","TestUpdateView","callApiUpdateVersion","testListTemp","indexTest","creatorID","lsInputTest","callApiGetVersionList","versionSelected","versionCreatedTime","versionCreatorName","testTypeSelected","testTypeSelectedForCreate","versionList","newTestId","createTest","getTestList","setSelectedVersion","versionID","callApiGetTestList","testTypeID","newTest","newPrice","testType","versionId","version","lsTests","testUpdateViewArea","testUpdateMenuArea","versionDropdown","key","testUpdateConfirmButton","testUpdateArea","testUpdateContainer","testUpdateRowContainer","testTypeDropDown","testListFlatListArea","testListFlatList","testTypeId","callApiRequestList","callApiAppointmentList","callApiArticleList","articlesList","callApiUserList","callApiTestList","callApiDistrictList","showView","logIn","selectedRequest","selectedAppointment","selectedArticle","selectedAccount","newView","_article","_request","_appointment","_account","_userInfo","_token","setTimeout","WIDTH","listAreaContainer","topMenu","App","container","navigator","window","addEventListener","serviceWorker","register","scope","info","catch"],"mappings":"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","file":"static/js/app.a19e4110.chunk.js","sourcesContent":["var requestList = [\r\n    {\r\n        \"requestID\":\"1\",\r\n        \"customerID\":\"2\",\r\n        \"customerName\":\"Phạm Lê Quỳnh Lam\",\r\n        \"customerPhoneNumber\":\"0111111111\",\r\n        \"customerDOB\":\"1998-12-13T00:00:00.000+0000\",\r\n        \"requestAddress\":\"Số 123 ngõ 4 Phường Yên Phụ Quận Hai Bà Trưng\",\r\n        \"requestMeetingTime\":\"2020-03-15T21:04:27.000+0000\",\r\n        \"requestStatus\":\"closed\",\r\n        \"requestCreatedTime\":\"2020-03-23T10:17:18.000+0000\",\r\n        \"nurseID\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"nurseName\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"coordinatorID\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"coordinatorName\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"requestAmount\":\"700000\",\r\n        \"requestNote\":\"Customer số 1 đã huỷ\",\r\n        \"lsSelectedTest\":[\"1\",\"2\",\"3\",\"4\",\"5\"]\r\n    },\r\n    {\r\n        \"requestID\":\"2\",\r\n        \"customerID\":\"2\",\r\n        \"customerName\":\"Phạm Lê Quỳnh Lam\",\r\n        \"customerPhoneNumber\":\"0111111111\",\r\n        \"customerDOB\":\"1998-12-13T00:00:00.000+0000\",\r\n        \"requestAddress\":\"Số 123 ngõ 4 Phường Yên Phụ Quận Hai Bà Trưng\",\r\n        \"requestMeetingTime\":\"2020-03-15T21:04:27.000+0000\",\r\n        \"requestStatus\":\"closed\",\r\n        \"requestCreatedTime\":\"2020-03-23T10:17:18.000+0000\",\r\n        \"nurseID\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"nurseName\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"coordinatorID\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"coordinatorName\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"requestAmount\":\"700000\",\r\n        \"requestNote\":\"Customer số 1 đã huỷ\",\r\n        \"lsSelectedTest\":[\"1\",\"2\",\"3\",\"4\",\"5\"]\r\n    },\r\n]\r\n\r\n\r\nmodule.exports = requestList;\r\n","var districtList = [\r\n                {\r\n                    \"districtCode\": \"D0\",\r\n                    \"districtName\": \"Default\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D1\",\r\n                    \"districtName\": \"Quận Ba Đình\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D10\",\r\n                    \"districtName\": \"Quận Bắc Từ Liêm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D11\",\r\n                    \"districtName\": \"Huyện Thanh Trì\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D12\",\r\n                    \"districtName\": \"Huyện Gia Lâm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D13\",\r\n                    \"districtName\": \"Huyện Đông Anh\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D14\",\r\n                    \"districtName\": \"Huyện Sóc Sơn\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D15\",\r\n                    \"districtName\": \"Quận Hà Đông\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D16\",\r\n                    \"districtName\": \"Thị xã Sơn Tây\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D17\",\r\n                    \"districtName\": \"Huyện Ba Vì\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D18\",\r\n                    \"districtName\": \"Huyện Phúc Thọ\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D19\",\r\n                    \"districtName\": \"Huyện Thạch Thất\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D2\",\r\n                    \"districtName\": \"Quận Hoàn Kiếm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D20\",\r\n                    \"districtName\": \"Huyện Quốc Oai\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D21\",\r\n                    \"districtName\": \"Huyện Chương Mỹ\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D22\",\r\n                    \"districtName\": \"Huyện Đan Phượng\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D23\",\r\n                    \"districtName\": \"Huyện Hoài Đức\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D24\",\r\n                    \"districtName\": \"Huyện Thanh Oai\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D25\",\r\n                    \"districtName\": \"Huyện Mỹ Đức\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D26\",\r\n                    \"districtName\": \"Huyện Ứng Hòa\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D27\",\r\n                    \"districtName\": \"Huyện Thường Tín\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D28\",\r\n                    \"districtName\": \"Huyện Phú Xuyên\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D29\",\r\n                    \"districtName\": \"Huyện Mê Linh\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D3\",\r\n                    \"districtName\": \"Quận Hai Bà Trưng\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D30\",\r\n                    \"districtName\": \"Quận Nam Từ Liêm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D31\",\r\n                    \"districtName\": \"Huyện Từ Liêm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D4\",\r\n                    \"districtName\": \"Quận Đống Đa\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D5\",\r\n                    \"districtName\": \"Quận Tây Hồ\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D6\",\r\n                    \"districtName\": \"Quận Cầu Giấy\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D7\",\r\n                    \"districtName\": \"Quận Thanh Xuân\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D8\",\r\n                    \"districtName\": \"Quận Hoàng Mai\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D9\",\r\n                    \"districtName\": \"Quận Long Biên\"\r\n                }\r\n                ]\r\n\r\n\r\nmodule.exports = districtList;\r\n","var appointmentList = [\r\n    {\r\n        \"appointment_id\":3,\r\n        \"appointment_customerName\":\"Phạm Duy Bình\",\r\n        \"appointment_phoneNumber\":\"0222222222\",\r\n        \"appointment_DOB\":\"1998-02-15T00:00:00.000+0000\",\r\n        \"appointment_meetingTime\":\"2020-12-21T17:59:00.000+0000\",\r\n        \"appointment_status\":\"pending\",\r\n        \"appointment_note\":null,\r\n        \"appointment_createdTime\":\"2020-03-17T06:20:04.000+0000\"\r\n    },\r\n    {\r\n        \"appointment_id\":4,\r\n        \"appointment_customerName\":\"Phạm Duy Bình\",\r\n        \"appointment_phoneNumber\":\"0222222222\",\r\n        \"appointment_DOB\":\"1998-02-15T00:00:00.000+0000\",\r\n        \"appointment_meetingTime\":\"2020-12-21T17:59:00.000+0000\",\r\n        \"appointment_status\":\"accepted\",\r\n        \"appointment_note\":null,\r\n        \"appointment_createdTime\":\"2020-03-17T06:20:04.000+0000\"\r\n    }\r\n]\r\n\r\n\r\nmodule.exports = appointmentList;\r\n","var userList = [\r\n    {\r\n        \"id\":1,\r\n        \"phoneNumber\":\"0000000000\",\r\n        \"name\":\"Lam Phan\",\r\n        \"dob\":\"1970-01-01T00:00:00.000+0000\",\r\n        \"address\":\"Default-Address\",\r\n        \"password\":\"$2a$10$Rqs8uzm/mZzJHWABOeOi7OuqyPsptBgWNL5k7Cf9bDnWpRL4gSfbW\",\r\n        \"active\":1,\r\n        \"email\":\"medtest.default@gmail.com\",\r\n        \"role\":\"COORDINATOR\",\r\n        \"gender\":0,\r\n        \"image\":\"https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png\",\r\n        \"townCode\":\"T0\",\r\n        \"districtCode\":\"D0\"\r\n    },\r\n    {\r\n        \"id\":2,\r\n        \"phoneNumber\":\"0000000001\",\r\n        \"name\":\"DefaultCoordinator\",\r\n        \"dob\":\"1970-01-01T00:00:00.000+0000\",\r\n        \"address\":\"Default-Address\",\r\n        \"password\":\"$2a$10$Rqs8uzm/mZzJHWABOeOi7OuqyPsptBgWNL5k7Cf9bDnWpRL4gSfbW\",\r\n        \"active\":1,\r\n        \"email\":\"medtest.default@gmail.com\",\r\n        \"role\":\"ADMIN\",\r\n        \"gender\":0,\r\n        \"image\":\"https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png\",\r\n        \"townCode\":\"T0\",\r\n        \"districtCode\":\"D0\"\r\n    },\r\n]\r\n\r\n\r\nmodule.exports = userList;\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, ImageBackground, Picker, TouchableOpacity } from 'react-native';\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n        this.editProfile = this.editProfile.bind(this)\r\n        this.logOut = this.logOut.bind(this)\r\n    }\r\n\r\n    editProfile(){\r\n        if (this.props.userInfo){\r\n            const account= { \r\n            'accountId':this.props.userInfo.id, \r\n            'accountPhoneNumber':this.props.userInfo.phoneNumber,                      \r\n            'accountName':this.props.userInfo.name,\r\n            'accountDob':this.props.userInfo.dob,\r\n            'accountAddress':this.props.userInfo.address,\r\n            'accountPassword':this.props.userInfo.password,\r\n            'accountActive':this.props.userInfo.active,\r\n            'accountEmail':this.props.userInfo.email,\r\n            'accountRole':this.props.userInfo.role,\r\n            'accountGender':this.props.userInfo.gender,\r\n            'accountImageUrl':this.props.userInfo.image,\r\n            'accountTownCode':this.props.userInfo.townCode,\r\n            'accountDistrictCode':this.props.userInfo.districtCode,\r\n            }\r\n            this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n            this.props.changeShowView?this.props.setSelectedAccount(account):null\r\n        }\r\n    }\r\n\r\n    logOut(){\r\n        this.props.changeShowView?this.props.logOut():null\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.headerContainer} \r\n            source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.leftArea}>\r\n                <View style={styles.titleContainer}>\r\n                    <Text style={{fontSize:25, fontWeight:'bold',color:'white'}}>MedTest</Text>\r\n                </View>\r\n                <View style={styles.hotlineContainer}>\r\n                    <Text style={{fontSize:14}}>Hotline: 1900561252</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.middleArea}>\r\n                <TextInput style={styles.searchInputContainer}\r\n                placeholder={'Tìm xét nghiệm'}>                \r\n                </TextInput>\r\n            </View>\r\n            <View style={styles.rightArea}>\r\n                <TouchableOpacity style={{}} onPress={() => this.editProfile()}>\r\n                    <Image \r\n                        style={{\r\n                            width:100,\r\n                            height:100,\r\n                        }}\r\n                        source={{uri:this.props.userInfo?this.props.userInfo.image:''}}>\r\n                    </Image>\r\n                </TouchableOpacity>\r\n                <View style={styles.nameContainer} >\r\n                    <Text style={{fontSize:14,color:'white'}}>{this.props.userInfo?this.props.userInfo.name:''}</Text>\r\n                </View>\r\n                <TouchableOpacity style={styles.nameContainer} onPress={() => this.logOut()}>\r\n                    <Text style={{fontSize:14,color:'white'}}>{this.props.userInfo?'Đăng xuất':''} </Text>\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst headerHight=185\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        height:headerHight,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        // backgroundColor: '#3475b3',\r\n\r\n    },\r\n    leftArea:{\r\n        height:headerHight,\r\n        width:200,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        padding:20,\r\n    },\r\n    titleContainer:{\r\n        height:50,\r\n        width:100,\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        backgroundColor:''\r\n    },\r\n    hotlineContainer:{\r\n        height:35,\r\n        width:150,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        marginTop:10,\r\n    },\r\n    middleArea:{\r\n        height:headerHight,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:''\r\n    },\r\n    searchInputContainer:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:10,\r\n    },\r\n    rightArea:{\r\n        height:headerHight,\r\n        width:200,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:'',\r\n    },\r\n    nameContainer:{\r\n        height:30,\r\n        width:140,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    }\r\n});\r\n","\r\nexport function convertDateTimeToDate(inputString){\r\n    if (inputString == null ) return ''\r\n    return inputString.substring(8,10)+'-'+inputString.substring(5,7)+'-'+inputString.substring(0,4);\r\n}\r\n\r\nexport function convertDateTimeToTime(inputString){\r\n    if (inputString == null ) return ''\r\n    return inputString.substring(11,13)+':'+inputString.substring(14,16);\r\n}\r\n\r\nexport function convertDateAndTimeToDateTime(inputDate,inputTime){\r\n    return inputDate.substring(6,10)+'-'+inputDate.substring(3,5)+'-'+inputDate.substring(0,2)+'T'+inputTime+':00.000+0000'\r\n}\r\n\r\nexport function convertDateToDateTime(inputDate){\r\n    return inputDate.substring(6,10)+'-'+inputDate.substring(3,5)+'-'+inputDate.substring(0,2)+'T00:00:00.000+0000'\r\n}\r\n\r\nexport function getApiUrl(){\r\n    // return \"http://192.168.1.17:8080\";\r\n    return \"https://medtest-backend.herokuapp.com\";\r\n}\r\n\r\nexport function getRoleName(role){\r\n    switch (role) {\r\n        case 'CUSTOMER':\r\n            return 'Khách hàng';\r\n            break;\r\n        case 'NURSE':\r\n            return 'Y tá';\r\n            break;\r\n        case 'COORDINATOR':\r\n            return 'Điều phối viên'\r\n            break;\r\n        case 'ADMIN':\r\n            return 'Quản trị hệ thống'\r\n            break;\r\n        }   \r\n    }\r\n\r\n\r\nexport function convertMoney(_price){\r\n    let price = _price.toString()\r\n    let index = price.length -1\r\n    let result = ''\r\n    while (index >= 3) {\r\n        // console.log(price+\": \"+price.substring(index-2,index+1)+', '+index)\r\n        result = '.'+price.substring(index-2,index+1)+result\r\n        index-=3\r\n    }\r\n    result = price.substring(0,index+1)+result\r\n    return result\r\n}\r\n\r\nexport function getStateName(status){\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'Đang đợi y tá nhận đơn';\r\n            break;\r\n        case 'coordinatorlostsample':\r\n            return 'Điều phối viên làm mất mẫu';\r\n            break;\r\n        case 'accepted':\r\n            return 'Đang đợi lấy mẫu';\r\n            break;\r\n        case 'transporting':\r\n            return 'Đang vận chuyển mẫu';\r\n            break;\r\n        case 'lostsample':\r\n            return 'Đang đợi lấy lại mẫu';\r\n            break;\r\n        case 'waitingforresult':\r\n            return 'Đang đợi kết quả';\r\n            break;\r\n        case 'closed':\r\n            return 'Đã xong';\r\n            break;\r\n        case 'canceled':\r\n            return 'Đã bị hủy';\r\n            break;\r\n        \r\n    } \r\n}\r\n\r\n\r\nexport function getAppointmentStateName(status){\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'Đơn đang đợi xử lý';\r\n            break;\r\n        case 'accepted':\r\n            return 'Đơn đã được chấp nhận';\r\n            break;\r\n        case 'rejected':\r\n            return 'Đơn đã bị từ chối';\r\n            break;\r\n        case 'canceled':\r\n            return 'Đơn đã bị hủy';\r\n            break;\r\n        \r\n        } \r\n    }\r\n\r\n\r\n\r\nexport function getStateColor(status){\r\n        switch (status) {\r\n        case 'pending':\r\n            return '#ffd66f';\r\n            break;\r\n        case 'coordinatorlostsample':\r\n            return '#ffd66f';\r\n            break;\r\n        case 'accepted':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'transporting':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'lostsample':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'waitingforresult':\r\n            return '#6398d6';\r\n            break;\r\n        case 'closed':\r\n            return '#000';\r\n            break;\r\n        \r\n        } \r\n    }","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getRoleName} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class AccountListViewItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            // appointment_date: convertDateTimeToDate(this.props.appoint_date),\r\n            // appointment_time: convertDateTimeToTime(this.props.appoint_date),\r\n        };\r\n        this.onAccountPress = this.onAccountPress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n\r\n    onAccountPress(){\r\n        const account= { \r\n            'accountId':this.props.accountId, \r\n            'accountPhoneNumber':this.props.accountPhoneNumber,                      \r\n            'accountName':this.props.accountName,\r\n            'accountDob':this.props.accountDob,\r\n            'accountAddress':this.props.accountAddress,\r\n            'accountPassword':this.props.accountPassword,\r\n            'accountActive':this.props.accountActive,\r\n            'accountEmail':this.props.accountEmail,\r\n            'accountRole':this.props.accountRole,\r\n            'accountGender':this.props.accountGender,\r\n            'accountImageUrl':this.props.accountImageUrl,\r\n            'accountTownCode':this.props.accountTownCode,\r\n            'accountDistrictCode':this.props.accountDistrictCode,\r\n            }\r\n        // console.log(account)\r\n        this.props.setSelectedAccount?this.props.setSelectedAccount(account):null\r\n        this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.accountListItem}\r\n                onPress={() => this.onAccountPress()}\r\n                >\r\n                <View style={styles.accountNameContainer}>                                       \r\n                <Text style={{fontSize:17}}>{this.props.accountName}</Text>\r\n                </View>\r\n                <View style={styles.accountPhoneContainer}>                                       \r\n                <Text style={{fontSize:17}}>{this.props.accountPhoneNumber}</Text>\r\n                </View>\r\n                <View style={styles.accountRoleContainer}>                                       \r\n                <Text style={{fontSize:17}}>{getRoleName(this.props.accountRole)}</Text>  \r\n                </View>\r\n                     \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingBottom:2,  \r\n    },\r\n    accountNameContainer:{\r\n        margin:10,\r\n        width:350,\r\n        alignItems: 'center',\r\n        marginRight:150,\r\n    },\r\n    accountPhoneContainer:{\r\n        margin:10,\r\n        width:200,\r\n        marginRight:100,\r\n        alignItems: 'center',\r\n    },\r\n    accountRoleContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n    },\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport AccountListViewItem from './AccountListViewItem'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class AccountListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            Button1Selected: true,\r\n            Button2Selected: false,\r\n            Button3Selected: false,\r\n            Button4Selected: false,\r\n            Button4Selected: false,\r\n            districtsList: districtList,\r\n            accountSelected: 'all',\r\n            userList: this.props.userList?this.props.userList:[],\r\n            dataChanged: true,\r\n        };\r\n        this.menuButtonPress = this.menuButtonPress.bind(this)\r\n        this.getAccountShowList = this.getAccountShowList.bind(this)\r\n    }\r\n\r\n\r\n    \r\n    getAccountShowList(){\r\n        \r\n        if (this.state.accountSelected=='all'){\r\n            return this.state.userList\r\n        }\r\n        else{\r\n            let result = []\r\n            let index = this.state.userList.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.userList[index].role === this.state.accountSelected) {\r\n                    result.push(this.state.userList[index]);\r\n                    }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        \r\n        return this.state.userList\r\n    }\r\n\r\n\r\n\r\n\r\n    menuButtonPress(button){\r\n        this.setState(previousState => ({ \r\n            Button1Selected: button==\"1\"?true:false,\r\n            Button2Selected: button==\"2\"?true:false,\r\n            Button3Selected: button==\"3\"?true:false,\r\n            Button4Selected: button==\"4\"?true:false,\r\n            Button5Selected: button==\"5\"?true:false,\r\n            accountSelected: button==\"1\"? 'all': button==\"2\"? 'COORDINATOR': button==\"3\"? 'NURSE' : button==\"4\"? 'CUSTOMER': 'ADMIN',\r\n            dataChanged: !this.state.dataChanged,\r\n        }))\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                userList: this.props.userList,\r\n                dataChanged: !this.state.dataChanged,\r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    // componentDidUpdate  (prevProps, prevState) {        \r\n    //      if (prevProps !== this.props) {\r\n    //         this.setState(previousState => ({ \r\n    //             userList: this.props.userList,\r\n    //         }));\r\n    //     }\r\n    // }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleListArea}>\r\n            <View style={styles.accountListTopMenuArea}>\r\n                <View style={styles.accountListTopMenuContainer}>\r\n                    <TextInput style={styles.topMenuTextInput}\r\n                    placeholder={'Tìm kiếm tài khoản theo số điện thoại'}>                \r\n                    </TextInput>\r\n                    <TouchableOpacity \r\n                        style={styles.createNewAccountButton} \r\n                        onPress={() => this.props.changeShowView ? this.props.changeShowView('AccountCreateView'): null}\r\n                        >\r\n                        <Text>Tạo tài khoản nhân viên</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={[styles.accountListTopMenuContainer,{\r\n                    justifyContent: 'flex-start',\r\n                    }]}>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button1Selected ? 1:0,\r\n                        backgroundColor: this.state.Button1Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('1')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Tất cả</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button2Selected ? 1:0,\r\n                        backgroundColor: this.state.Button2Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('2')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Điều phối viên</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button3Selected ? 1:0,\r\n                        backgroundColor: this.state.Button3Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('3')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Y tá</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button4Selected ? 1:0,\r\n                        backgroundColor: this.state.Button4Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('4')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Khách hàng</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button5Selected ? 1:0,\r\n                        backgroundColor: this.state.Button5Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('5')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Quản trị hệ thống</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={styles.accountListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getAccountShowList()?this.getAccountShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.articleListFlatListArea}>     \r\n                <View style={styles.articleListFlatListTitleArea}> \r\n                    <View style={styles.articleListFlatListTitleContainer}> \r\n                        <View style={styles.articleListTitleNameContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Tên người dùng</Text>\r\n                        </View>\r\n                        <View style={styles.articleListTitlePhoneContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Số điện thoại</Text>\r\n                        </View>\r\n                        <View style={styles.articleListTitleRoleContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Vị trí</Text>  \r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <FlatList style={styles.articleListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getAccountShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <AccountListViewItem\r\n                                    accountId={item.id}         \r\n                                    accountPhoneNumber={item.phoneNumber}                            \r\n                                    accountName={item.name}    \r\n                                    accountDob={item.dob}    \r\n                                    accountAddress={item.address}\r\n                                    accountPassword={item.password}\r\n                                    accountActive={item.active}\r\n                                    accountEmail={item.email}         \r\n                                    accountRole={item.role}                            \r\n                                    accountGender={item.gender}    \r\n                                    accountImageUrl={item.image}    \r\n                                    accountTownCode={item.townCode}\r\n                                    accountDistrictCode={item.districtCode}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedAccount={this.props.setSelectedAccount?this.props.setSelectedAccount: null}  \r\n                                                                                                    \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList> \r\n                       \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst roleSelectedColor = '#c0c0c0';\r\n\r\nconst roleSelectButtonHeight = 30;\r\n\r\nconst styles = StyleSheet.create({\r\n    articleListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountListTopMenuArea: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:40,\r\n        paddingTop:10,\r\n    },\r\n    accountListTopMenuContainer: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:10,\r\n        paddingLeft:190,\r\n        paddingRight:200,\r\n    },\r\n    topMenuTextInput:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:10,\r\n    },\r\n    topMenuButton:{\r\n        width: (Dimensions.get('window').width-400)/5,\r\n        height: roleSelectButtonHeight,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    createNewAccountButton:{\r\n        width: 240,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        // marginRight:200,\r\n    },\r\n    articleListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    articleListFlatListTitleArea:{\r\n        alignSelf: 'stretch',\r\n        width: \"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    articleListFlatListTitleContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',   \r\n        backgroundColor:'#c0c0c0',     \r\n    },\r\n    articleListTitleNameContainer:{\r\n        margin:10,\r\n        width:350,\r\n        alignItems: 'center',\r\n        marginRight:150,\r\n    },\r\n    articleListTitlePhoneContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n        marginRight:100,\r\n    },\r\n    articleListTitleRoleContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n    },\r\n    articleListTitleText:{\r\n        fontSize:17, \r\n        fontWeight:'bold'\r\n    },\r\n    articleListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n    },\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',\r\n            accountEmail:'',\r\n            accountDob: '',\r\n            accountGender: '',\r\n            accountPassword: '',\r\n            accountRePassword: '',\r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountAddress: '',\r\n            accountRole: '',\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            day: new Date().getDate(),\r\n            imageResultUri: '',\r\n            error: '',\r\n            errorList: ['',\r\n                    'Tên chủ tài khoản không được bỏ trống',\r\n                    'Số điện thoại phải có mười số',\r\n                    'Địa chỉ email không được bỏ trống',\r\n                    'Mật khẩu phải có ít nhất 6 kí tự',\r\n                    'Xác nhận mật khẩu không trùng với mật khẩu ',\r\n                    'Địa chỉ không được bỏ trống'],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onDistrictChange = this.onDistrictChange.bind(this)\r\n        this.createNumberPickerList = this.createNumberPickerList.bind(this)\r\n        this.getNumberOfDayInMonth = this.getNumberOfDayInMonth.bind(this)\r\n        this.createAccount = this.createAccount.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            imageResultUri: '',\r\n            error: '',\r\n        }));\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                districtList: this.props.districtList?this.props.districtList:[],\r\n                townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n                districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n                townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n                imageResultUri: '',\r\n                error: '',\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onDistrictChange(districtId){\r\n        this.setState({\r\n            districtSelected:districtId,                  \r\n        })\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == districtId){\r\n                this.setState({\r\n                    townList:  this.state.districtList[index].listTown,\r\n                    townSelected: this.state.districtList[index].listTown[0]?this.state.districtList[index].listTown[0].townCode:'none'              \r\n                })\r\n                index = 0;\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    getFebDay(){        \r\n        const year = this.state.year\r\n        if (year % 400 == 0 ) return 29\r\n        if (year % 100 == 0 ) return 28\r\n        if (year % 4 == 0) return 29\r\n        return 28\r\n    }\r\n\r\n    getNumberOfDayInMonth(month){\r\n        switch (month) {\r\n            case '1':\r\n            case '3':\r\n            case '5':\r\n            case '7':\r\n            case '8':\r\n            case '10':\r\n            case '12':\r\n                return 31;\r\n                break;\r\n            case '4':\r\n            case '6':\r\n            case '9':\r\n            case '11':\r\n                return 30;\r\n                break;\r\n            case '2':\r\n                return this.getFebDay();\r\n                break;\r\n            \r\n        }   \r\n    }\r\n\r\n    createNumberPickerList(start,end,startToEnd){\r\n        let result = [];\r\n        if(startToEnd){\r\n            for (let i = start; i <= end; i++)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        else{\r\n            for (let i = end; i >= start; i--)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        return result\r\n    }\r\n\r\n    getDob(){\r\n        let result = ''\r\n        if(parseInt(this.state.month)<10)\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n        else\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n        return result\r\n    }\r\n\r\n    \r\n    createAccount(){\r\n        // console.log(this.state.accountRole)\r\n        if(this.checkValid()){\r\n            this.callApiCreateAccount()\r\n        }\r\n    }\r\n\r\n    \r\n    checkValid(){        \r\n        if (this.state.accountName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.accountPhoneNumber == '' ||  this.state.accountPhoneNumber.length<10) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        \r\n        if (this.state.accountEmail == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (this.state.accountPassword == '' || this.state.accountPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        if (this.state.accountRePassword != this.state.accountPassword) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[5]\r\n            }));\r\n        if (this.state.accountAddress == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[6]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n\r\n    callApiCreateAccount(){\r\n        fetch(getApiUrl()+'/users/create-employee', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            name: this.state.accountName,\r\n            phoneNumber: this.state.accountPhoneNumber,\r\n            email: this.state.accountEmail,\r\n            dob: convertDateToDateTime(this.getDob()),\r\n            gender: this.state.accountGender,\r\n            password: this.state.accountPassword,\r\n            districtCode: this.state.districtSelected,\r\n            townCode: this.state.townSelected,\r\n            address: this.state.accountAddress,\r\n            role: this.state.accountRole,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.props.changeShowView('AccountListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n\r\n    selectPicture = async () =>{\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                this.setState({ imageResultUri: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Tạo nhân viên mới: \"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên nhân viên:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên nhân viên'}\r\n                            name={\"accountName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountName}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập số điện thoại của nhân viên'}\r\n                            name=\"accountPhoneNumber\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPhoneNumber}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ email:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ email của nhân viên'}\r\n                            name=\"accountEmail\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountEmail}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.day}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,this.getNumberOfDayInMonth(this.state.month.toString()),true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.month}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day: this.getNumberOfDayInMonth(itemValue)<this.state.day?'1':this.state.day,\r\n                                month:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,12,true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.year}\r\n                            style={[styles.accountTypeDropDown,{width:80}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                year:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1920,new Date().getFullYear(),false)}\r\n                        </Picker>\r\n                        \r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Giới tính:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.accountGender}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountGender:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Nam'} value={'1'} />\r\n                            <Picker.Item label={'Nữ'} value={'0'} />\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu'}\r\n                            name=\"accountPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Xác nhận mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Xác nhận lại mật khẩu'}\r\n                            name=\"accountRePassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountRePassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>                    \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Quận/huyện:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.districtSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.onDistrictChange(itemValue)}                    \r\n                            >\r\n                            {this.state.districtList?this.state.districtList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />))\r\n                            : null }\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Phường/xã:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.townSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                townSelected:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.state.townList?this.state.townList.map(town => (\r\n                            <Picker.Item label={town.townName} value={town.townCode} />\r\n                            )): null}\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ chi tiết:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ chi tiết: số nhà, đường, thôn, ..'}\r\n                            name=\"accountAddress\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountAddress}\r\n                            >                \r\n                        </TextInput>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Vị trí nhân viên:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.accountRole}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountRole:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Y tá'} value={'NURSE'} />\r\n                            <Picker.Item label={'Điều phối viên'} value={'COORDINATOR'} />\r\n                            <Picker.Item label={'Quản trị hệ thống'} value={'ADMIN'} />\r\n                        </Picker>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đại diện: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                        \r\n                    </View>\r\n                    {this.state.imageResultUri?\r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Text style={[styles.rowText,{fontSize:15,width:800,paddingTop:3}]}>{' '+this.state.imageResultUri}</Text>\r\n                        </View>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: this.state.imageResultUri}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    :null\r\n                    }\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n            <TouchableOpacity style={styles.accountCreateConfirmButton} onPress={()=>this.createAccount()}>\r\n                    <Text>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        \r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    accountCreateConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:30,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',\r\n            accountEmail:'',\r\n            accountDob: '',\r\n            accountGender: '',\r\n            accountPassword: '',\r\n            accountRePassword: '',\r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountAddress: '',\r\n            accountRole: '',\r\n            accountActive: '',\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            day: new Date().getDate(),\r\n            accountImageUrl: '',\r\n            error: '',\r\n            errorList: ['','Tên chủ tài khoản không được bỏ trống','Địa chỉ email không được bỏ trống', 'Địa chỉ không được bỏ trống'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onDistrictChange = this.onDistrictChange.bind(this)\r\n        this.createNumberPickerList = this.createNumberPickerList.bind(this)\r\n        this.getNumberOfDayInMonth = this.getNumberOfDayInMonth.bind(this)\r\n        this.updateAccountInformation = this.updateAccountInformation.bind(this)\r\n        this.resetPassword = this.resetPassword.bind(this)\r\n        this.checkCurrentUser = this.checkCurrentUser.bind(this)\r\n        this.checkAdmin = this.checkAdmin.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n        this.getDob = this.getDob.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log('')\r\n        this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            accountEmail: this.props.account?this.props.account.accountEmail:'',\r\n            accountDob: this.props.account?this.props.account.accountDob:'',\r\n            accountGender: this.props.account?this.props.account.accountGender:'',\r\n            accountRole: this.props.account?this.props.account.accountRole:'',\r\n            accountAddress: this.props.account?this.props.account.accountAddress:'',\r\n            accountActive: this.props.account?this.props.account.accountActive:'',\r\n            accountImageUrl: this.props.account?this.props.account.accountImageUrl:'',\r\n            year: this.props.account?this.props.account.accountDob? this.props.account.accountDob.substring(0,4):'2020':'2020',\r\n            month: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(5,7)).toString():'2020':'2020',\r\n            day: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(8,10)).toString():'2020':'2020',\r\n            error: '',\r\n        }));\r\n    }\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n        if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            accountEmail: this.props.account?this.props.account.accountEmail:'',\r\n            accountDob: this.props.account?this.props.account.accountDob:'',\r\n            accountGender: this.props.account?this.props.account.accountGender:'',\r\n            accountRole: this.props.account?this.props.account.accountRole:'',\r\n            accountAddress: this.props.account?this.props.account.accountAddress:'',\r\n            accountActive: this.props.account?this.props.account.accountActive:'',\r\n            accountImageUrl: this.props.account?this.props.account.accountImageUrl:'',\r\n            year: this.props.account?this.props.account.accountDob? this.props.account.accountDob.substring(0,4):'2020':'2020',\r\n            month: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(5,7)).toString():'2020':'2020',\r\n            day: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(8,10)).toString():'2020':'2020',\r\n            error: '',\r\n        }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onDistrictChange(districtId){\r\n        this.setState({\r\n            districtSelected:districtId,                  \r\n        })\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == districtId){\r\n                this.setState({\r\n                    townList:  this.state.districtList[index].listTown,\r\n                    townSelected: this.state.districtList[index].listTown[0]?this.state.districtList[index].listTown[0].townCode:'none'              \r\n                })\r\n                index = 0;\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    getFebDay(){        \r\n        const year = this.state.year\r\n        if (year % 400 == 0 ) return 29\r\n        if (year % 100 == 0 ) return 28\r\n        if (year % 4 == 0) return 29\r\n        return 28\r\n    }\r\n\r\n    getNumberOfDayInMonth(month){\r\n        switch (month) {\r\n            case '1':\r\n            case '3':\r\n            case '5':\r\n            case '7':\r\n            case '8':\r\n            case '10':\r\n            case '12':\r\n                return 31;\r\n                break;\r\n            case '4':\r\n            case '6':\r\n            case '9':\r\n            case '11':\r\n                return 30;\r\n                break;\r\n            case '2':\r\n                return this.getFebDay();\r\n                break;\r\n            \r\n        }   \r\n    }\r\n\r\n    createNumberPickerList(start,end,startToEnd){\r\n        let result = [];\r\n        if(startToEnd){\r\n            for (let i = start; i <= end; i++)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        else{\r\n            for (let i = end; i >= start; i--)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        return result\r\n    }\r\n\r\n\r\n    getDob(){\r\n        let result = ''\r\n        if(parseInt(this.state.month)<10)\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n        else\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n        return result\r\n    }\r\n    \r\n\r\n    resetPassword(){\r\n        console.log(this.props.account.accountId),\r\n        console.log(this.props.userInfo.id),\r\n        fetch(getApiUrl()+'/users/reset-password/'+this.props.account.accountId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n            \r\n        },\r\n        body: JSON.stringify({\r\n            userProcessingID: this.props.userInfo.id\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message?  success=true : null : null;\r\n                if (success)\r\n                    this.props.changeShowView('AccountListView')\r\n                \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    changePassword(){\r\n        this.props.changeShowView('AccountChangePasswordView')\r\n    }\r\n\r\n    updateAccountInformation(){\r\n        if(this.checkValid()){\r\n            this.callApiUpdateAccountInfo()\r\n        }\r\n    }\r\n\r\n    \r\n    checkValid(){        \r\n        if (this.state.accountName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.accountEmail == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.accountAddress == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n    callApiUpdateAccountInfo(){\r\n        fetch(getApiUrl()+'/users/update-user/'+this.props.account.accountId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            name: this.state.accountName,\r\n            dob: convertDateToDateTime(this.getDob()),\r\n            address: this.state.accountAddress,\r\n            active: this.state.accountActive,\r\n            email: this.state.accountEmail,\r\n            gender: this.state.accountGender,\r\n            townCode: this.state.townSelected,\r\n            districtCode: this.state.districtSelected\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) {\r\n                    if (this.checkCurrentUser()) this.props.updateUserInfo(result)\r\n                    this.props.changeShowView('AccountListView')\r\n                }\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    \r\n    selectPicture = async () =>{\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                this.setState({ accountImageUrl: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    checkCurrentUser(){\r\n        if (this.props.account.accountId == this.props.userInfo.id) return true\r\n        return false\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Chỉnh sửa thông tin nhân viên: \"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Thay đổi mật khẩu:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên nhân viên'}\r\n                            name={\"accountName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountName}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountName}</Text>\r\n                        }\r\n                        \r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <Text style={styles.rowText}>{this.state.accountPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ email:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ email của nhân viên'}\r\n                            name=\"accountEmail\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountEmail}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountEmail}</Text>\r\n                        }\r\n                    </View>\r\n                    {this.checkAdmin()?\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.day}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,this.getNumberOfDayInMonth(this.state.month.toString()),true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.month}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day: this.getNumberOfDayInMonth(itemValue)<this.state.day?'1':this.state.day,\r\n                                month:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,12,true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.year}\r\n                            style={[styles.accountTypeDropDown,{width:80}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                year:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1920,2020,false)}\r\n                        </Picker>\r\n                    </View>\r\n                    :\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Text style={styles.rowTextLong}>{this.getDob()}</Text>\r\n                    </View>\r\n                    }\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Giới tính:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.accountGender}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountGender:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Nam'} value={'1'} />\r\n                            <Picker.Item label={'Nữ'} value={'0'} />\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountGender=='1'?'Nam':'Nữ'}</Text>\r\n                        }\r\n                        \r\n                    </View>                   \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Quận/huyện:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.districtSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.onDistrictChange(itemValue)}                    \r\n                            >\r\n                            {this.state.districtList?this.state.districtList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />))\r\n                            : null }\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Phường/xã:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.townSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                townSelected:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.state.townList?this.state.townList.map(town => (\r\n                            <Picker.Item label={town.townName} value={town.townCode} />\r\n                            )): null}\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ chi tiết:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ chi tiết: số nhà, đường, thôn, ..'}\r\n                            name=\"accountAddress\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountAddress}\r\n                            >                \r\n                        </TextInput>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Vị trí nhân viên:</Text>\r\n                        <Text style={styles.rowText}>{getRoleName(this.state.accountRole)}</Text>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Trạng thái:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.accountActive}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountActive:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Đang hoạt động'} value={'1'} />\r\n                            <Picker.Item label={'Bị khóa'} value={'0'} />\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountActive=='1'?'Đang hoạt động':'Bị khóa'}</Text>\r\n                        }\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đại diện: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    {this.state.accountImageUrl?\r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Text style={[styles.rowText,{fontSize:15,width:800,paddingTop:3}]}>{' '+this.state.accountImageUrl}</Text>\r\n                        </View>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: this.state.accountImageUrl}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    :null\r\n                    }\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>  \r\n                <View style={styles.buttonArea}>\r\n                    {this.checkCurrentUser()?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.changePassword()}>\r\n                        <Text>Thay đổi mật khẩu</Text>\r\n                    </TouchableOpacity>\r\n                    :\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.resetPassword()}>\r\n                        <Text>Đặt lại mật khẩu</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.updateAccountInformation()}>\r\n                        <Text>Lưu thay đổi</Text>\r\n                    </TouchableOpacity>\r\n                </View>  \r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        \r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:30,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime} from './../Common/CommonFunction'\r\n// import DatePicker from 'react-native-date-picker'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',    \r\n            accountOldPassword: '',        \r\n            accountPassword: '',\r\n            accountRePassword: '',            \r\n            error: '',\r\n            errorList: ['',\r\n                    'Mật khẩu cũ phải có ít nhất 6 kí tự',\r\n                    'Mật khẩu mới phải có ít nhất 6 kí tự',\r\n                    'Xác nhận mới mật khẩu không trùng với mật khẩu '],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            error: '',\r\n        }));\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                accountName: this.props.account?this.props.account.accountName:'',\r\n                accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n                error: '',\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    \r\n    changePassword(){\r\n        if(this.checkValid()){\r\n            this.callApiChangePassword()\r\n        }\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n    \r\n    checkValid(){    \r\n        if (this.state.accountOldPassword == '' || this.state.accountOldPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));   \r\n        if (this.state.accountPassword == '' || this.state.accountPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.accountRePassword != this.state.accountPassword) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n\r\n    callApiChangePassword(){\r\n        console.log(this.props.userInfo.id)\r\n        let url = ''\r\n        if (this.checkAdmin()) url = getApiUrl()+'/users/admin/change-password/'+this.props.userInfo.id\r\n        else url = getApiUrl()+'/users/coordinators/change-password/'+this.props.userInfo.id\r\n        fetch(url, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            oldPassword: this.state.accountOldPassword,\r\n            newPassword: this.state.accountPassword,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? result.message == \"Thay đổi mật khẩu thành công!\"? success=true : null : null : null;\r\n                if (success)\r\n                this.props.changeShowView('AccountListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Thay đổi mật khẩu:\"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên người dùng:</Text>\r\n                        <Text style={styles.rowTextLong}>{this.state.accountName}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <Text style={styles.rowText}>{this.state.accountPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu cũ:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu cũ'}\r\n                            name=\"accountOldPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountOldPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu mới:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu mới'}\r\n                            name=\"accountPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Xác nhận mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Xác nhận lại mật khẩu'}\r\n                            name=\"accountRePassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountRePassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>           \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n            <TouchableOpacity style={styles.accountCreateConfirmButton} onPress={()=>this.changePassword()}>\r\n                    <Text>Đổi mật khẩu</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    accountCreateConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:30,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getAppointmentStateName, getStateColor} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class AppointmentListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n        };\r\n        this.onAppointmentPress = this.onAppointmentPress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n\r\n    onAppointmentPress(){\r\n        const appointment= { \r\n            \"appointmentId\": this.props.appointmentId,\r\n            \"appointmentCreatedTime\":this.props.appointmentCreatedTime,\r\n            \"customerName\":this.props.customerName,\r\n            \"customerPhoneNumber\":this.props.customerPhoneNumber,\r\n            \"customerDOB\":this.props.customerDOB,\r\n            \"appointmentMeetingTime\":this.props.appointmentMeetingTime,\r\n            \"appointmentStatus\":this.props.appointmentStatus,\r\n            }\r\n            \r\n        this.props.setSelectedAppointment?this.props.setSelectedAppointment(appointment):null\r\n        this.props.changeShowView?this.props.changeShowView('AppointmentView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.appointmentListItem}\r\n                onPress={() => this.onAppointmentPress()}\r\n                >                          \r\n                <View style={[styles.appointmentTextContainer,{\r\n                    marginTop:5,\r\n                }]}>                    \r\n                    <View>\r\n                    <Text style={{fontSize:17}}>#{this.props.appointmentId}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={styles.appointmentTextContainer}>\r\n                    <View style={styles.appointmentListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>{this.props.customerName}</Text>\r\n                    </View>\r\n                    <View style={[styles.appointmentListSecondColumnContainer,{\r\n                        borderRadius:1,\r\n                        borderStyle: 'dashed',\r\n                    }]}>\r\n                    <Text style={{fontSize:17}}>{convertDateTimeToDate(this.props.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointmentCreatedTime)}</Text>                    \r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:15}}>Khung giờ hẹn: {convertDateTimeToTime(this.props.appointmentMeetingTime)}</Text>\r\n                    </View>\r\n                </View>     \r\n                <View style={[styles.appointmentTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.appointmentListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>Số điện thoại:  {this.props.customerPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentListSecondColumnContainer}>\r\n                    <Text style={{fontSize:17,color:'#0c59cf'}}>{getAppointmentStateName(this.props.appointmentStatus)}</Text>\r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:15}}>Ngày hẹn: {convertDateTimeToDate(this.props.appointmentMeetingTime)}</Text>\r\n                    </View>\r\n                    \r\n                </View>                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    appointmentListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    appointmentTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:3,\r\n        paddingTop:3,\r\n    },\r\n    appointmentListFirstColumnContainer:{\r\n        width:250,\r\n    },\r\n    appointmentListSecondColumnContainer:{\r\n        width:200,\r\n        marginLeft:20,\r\n        marginRight:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport AppointmentListViewItem from './AppointmentListViewItem'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\n\r\nexport default class AppointmentListView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            districtsList: this.props.districtList,\r\n            statusSelected: 'all',\r\n            districtSelected: 'all',\r\n            dataChanged: true,\r\n            testsList: this.props.testsList,\r\n            appointmentList: this.props.appointmentList,\r\n        };\r\n        this.getAppointmentShowList = this.getAppointmentShowList.bind(this)\r\n    }\r\n\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                appointmentList: this.props.appointmentList,\r\n                districtsList: this.props.districtList,\r\n                dataChanged: !this.state.dataChanged\r\n            }));\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    getAppointmentShowList(){\r\n        if (this.state.statusSelected=='all'){\r\n            if (this.state.districtSelected=='all'){\r\n                return this.state.appointmentList\r\n            }\r\n            else{\r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        else{\r\n            if (this.state.districtSelected=='all'){\r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].appointment_status === this.state.statusSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n            else{                \r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].appointment_status === this.state.statusSelected && this.state.appointmentList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        return this.state.appointmentList\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentListArea}>\r\n            <View style={styles.appointmentListTopMenuArea}>\r\n                <View style={styles.appointmentListTopMenuContainer}>\r\n                    <Text>Trạng thái: </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.statusSelected}\r\n                        style={styles.appointmentTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            statusSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged\r\n                        })}\r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        <Picker.Item label=\"Đơn đang đợi xử lý\" value=\"pending\" />\r\n                        <Picker.Item label=\"Đơn đã được chấp nhận\" value=\"accepted\" />\r\n                        <Picker.Item label=\"Đơn đã bị từ chối\" value=\"rejected\" />\r\n                        <Picker.Item label=\"Đơn đã bị hủy\" value=\"canceled\" />\r\n                    </Picker>                    \r\n                </View>\r\n                <View style={styles.appointmentListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getAppointmentShowList()?this.getAppointmentShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.appointmentListFlatListArea}>        \r\n                <FlatList style={styles.appointmentListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getAppointmentShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <AppointmentListViewItem\r\n                                    appointmentId={item.appointment_id}       \r\n                                    appointmentCreatedTime={item.appointment_createdTime}                             \r\n                                    customerName={item.appointment_customerName}\r\n                                    customerPhoneNumber={item.appointment_phoneNumber}\r\n                                    customerDOB={item.appointment_DOB}\r\n                                    appointmentMeetingTime={item.appointment_meetingTime}\r\n                                    appointmentStatus={item.appointment_status}        \r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedAppointment={this.props.setSelectedAppointment?this.props.setSelectedAppointment: null}                                                                 \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentListTopMenuArea: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n        paddingTop:10,\r\n    },\r\n    appointmentListTopMenuContainer: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n        padding:10,\r\n        paddingLeft:200,\r\n        paddingRight:200\r\n    },\r\n    appointmentTypeDropdown:{\r\n        height: 35, \r\n        width: 300,\r\n        borderRadius:5,\r\n        marginLeft:54,\r\n    },\r\n    appointmentListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    appointmentListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport {getApiUrl, getAppointmentStateName} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class AppointmentView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {        \r\n            \r\n        };\r\n        this.onAccept = this.onAccept.bind(this)\r\n        this.onReject = this.onReject.bind(this)\r\n        \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n    callApiAcceptAppointment(_status){\r\n        fetch(getApiUrl()+\"/appointments/accept/\"+this.props.appointment.appointmentId, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                status: _status,\r\n                coordinatorID: this.props.userInfo.id,\r\n                note: 'ok',\r\n            }),\r\n            })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                // let success = false\r\n                // result ? result.message? null : success=true : null;\r\n                // if (success) \r\n                this.props.changeShowView('AppointmentListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    onAccept(){\r\n        this.callApiAcceptAppointment()\r\n    }\r\n\r\n    onReject(){\r\n        this.props.changeShowView('AppointmentRejectView')\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentViewArea}>\r\n            <View style={styles.appointmentTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Chi tiết đơn khám</Text>                \r\n            </View>\r\n            <View style={styles.appointmentArea}>\r\n                <View style={styles.appointmentContainer}>      \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.appointment?this.props.appointment.appointmentId:''}</Text>                \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentCreatedTime):''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Giờ hẹn:</Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentMeetingTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentMeetingTime):''}</Text>            \r\n                        </View>\r\n                    </View>  \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.appointment?this.props.appointment.customerName:''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.appointment?this.props.appointment.customerPhoneNumber:''}</Text>            \r\n                        </View>\r\n                    </View>                  \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Trạng thái: </Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.appointment?getAppointmentStateName(this.props.appointment.appointmentStatus):''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    {this.props.appointment.appointmentStatus =='pending'?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onReject()}>\r\n                        <Text>Từ chối</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>}\r\n                    {this.props.appointment.appointmentStatus =='pending'?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onAccept()}>\r\n                        <Text>Xác nhận</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>}\r\n                </View>\r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:10,\r\n        marginBottom:-20,\r\n    },\r\n    appointmentArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    appointmentContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    appointmentRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowFirstContainer:{\r\n        width:200,\r\n    },\r\n    rowSecondContainer:{\r\n        width:'100%',\r\n    },\r\n    rowText:{\r\n        fontSize:18,\r\n        backgroundColor:''\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\n\r\nexport default class AppointmentLostSampleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            reason: '',\r\n            error: '',\r\n            errorList: ['','Phải điền lý do từ chối'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.rejectAppointment = this.rejectAppointment.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    rejectAppointment(){\r\n        if(this.checkValid()){\r\n            this.callApiRejectAppointment()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.reason == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiRejectAppointment(){\r\n        fetch(getApiUrl()+\"/appointments/cancel/\"+this.props.appointment.appointmentId, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                status: 'rejected',\r\n                coordinatorID: this.props.userInfo.id,\r\n                note: this.state.reason,\r\n            }),\r\n            })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                // let success = false\r\n                // result ? result.message? null : success=true : null;\r\n                // if (success) \r\n                this.props.changeShowView('AppointmentListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentViewArea}>\r\n            <View style={styles.appointmentTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Từ chối đơn hẹn: </Text>                \r\n            </View>\r\n            <View style={styles.appointmentArea}>\r\n                <View style={styles.appointmentContainer}>   \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn hẹn: </Text>        \r\n                        <Text style={styles.rowText}>{this.props.appointment?this.props.appointment.appointmentId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowText,{width:300}]}>{this.props.appointment?this.props.appointment.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.appointment?this.props.appointment.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowText}>{'Lý do từ chối: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Điền lý do từ chối'}\r\n                            name={\"reason\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reason}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.appointmentConfirmButton} onPress={() => this.props.changeShowView('AppointmentView')}>\r\n                        <Text>Quay lại</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.appointmentConfirmButton} onPress={() => this.rejectAppointment()}>\r\n                        <Text>Từ chối đơn hẹn</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    appointmentArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    appointmentContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    appointmentRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n    },\r\n    appointmentTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    appointmentConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class ArticleListViewItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n        };\r\n        this.onArticlePress = this.onArticlePress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n    onArticlePress(){\r\n        const article= { \r\n            \"articleId\": this.props.articleId,\r\n            \"articleTitle\":this.props.articleTitle,\r\n            \"articleContent\":this.props.articleContent,\r\n            \"articleShortContent\":this.props.articleShortContent,\r\n            \"articleImageUrl\":this.props.articleImageUrl,\r\n            \"userId\":this.props.userId,\r\n            \"articleCreatedTime\":this.props.articleCreatedTime,\r\n            \"creatorName\": this.props.creatorName,\r\n            }\r\n        this.props.setSelectedArticle?this.props.setSelectedArticle(article):null\r\n        this.props.changeShowView?this.props.changeShowView('ArticleView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.articleListItem}\r\n                onPress={() => this.onArticlePress()}\r\n                >                                \r\n                <View style={styles.articleImageContainer}>\r\n                    <Image \r\n                        style={styles.articleImage}\r\n                        source={{uri:this.props.articleImageUrl}}>\r\n                    </Image>\r\n                </View>  \r\n                <View style={styles.articleTextContainer}>\r\n                    <View style={styles.articleTextContentContainer}>\r\n                        <View style={styles.articleTitleContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'Bold'}}>{this.props.articleTitle}</Text>\r\n                        </View>\r\n                        <View style={[styles.articleCreateTimeContainer,{\r\n                            borderRadius:1,\r\n                            borderStyle: 'dashed',\r\n                        }]}>\r\n                        <Text style={{fontSize:15}}>{convertDateTimeToDate(this.props.articleCreatedTime)+\"   \"+convertDateTimeToTime(this.props.articleCreatedTime)}</Text>                                   \r\n                        </View>\r\n                        <View style={styles.articleShortContentContainer}>\r\n                            <Text style={{fontSize:17, textAlign: 'justify'}}>{this.props.articleShortContent}</Text>        \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.articleTextCreatorNameContainer}>\r\n                        <View style={styles.articleCreatorNameContainer}>\r\n                            <Text style={{fontSize:17}}>{this.props.creatorName}</Text>\r\n                        </View>\r\n                    </View>\r\n                    \r\n                </View>     \r\n                                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    articleListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    articleImageContainer:{\r\n        margin:10,\r\n        height:200,\r\n        width:200,\r\n    },\r\n    articleImage:{\r\n        height:200,\r\n        width:200,\r\n    },\r\n    articleTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-620,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        backgroundColor:'',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:5,\r\n        paddingTop:10,\r\n    },\r\n    articleTextContentContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-650,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        backgroundColor:''\r\n    },\r\n    articleTextCreatorNameContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-630,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        backgroundColor:'',\r\n        paddingRight:10,\r\n    },\r\n    articleTitleContainer:{\r\n        marginBottom:10,\r\n    },\r\n    articleCreateTimeContainer:{\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n        padding:2,\r\n        marginBottom:10\r\n    },\r\n    articleShortContentContainer:{\r\n    },\r\n    articleCreatorNameContainer:{\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport ArticleListViewItem from './ArticleListViewItem'\r\n\r\nexport default class ArticleListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            statusSelected: 'pending',\r\n            districtSelected: 'D0',\r\n            articleList: this.props.articleList,\r\n        };\r\n        this.onArticlePress = this.onArticlePress.bind(this)\r\n    }\r\n\r\n    \r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                articleList: this.props.articleList,\r\n            }));\r\n        }\r\n    }\r\n\r\n    onArticlePress (){\r\n        this.props.changeShowView ? this.props.changeShowView('ArticleView'): null\r\n    }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleListArea}>\r\n            <View style={styles.articleListTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Bài viết mới </Text>\r\n                <TouchableOpacity \r\n                    style={styles.createNewArticleButton}\r\n                    onPress={() => this.props.changeShowView ? this.props.changeShowView('ArticleAddView'): null}\r\n                    >\r\n                    <Text>Tạo bài viết mới</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.articleListFlatListArea}>        \r\n                <FlatList style={styles.articleListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.state.articleList}\r\n                    // extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <ArticleListViewItem\r\n                                    articleId={item.id}         \r\n                                    articleTitle={item.tittle}                            \r\n                                    articleShortContent={item.shortContent}    \r\n                                    articleContent={item.content}    \r\n                                    articleImageUrl={item.image}\r\n                                    userId={item.userID}\r\n                                    articleCreatedTime={item.createdTime}\r\n                                    creatorName={item.creatorName}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedArticle={this.props.setSelectedArticle?this.props.setSelectedArticle: null}\r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleListTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n    },\r\n    createNewArticleButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginRight:200,\r\n    },\r\n    articleListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    articleListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n// import * as DocumentPicker from 'expo-document-picker';\r\n\r\nexport default class ArticleAddView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            imageResultUri: '',\r\n            articleTitle: '',\r\n            articleShortContent: '',\r\n            articleContent: '',\r\n            error: '',\r\n            errorList: ['','Phải điền tiêu đề bài viết','Phải điền nội dung ngắn ngọn bài viết', 'Phải điền nội dung bài viết','Bài viết chưa có ảnh min họa'],\r\n\r\n        };\r\n        this.selectPicture = this.selectPicture.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.createArticle = this.createArticle.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    createArticle(){\r\n        if(this.checkValid()){\r\n            this.callApiCreateArticle()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.articleTitle == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.articleShortContent == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.articleContent == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (this.state.imageResultUri == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiCreateArticle(){\r\n        fetch(getApiUrl()+'/articles/create', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            tittle: this.state.articleTitle,\r\n            shortContent:this.state.articleShortContent,\r\n            content: this.state.articleContent,\r\n            image: this.state.imageResultUri,\r\n            userID: this.props.userInfo.id\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.success? success=result.success : null : null;\r\n                if (success) \r\n                this.props.changeShowView('ArticleListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    selectPicture = async () =>{\r\n        // const result = await DocumentPicker.getDocumentAsync({copyToCacheDirectory:true})\r\n        // console.log(result)\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                this.setState({ imageResultUri: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleAddViewArea}>\r\n            <View style={styles.articleAddTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Thêm bài viết: </Text>                \r\n            </View>\r\n            <View style={styles.articleAddArea}>\r\n                <View style={styles.articleAddContainer}>                    \r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>Tiêu đề: </Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                        placeholder={'Nhập tiêu đề'}   \r\n                        name={\"articleTitle\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.articleTitle}  \r\n                        >           \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Nội dung\\nngắn gọn: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Nhập nội dung ngắn gọn'}\r\n                            name={\"articleShortContent\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.articleShortContent}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Nội dung\\nbài viết: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={12}\r\n                            placeholder={'Nhập nội dung '}\r\n                            name={\"articleContent\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.articleContent} \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đính kèm: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                        <Text style={[styles.rowText,{fontSize:15,width:600,paddingTop:3,marginLeft:20}]}>{' '+this.state.imageResultUri}</Text>\r\n                    </View>\r\n                    {this.state.imageResultUri?\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{' '}</Text>\r\n                        <Image \r\n                            style={styles.imagePreview}\r\n                            source={{ uri: this.state.imageResultUri}}\r\n                            >\r\n                        </Image>\r\n                    </View>\r\n                    :null\r\n                    }\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.articleAddConfirmButton} onPress={() => this.createArticle()}>\r\n                    <Text>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleAddViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleAddTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    articleAddArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    articleAddContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    articleAddRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:18,\r\n    },\r\n    articleTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    articleAddConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class ArticleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            imageUri: '',\r\n            imageType: '',\r\n            imageResultUri: '',\r\n        };\r\n        \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleViewArea}>\r\n            \r\n            <View style={styles.articleArea}>\r\n                <View style={styles.articleContainer}>      \r\n                    <View style={styles.articleRowContainer}>\r\n                        <Text style={{fontSize:25,fontWeight:'bold'}}>{this.props.article?this.props.article.articleTitle:''}</Text>                \r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{borderWidth:1,borderRadius:1,borderStyle: 'dashed',width:180}]}>\r\n                        <Text style={[styles.rowText,{flex:1,textAlign: 'center',}]}>{this.props.article?convertDateTimeToDate(this.props.article.articleCreatedTime)+\"   \"+convertDateTimeToTime(this.props.article.articleCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{justifyContent: 'center',}]}>\r\n                        <Image \r\n                            style={styles.rowImage}\r\n                            source={{ uri: this.props.article?this.props.article.articleImageUrl:'' }}\r\n                            >\r\n                            </Image>\r\n                    </View>\r\n                    <View style={styles.articleRowContainer}>\r\n                        <Text style={styles.rowText}>{this.props.article?this.props.article.articleContent:''}</Text>\r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{justifyContent: 'flex-end',}]}>\r\n                        <Text style={styles.rowText}>{this.props.article?this.props.article.creatorName:''}</Text>\r\n                    </View>   \r\n                                     \r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    articleArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    articleContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    articleRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        fontSize:18,\r\n        backgroundColor:'',\r\n        textAlign: 'justify'\r\n    },\r\n    articleTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowImage:{\r\n        width:400,\r\n        height:400,\r\n        backgroundColor:''\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,TextInput, Dimensions} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\n\r\nexport default class Login extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            phoneNumber: '',\r\n            password:'',\r\n            error: ' ',\r\n            errorList: [' ','Phải điền số điện thoại', 'Phải điền mật khẩu']\r\n        };\r\n        this.callApiLogin = this.callApiLogin.bind(this)\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    login(){\r\n        if(this.checkValid()){\r\n            this.callApiLogin()\r\n        }    \r\n    }\r\n\r\n    \r\n    checkValid(){     \r\n        if (this.state.phoneNumber == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.password == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiLogin(){\r\n        fetch(getApiUrl()+\"/users/login\",{\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                phoneNumber: this.state.phoneNumber,\r\n                password: this.state.password,\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) this.props.loginSuccess(result.userInfo,result.token)\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={{flex:1}}>\r\n            <View style={styles.loginViewArea}>\r\n                <View style={styles.titleContainer}>\r\n                    <Text style={{fontSize:23,fontWeight:'bold'}}>Đăng nhập</Text>\r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowText}>{'Số điện thoại'}</Text>\r\n                    <TextInput \r\n                        style={styles.rowTextInput}\r\n                        name={\"phoneNumber\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.phoneNumber}\r\n                        >                \r\n                    </TextInput>     \r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowText}>{'Mật khẩu'}</Text>\r\n                    <TextInput \r\n                        style={styles.rowTextInput}\r\n                        name={\"password\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.password}\r\n                        secureTextEntry={true}\r\n                        >                \r\n                    </TextInput>     \r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowTextError}>{this.state.error}</Text>                         \r\n                </View>\r\n                <TouchableOpacity style={styles.loginButton} onPress={() => this.login()}>\r\n                    <Text>Đăng nhập</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    loginViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n        paddingTop:70,\r\n    },\r\n    titleContainer:{\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding:20,\r\n        marginBottom:20,\r\n\r\n    },\r\n    rowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width:'100%',\r\n        padding:20,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:130,\r\n        fontSize:18,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 400,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    loginButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:20,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getStateName, getStateColor} from './../Common/CommonFunction'\r\n\r\nexport default class RequestListPendingItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            \r\n        };\r\n        this.onRequestPress = this.onRequestPress.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    onRequestPress(){\r\n        const request= { \r\n            \"requestId\": this.props.requestId,\r\n            \"requestCreatedTime\":this.props.requestCreatedTime,\r\n            \"customerName\":this.props.customerName,\r\n            \"customerPhoneNumber\":this.props.customerPhoneNumber,\r\n            \"customerDOB\":this.props.customerDOB,\r\n            \"requestAddress\":this.props.requestAddress,\r\n            \"requestDistrictName\":this.props.requestDistrictName,\r\n            \"requestTownName\": this.props.requestTownName,\r\n            \"requestMeetingTime\": this.props.requestMeetingTime,\r\n            \"nurseName\":this.props.nurseName,\r\n            \"nurseID\":this.props.nurseID,\r\n            \"lsSelectedTest\":this.props.lsSelectedTest,\r\n            \"requestAmount\":this.props.requestAmount,\r\n            \"requestStatus\":this.props.requestStatus,\r\n            }\r\n        this.props.setSelectedRequest?this.props.setSelectedRequest(request):null\r\n        this.props.changeShowView?this.props.changeShowView('RequestView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.requestListItem}\r\n                onPress={() => this.onRequestPress()}\r\n                >                                \r\n                <View style={[styles.requestListTextContainer,{\r\n                    marginTop:5,\r\n                }]}>                    \r\n                    <View>\r\n                    <Text style={{fontSize:17}}>#{this.props.requestId}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={styles.requestListTextContainer}>\r\n                    <View style={styles.requestListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>{this.props.customerName}</Text>\r\n                    </View>\r\n                    <View style={[styles.requestListSecondColumnContainer,{\r\n                        borderRadius:1,\r\n                        borderStyle: 'dashed',\r\n                    }]}>\r\n                    <Text style={{fontSize:17}}>{convertDateTimeToDate(this.props.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.requestCreatedTime)}</Text>                    \r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:16}}>{this.props.requestAddress+', '+this.props.requestTownName+', '+this.props.requestDistrictName}</Text>\r\n                    </View>\r\n                </View>     \r\n                <View style={[styles.requestListTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.requestListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>Số điện thoại:  {this.props.customerPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.requestListSecondColumnContainer}>\r\n                    <Text style={{fontSize:17,color:'#0c59cf'}}>{getStateName(this.props.requestStatus)}</Text>\r\n                    </View>\r\n                    \r\n                </View>                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    requestListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    requestListTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:3,\r\n        paddingTop:3,\r\n    },\r\n    requestListFirstColumnContainer:{\r\n        width:250,\r\n    },\r\n    requestListSecondColumnContainer:{\r\n        width:230,\r\n        marginLeft:20,\r\n        marginRight:50,\r\n\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport RequestListViewItem from './RequestListViewItem'\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport requestList from './../../Data/requestList'\r\nimport districtList from './../../Data/districtList'\r\n\r\nexport default class RequestListView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            districtsList: this.props.districtList,\r\n            statusSelected: 'all',\r\n            districtSelected: 'all',\r\n            dataChanged: true,\r\n            testsList: this.props.testsList,\r\n            requestList: this.props.requestList,\r\n            requestShowList : this.props.requestList,\r\n            requestCount: this.props.requestList?this.props.requestList.length:'0',\r\n        };\r\n        this.getRequestShowList = this.getRequestShowList.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                requestList: this.props.requestList,\r\n                districtsList: this.props.districtList,\r\n                requestCount: this.props.requestList?this.props.requestList.length:'0', \r\n                dataChanged: !this.state.dataChanged\r\n            }));\r\n        }\r\n    }\r\n\r\n    \r\n    getRequestShowList(){\r\n        if (this.state.statusSelected=='all'){\r\n            if (this.state.districtSelected=='all'){\r\n                return this.state.requestList\r\n            }\r\n            else{\r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                \r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        else{\r\n            if (this.state.districtSelected=='all'){\r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestStatus === this.state.statusSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n            else{                \r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestStatus === this.state.statusSelected && this.state.requestList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        return this.state.requestList\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestListArea}>\r\n            <View style={styles.requestListTopMenuArea}>\r\n                <View style={styles.requestListTopMenuContainer}>\r\n                    <Text>Trạng thái: </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.statusSelected}\r\n                        style={styles.requestTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            statusSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}\r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        <Picker.Item label=\"Đang đợi y tá nhận đơn\" value=\"pending\" />\r\n                        <Picker.Item label=\"Đơn đã được y tá chấp nhận\" value=\"accepted\" />\r\n                        <Picker.Item label=\"Đơn đã được lấy mẫu\" value=\"transporting\" />\r\n                        <Picker.Item label=\"Đang đợi kết quả\" value=\"waitingforresult\" />\r\n                        <Picker.Item label=\"Đơn đã xong\" value=\"closed\" />\r\n                        <Picker.Item label=\"Y tá làm mất mẫu\" value=\"lostsample\" />\r\n                        <Picker.Item label=\"Điều phối viên là mất mẫu\" value=\"coordinatorlostsample\" />\r\n                        <Picker.Item label=\"Đơn đã hủy\" value=\"canceled\" />\r\n                    </Picker>\r\n                    <Text style={{marginLeft:200}}>Quận/Huyện : </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.districtSelected}\r\n                        style={styles.requestTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            districtSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}                    \r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        {this.state.districtsList?this.state.districtsList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />\r\n                        )):null}\r\n                    </Picker>\r\n                </View>\r\n                <View style={styles.requestListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getRequestShowList()?this.getRequestShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.requestListFlatListArea}>\r\n                <FlatList style={styles.requestListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getRequestShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <RequestListViewItem\r\n                                    requestId={item.requestID}\r\n                                    requestCreatedTime={item.requestCreatedTime}\r\n                                    customerName={item.customerName}\r\n                                    customerPhoneNumber={item.customerPhoneNumber}\r\n                                    customerDOB={item.customerDOB}\r\n                                    requestAddress={item.requestAddress}\r\n                                    requestDistrictName={item.requestDistrictName}\r\n                                    requestTownName={item.requestTownName}\r\n                                    requestMeetingTime={item.requestMeetingTime}\r\n                                    nurseName={item.nurseName}\r\n                                    nurseID={item.nurseID}\r\n                                    lsSelectedTest={item.lsSelectedTest}\r\n                                    requestAmount={item.requestAmount}\r\n                                    requestStatus={item.requestStatus}\r\n                                    testList={this.state.testsList} \r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedRequest={this.props.setSelectedRequest?this.props.setSelectedRequest: null}         \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestListTopMenuArea: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n        paddingTop:10,\r\n    },\r\n    requestListTopMenuContainer: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:10,\r\n        paddingLeft:200,\r\n        paddingRight:200\r\n    },\r\n    requestTypeDropdown:{\r\n        height: 35, \r\n        width: 300,\r\n        borderRadius:5,\r\n    },\r\n    requestListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    requestListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, Text, TextInput, ScrollView, TouchableOpacity} from 'react-native';\r\nimport {convertMoney} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class RequestTestViewItem extends Component {\r\n    \r\n    componentDidMount(){\r\n        // console.log(this.props.testID+' '+this.props.index+' '+this.props.countHide+' '+this.props.math+this.props.backgroundColor)\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <View style={[styles.testItem,{\r\n                backgroundColor:this.props.backgroundColor?this.props.backgroundColor:'white',    \r\n            }]}>\r\n                <View style={styles.testName}>\r\n                    <Text style={{fontSize:15,color:'#25345d'}} >{this.props.testName}</Text>\r\n                </View>\r\n                <View style={styles.testPrice}>\r\n                    <Text style={{fontSize:15,color:'#25345d'}}  >{convertMoney(this.props.testPrice)}</Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testItem:{\r\n        height:45,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        //borderWidth:1,\r\n        //borderColor:'#25345d',\r\n    },\r\n    testName:{\r\n        width: 500,\r\n        height:29,\r\n        paddingLeft:5,\r\n        paddingRight:5,\r\n        paddingTop:3\r\n    },\r\n    testPrice:{\r\n        width: 100,\r\n        height:15,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        marginBottom:2,\r\n        paddingRight:10\r\n    }\r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, Text, TextInput, ScrollView, TouchableOpacity, FlatList, Alert} from 'react-native';\r\nimport RequestTestViewItem from './RequestTestViewItem'\r\nimport {convertMoney} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class RequestTestCategoryItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={        \r\n            visible: false\r\n        }\r\n        this.isVisible = this.isVisible.bind(this);\r\n    }\r\n\r\n    isVisible(){\r\n        let result = false;\r\n        this.props.test.forEach(test => {\r\n            this.props.isSelected(test.testID) == true ? result=true : '';  \r\n        });\r\n        return result;\r\n    }\r\n\r\n    render(){\r\n        const testList = this.props.test;\r\n        let countHide = 0;\r\n        return(\r\n            <View>\r\n            {this.isVisible() ?\r\n            <View>\r\n                <View style={styles.testCategoryItem}  >\r\n                    <View style={styles.testCategoryNameContainer}>\r\n                        <Text style={{fontSize:17,color:''}} >{this.props.categoryName}</Text>\r\n                    \r\n                    </View>\r\n                </View>\r\n                <FlatList \r\n                    style ={styles.TestListAreaScrollView}                        \r\n                    showsVerticalScrollIndicator={false}\r\n                    scrollEnabled={false}\r\n                    data={testList}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item, index}) => {\r\n                            this.props.isSelected(item.testID) ?  null : countHide+=1 ;\r\n                            return ( \r\n                                <View>                                 \r\n                                { this.props.isSelected(item.testID) ?\r\n                                    // <View style={[styles.testItem,{\r\n                                    //     backgroundColor:(parseInt(index)-countHide) % 2 == 0 ? '#EEE': '#FFF',    \r\n                                    // }]}>\r\n                                    //     <View style={styles.testName}>\r\n                                    //         <Text style={{fontSize:15,color:'#25345d'}} >{item.testName}</Text>\r\n                                    //     </View>\r\n                                    //     <View style={styles.testPrice}>\r\n                                    //         <Text style={{fontSize:15,color:'#25345d'}}  >{convertMoney(item.price)}</Text>\r\n                                    //     </View>\r\n                                    // </View>\r\n\r\n                                    <RequestTestViewItem \r\n                                    testName={item.testName}\r\n                                    testPrice={item.price}\r\n                                    testID={item.testID}\r\n                                    // backgroundColor={(parseInt(index)-countHide) % 2 === 0 ? '#EEE': '#FFF'}\r\n                                    backgroundColor='white'\r\n                                    countHide={countHide}\r\n                                    index={index}\r\n                                    math={(parseInt(index)-countHide) % 2 }\r\n                                    /> \r\n                                    : null}    \r\n                                </View>                          \r\n                            );\r\n                        }}\r\n                />\r\n            </View> \r\n            : null }\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testCategoryItem:{\r\n        height:50,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n        borderColor:'#25345d',\r\n              \r\n    },\r\n    TestListAreaScrollView:{\r\n        width: '100%',\r\n        flex:1,\r\n        backgroundColor:'white',\r\n        borderRadius:10,\r\n    },\r\n    testCategoryNameContainer:{\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        height:35,\r\n        paddingLeft:5,\r\n        paddingRight:5,   \r\n    },\r\n    testItem:{\r\n        height:45,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        //borderWidth:1,\r\n        //borderColor:'#25345d',\r\n    },\r\n    testName:{\r\n        width: 500,\r\n        height:29,\r\n        paddingLeft:5,\r\n        paddingRight:5,\r\n        paddingTop:3\r\n    },\r\n    testPrice:{\r\n        width: 100,\r\n        height:15,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        marginBottom:2,\r\n        paddingRight:10\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport {getApiUrl, getStateName} from './../Common/CommonFunction'\r\nimport RequestTestCategoryItem from './RequestTestCategoryItem'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class RequestView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {        \r\n            testList: this.props.testList,\r\n        };\r\n        this.isSelected = this.isSelected.bind(this)\r\n        this.getLeftButtonName = this.getLeftButtonName.bind(this)\r\n        this.getRightButtonName = this.getRightButtonName.bind(this)\r\n        this.onLeftButtonPress = this.onLeftButtonPress.bind(this)\r\n        this.onRightButtonPress = this.onRightButtonPress.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n    \r\n    isSelected(id) {\r\n        const found = this.props.request?this.props.request.lsSelectedTest.findIndex(test => test == id) : -1;\r\n        let result = false;\r\n        found === -1 ? '' : result = true;\r\n        return result;\r\n    }\r\n\r\n    \r\n    onTakingSample(){\r\n        fetch(getApiUrl()+\"/requests/update/\"+this.props.request.requestId, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    status: 'waitingforresult',\r\n                    userID: this.props.userInfo.id,\r\n                    note: 'Coordinator have take this request',\r\n                }),\r\n                })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                this.props.changeShowView('RequestListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    onLostSample(){\r\n        this.props.changeShowView('RequestLostSampleView')\r\n    }\r\n\r\n    onUpdateResult(){\r\n        this.props.changeShowView('RequestUpdateResultView')\r\n    }\r\n\r\n    getLeftButtonName(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                return '';\r\n                break;\r\n            case 'waitingforresult':\r\n                return 'Làm mất mẫu';\r\n                break;            \r\n            default: '';\r\n        }\r\n    }\r\n\r\n    getRightButtonName(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                return 'Xác nhận lấy mẫu';\r\n                break;\r\n            case 'waitingforresult':\r\n                return 'Cập nhật kết quả';\r\n                break;            \r\n            default: ''\r\n        }\r\n    }\r\n\r\n\r\n    onLeftButtonPress(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                \r\n                break;\r\n            case 'waitingforresult':\r\n                this.onLostSample();\r\n                break;\r\n        }\r\n    }\r\n\r\n    onRightButtonPress(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                this.onTakingSample();\r\n                break;\r\n            case 'waitingforresult':\r\n                this.onUpdateResult();\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Chi tiết đơn yêu cầu xét nghiệm</Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>      \r\n                    <View style={styles.requestRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.requestId:''}</Text>                \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.customerName:''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Địa chỉ nhận đơn: </Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.requestAddress+', '+this.props.request.requestTownName+', '+this.props.request.requestDistrictName:''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Trạng thái: </Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.request?getStateName(this.props.request.requestStatus):''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <FlatList\r\n                                style={styles.rowFlatList}\r\n                                showsVerticalScrollIndicator={false}\r\n                                scrollEnabled={false}\r\n                                data={this.props.testList?this.props.testList:[]}\r\n                                keyExtractor={(item, index) => index.toString()}\r\n                                renderItem={({ item }) => {\r\n                                    return (\r\n                                        <RequestTestCategoryItem\r\n                                            categoryName={item.testTypeName}\r\n                                            test={item.listTest}\r\n                                            isSelected={this.isSelected}\r\n                                        >\r\n                                        </RequestTestCategoryItem>\r\n                                    );\r\n                                }}\r\n                            >\r\n                        </FlatList>\r\n                    </View>\r\n                    {/* <View style={[styles.requestRowContainer,{justifyContent: 'center',}]}>\r\n                        <Image \r\n                            style={styles.rowImage}\r\n                            source={{ uri: this.props.request?this.props.request.requestImageUrl:'' }}\r\n                            >\r\n                        </Image>\r\n                    </View>         */}\r\n                </View>\r\n\r\n                <View style={styles.buttonArea}>\r\n                    {!this.getLeftButtonName(this.props.request?this.props.request.requestStatus:'') ==''?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onLeftButtonPress(this.props.request?this.props.request.requestStatus:'')}>\r\n                        <Text>{this.getLeftButtonName(this.props.request?this.props.request.requestStatus:'')}</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>\r\n                    }\r\n                    {!this.getRightButtonName(this.props.request?this.props.request.requestStatus:'')==''?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onRightButtonPress(this.props.request?this.props.request.requestStatus:'')}>\r\n                        <Text>{this.getRightButtonName(this.props.request?this.props.request.requestStatus:'')}</Text>\r\n                    </TouchableOpacity>  \r\n                    :<View/>\r\n                    }\r\n                </View>\r\n\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:10,\r\n        marginBottom:-20,\r\n    },\r\n    requestArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowFirstContainer:{\r\n        width:200,\r\n    },\r\n    rowSecondContainer:{\r\n        width:'100%',\r\n    },\r\n    rowText:{\r\n        fontSize:18,\r\n        backgroundColor:''\r\n    },\r\n    rowFlatList: {\r\n        width: '100%',\r\n        alignSelf: 'stretch',\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        // borderRadius: 10,\r\n        marginTop: 5,\r\n        backgroundColor:'gray'\r\n    },\r\n    rowImage:{\r\n        width:400,\r\n        height:400,\r\n        backgroundColor:'red'\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\n\r\nexport default class RequestLostSampleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            reason: '',\r\n            error: '',\r\n            errorList: ['','Phải điền lý do làm mất mẫu'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.lostSample = this.lostSample.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    lostSample(){\r\n        if(this.checkValid()){\r\n            this.callApiLostSample()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.reason == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiLostSample(){\r\n        fetch(getApiUrl()+'/requests/update/'+this.props.request.requestId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            status: 'coordinatorlostsample',\r\n            userID: this.props.userInfo.id,\r\n            note: this.state.reason,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=result.success : null;\r\n                if (success) \r\n                this.props.changeShowView('RequestListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Báo mất mẫu xét nghiệm: </Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>   \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>        \r\n                        <Text style={styles.rowText}>{this.props.request?this.props.request.requestId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowText,{width:300}]}>{this.props.request?this.props.request.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{'Lý do mất mẫu: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Điền lý do làm mất mẫu'}\r\n                            name={\"reason\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reason}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.requestConfirmButton} onPress={() => this.props.changeShowView('RequestView')}>\r\n                        <Text>Quay lại</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.requestConfirmButton} onPress={() => this.lostSample()}>\r\n                        <Text>Báo mất mẫu</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    requestArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n    },\r\n    requestTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    requestConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nexport default class RequestUpdateResultView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            // imageUriList: [{'image':'https://znews-photo.zadn.vn/w1024/Uploaded/jgtnrz/2020_03_23/Rebel_4.jpeg'}],\r\n            imageUriList: [],\r\n            requestTitle: '',\r\n            requestShortContent: '',\r\n            requestContent: '',\r\n            error: '',\r\n            errorList: ['','Bài viết chưa có ảnh min họa'],\r\n\r\n        };\r\n        this.selectPicture = this.selectPicture.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.completeUpdateResult = this.completeUpdateResult.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    completeUpdateResult(){\r\n        if(this.checkValid()){\r\n            this.callApiSetResultImage()\r\n            // this.callApiUpdateRequest()\r\n        }\r\n    }\r\n\r\n    checkValid(){  \r\n        if (this.state.imageUriList.length == 0) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiUpdateRequest(){\r\n        fetch(getApiUrl()+'/requests/update/'+this.props.request.requestId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            status: 'closed',\r\n            userID: this.props.userInfo.id,\r\n            note: 'Đã cập nhật kết quả',\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=true : null;\r\n                if (success) \r\n                this.props.changeShowView('RequestListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    selectPicture = async () =>{\r\n        // console.log(result)\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                // this.callApiSetResultImage(result.uri)\r\n                let tempList = this.state.imageUriList\r\n                tempList.push({'image':result.uri})\r\n                // console.log(tempList)\r\n                this.setState({ imageUriList: tempList });   \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    callApiSetResultImage(){\r\n        let imageList = []\r\n        let index = this.state.imageUriList.length - 1;\r\n        while (index >= 0) {\r\n            imageList.push(this.state.imageUriList[index].image)\r\n            index-=1\r\n        }\r\n        console.log(imageList)\r\n        fetch(getApiUrl()+'/requests/detail/results/add', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            listImage: imageList,\r\n            userID: this.props.userInfo.id,\r\n            requestID: this.props.request.requestId\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=true : null;   \r\n                if(success){\r\n                    this.callApiUpdateRequest()\r\n                }  \r\n                        \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestAddViewArea}>\r\n            <View style={styles.requestAddTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Thêm kết quả xét nghiệm: </Text>                \r\n            </View>\r\n            <View style={styles.requestAddArea}>\r\n                <View style={styles.requestAddContainer}>                    \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>        \r\n                        <Text style={styles.rowText}>{this.props.request?this.props.request.requestId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowText,{width:300}]}>{this.props.request?this.props.request.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh kết quả: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    {this.state.imageUriList.length==0?null:\r\n                    this.state.imageUriList.map(imageUri => (                        \r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Text style={[styles.rowText,{fontSize:15,width:600,paddingTop:3}]}>{' '+imageUri.image}</Text>\r\n                        </View>\r\n                        <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: imageUri.image}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    ))\r\n                    }\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.requestAddConfirmButton} onPress={() => this.completeUpdateResult()}>\r\n                    <Text>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestAddViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestAddTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    requestAddArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestAddContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n    },\r\n    requestTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    requestAddConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getAppointmentStateName, getStateColor} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            testPrice: this.props.testPrice,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                testPrice: this.props.testPrice\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.props.updatePrice?this.props.updatePrice(this.props.testId,value):null\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(        \r\n            <View style={styles.testListItem}>  \r\n                <View style={[styles.testTextContainer,{marginTop:5,}]}>  \r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17}}>Loại Test: </Text>\r\n                    </View>\r\n                    <View style={styles.testListSecondColumnContainer}>\r\n                        <Text style={{fontSize:17}}>{this.props.testTypeName}</Text>\r\n                    </View>\r\n                </View>                               \r\n                <View style={styles.testTextContainer}>           \r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17}}>Tên Test: </Text>\r\n                    </View>\r\n                    <View style={styles.testListSecondColumnContainer}>\r\n                        <Text style={{fontSize:17}}>{this.props.testName}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={[styles.testTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17}}>Giá tiền: </Text>\r\n                    </View>\r\n                    <TextInput style={styles.rowTextInput}\r\n                        placeholder={'nhập giá tiền (VNĐ)'}\r\n                        name={\"testPrice\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.testPrice.toString()}\r\n                        >   \r\n                    </TextInput>\r\n                </View>                     \r\n            </View>      \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    testListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    testTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:20,\r\n        paddingRight:10,\r\n        paddingBottom:5,\r\n        paddingTop:5,\r\n    },\r\n    testListFirstColumnContainer:{\r\n        width:100,\r\n    },\r\n    testListSecondColumnContainer:{\r\n        width:500,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 100,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput} from 'react-native';\r\nimport TestListItem from './TestListItem'\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class TestUpdateView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            versionSelected:'2',\r\n            versionCreatedTime: null,\r\n            versionCreatorName: null,\r\n            testTypeSelected: 'none',\r\n            testTypeSelectedForCreate: 'none',\r\n            dataChanged: true,\r\n            testList: [],\r\n            testListTemp: [],\r\n            versionList: null,\r\n            testName: '',\r\n            testPrice: '',\r\n            newTestId: 1,\r\n            error: '',\r\n            errorList: ['','Phải chọn loại xét nghiệm','Phải điền tên xét nghiệm', 'Phải điền giá xét nghiệm'],\r\n        };\r\n        this.createTest = this.createTest.bind(this)\r\n        this.handleChange= this.handleChange.bind(this)\r\n        this.getTestList = this.getTestList.bind(this)\r\n        this.updatePrice = this.updatePrice.bind(this)\r\n        this.setSelectedVersion = this.setSelectedVersion.bind(this)\r\n        this.callApiUpdateVersion = this.callApiUpdateVersion.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.callApiGetVersionList()\r\n        // this.callApiGetTestList()\r\n    }\r\n\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                // testList: this.props.testList,\r\n                // testListTemp: this.props.testList,\r\n            }));\r\n        }\r\n    }\r\n\r\n    callApiGetVersionList(){\r\n        fetch(getApiUrl()+\"/tests/versions/list\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success){\r\n                    this.setState(previousState => ({\r\n                        versionList: result,\r\n                        versionSelected: result[0].versionID,\r\n                        versionCreatedTime: result[0].createdTime,\r\n                        versionCreatorName: result[0].creatorName,\r\n                    }));\r\n                    this.callApiGetTestList()\r\n                }\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n\r\n    createTest(){\r\n        if(this.checkValid()){\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.testListTemp[index].testTypeID == this.state.testTypeSelectedForCreate) {\r\n                    let testList = this.state.testListTemp[index].listTest\r\n                    let newTest = {\r\n                        'testID':(\"new\"+this.state.newTestId),\r\n                        'testName':this.state.testName,                   \r\n                        'price':this.state.testPrice,\r\n                        'testTypeID': this.state.testTypeSelectedForCreate,\r\n                        'testTypeName': this.state.testListTemp[index].testTypeName,\r\n                        }\r\n                    testList.push(newTest)\r\n\r\n                    // let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                    // while(indexTest >= 0){\r\n                    //     var test = this.state.testListTemp[index].listTest[indexTest]\r\n                    //     test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                    //     result.push(test)\r\n                    //     indexTest -=1;\r\n                    // }\r\n                }\r\n                index -= 1;   \r\n            } \r\n        }    \r\n    }\r\n    \r\n    checkValid(){        \r\n        if (this.state.testTypeSelectedForCreate == 'none') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.testName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.testPrice == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiUpdateVersion  = async () => {\r\n        let result = []\r\n        let index = this.state.testListTemp.length - 1;\r\n        while (index >= 0) {\r\n            let indexTest = this.state.testListTemp[index].listTest.length -1\r\n            while(indexTest >= 0){     \r\n                var test = this.state.testListTemp[index].listTest[indexTest]           \r\n                result.push(test)\r\n                indexTest -=1;\r\n            }\r\n            index -= 1;\r\n        }        \r\n        console.log(result)\r\n        fetch(getApiUrl()+'/tests/versions/upgrade-version', {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            creatorID: this.props.userInfo.id,\r\n            lsInputTest: result,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                this.callApiGetVersionList()\r\n                // this.callApiGetTestList()\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    updatePrice(testId,newPrice){\r\n        let result = []\r\n        let index = this.state.testListTemp.length - 1;\r\n        while (index >= 0) {\r\n            var testType = this.state.testListTemp[index]\r\n            let testList = []\r\n            let indexTest = this.state.testListTemp[index].listTest.length -1\r\n            while(indexTest >= 0){\r\n                var test = this.state.testListTemp[index].listTest[indexTest]\r\n                if (test.testID == testId){\r\n                    test.price = newPrice\r\n                } \r\n                testList.push(test)               \r\n                indexTest -=1;\r\n            }\r\n            testType['listTest'] = testList;\r\n            result.push(testType)\r\n            index -= 1;            \r\n        }      \r\n        // console.log(this.state.testListTemp)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    setSelectedVersion(versionId){\r\n        let index = this.state.versionList.length -1\r\n        while(index >= 0){\r\n            var version = this.state.versionList[index]\r\n            if (version.versionID == versionId){\r\n                this.setState({\r\n                    versionSelected: versionId,\r\n                    versionCreatedTime: version.createdTime,\r\n                    versionCreatorName: version.creatorName,\r\n                })\r\n            }     \r\n            index -= 1;\r\n        }      \r\n        this.callApiGetTestList(versionId)\r\n        \r\n        \r\n    }\r\n\r\n    callApiGetTestList(version){\r\n        let url = ''\r\n        if (version) url =  getApiUrl()+\"/tests/versions/list-all-test/\"+version\r\n        else url =  getApiUrl()+\"/tests/versions/lastest-version-test/\"\r\n        fetch(url,{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                let list = []\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                {\r\n                    this.setState(previousState => ({\r\n                        testList: result.lsTests ,\r\n                        testListTemp: result.lsTests ,\r\n                    }));\r\n                }\r\n                else \r\n                this.setState(previousState => ({\r\n                        testList: [],\r\n                        testListTemp: [],\r\n                    }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n\r\n    }\r\n\r\n    getTestList(){\r\n        if (this.state.testTypeSelected =='none'){\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                while(indexTest >= 0){\r\n                    var test = this.state.testListTemp[index].listTest[indexTest]\r\n                    test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                    result.push(test)\r\n                    indexTest -=1;\r\n                }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        else{\r\n            // console.log(this.state.testTypeSelected)\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n                if (this.state.testListTemp[index].testTypeID == this.state.testTypeSelected) {\r\n                    let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                    while(indexTest >= 0){\r\n                        var test = this.state.testListTemp[index].listTest[indexTest]\r\n                        test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                        result.push(test)\r\n                        indexTest -=1;\r\n                    }\r\n                }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        return this.state.testList\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.testUpdateViewArea}>\r\n            <View style={styles.testUpdateMenuArea}>\r\n                <Picker\r\n                    selectedValue={this.state.versionSelected}\r\n                    style={styles.versionDropdown}\r\n                    onValueChange={(itemValue, itemIndex) => this.setSelectedVersion(itemValue)}                    \r\n                    >\r\n                    {this.state.versionList?this.state.versionList.map(version => (\r\n                        <Picker.Item label={version.versionID} value={version.versionID} key={version.versionID}/>\r\n                    )):null}\r\n                </Picker> \r\n                <Text style={[styles.rowText,{width:250}]}>{\"Cập nhật: \"+(this.state.versionCreatedTime?convertDateTimeToDate(this.state.versionCreatedTime)+\"   \"+convertDateTimeToTime(this.state.versionCreatedTime):'')}</Text>   \r\n                <Text style={[styles.rowText,{width:300}]}>{\"Người cập nhật: \"+(this.state.versionCreatorName?this.state.versionCreatorName:'')}</Text>  \r\n                <TouchableOpacity style={styles.testUpdateConfirmButton} onPress={() => this.callApiUpdateVersion()}>\r\n                    <Text>Cập nhật</Text>\r\n                </TouchableOpacity>  \r\n            </View>\r\n            \r\n            <View style={styles.testUpdateArea}>\r\n                <View style={styles.testUpdateContainer}>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={styles.rowText}>Loại test: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.testTypeSelectedForCreate}\r\n                            style={styles.testTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                testTypeSelectedForCreate:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label=\"Chọn loại xét nghiệm\" value=\"none\" key='none'/>\r\n                            {this.state.testList?this.state.testList.map(testType => (\r\n                                <Picker.Item label={testType.testTypeName} value={testType.testTypeID} key={testType.testTypeID}/>\r\n                            )):null}\r\n                        </Picker>\r\n                        <TouchableOpacity style={styles.createTestButton} onPress={() => this.createTest()}>\r\n                            <Text>Tạo bài test</Text>\r\n                        </TouchableOpacity>   \r\n                    </View>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên test:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên bài test'}\r\n                            name={\"testName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.testName}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={styles.rowText}>Giá tiền:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập giá tiền (VNĐ)'}\r\n                            name=\"testPrice\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.testPrice}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n\r\n            <View style={styles.testUpdateMenuArea}>\r\n                <Picker\r\n                    selectedValue={this.state.testTypeSelected}\r\n                    style={styles.testTypeDropDown}\r\n                    onValueChange={(itemValue, itemIndex) => this.setState({\r\n                        testTypeSelected:itemValue,\r\n                        dataChanged: !this.state.dataChanged,\r\n                    })}                    \r\n                    >\r\n                    <Picker.Item label=\"Chọn loại xét nghiệm\" value=\"none\" key='none'/>\r\n                    {this.state.testList?this.state.testList.map(testType => (\r\n                        <Picker.Item label={testType.testTypeName} value={testType.testTypeID} key={testType.testTypeID}/>\r\n                    )):null}\r\n                </Picker>\r\n                \r\n                <Text style={[styles.rowText,{width:500}]}>Số lượng: {this.getTestList()?this.getTestList().length:'0'}</Text>\r\n                \r\n            </View>\r\n\r\n            <View style={styles.testListFlatListArea}>        \r\n                <FlatList style={styles.testListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getTestList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <TestListItem\r\n                                    testId={item.testID}       \r\n                                    testName={item.testName}                             \r\n                                    testPrice={item.price}\r\n                                    testTypeId={item.testTypeID}  \r\n                                    testTypeName={item.testTypeName}  \r\n                                    updatePrice={this.updatePrice}                                                                   \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testUpdateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    testUpdateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    versionDropdown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 200,\r\n        borderRadius:5,\r\n        marginRight:30,\r\n    },\r\n    testUpdateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    testUpdateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    testUpdateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        \r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    testTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    testUpdateConfirmButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:50,\r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    testListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    testListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions} from 'react-native';\r\n\r\nimport PageHeader from './PageHeader'\r\n\r\nimport AccountListView from './AccountManagement/AccountListView'\r\nimport AccountCreateView from './AccountManagement/AccountCreateView'\r\nimport AccountView from './AccountManagement/AccountView'\r\nimport AccountChangePasswordView from './AccountManagement/AccountChangePasswordView'\r\n\r\n\r\nimport AppointmentListView from './Appointment/AppointmentListView'\r\nimport AppointmentView from './Appointment/AppointmentView'\r\nimport AppointmentRejectView from './Appointment/AppointmentRejectView'\r\n\r\nimport ArticleListView from './Article/ArticleListView'\r\nimport ArticleAddView from './Article/ArticleAddView'\r\nimport ArticleView from './Article/ArticleView'\r\n\r\nimport LoginView from './Authentication/LoginView'\r\n\r\nimport RequestListView from './Request/RequestListView'\r\nimport RequestView from './Request/RequestView'\r\nimport RequestLostSampleView from './Request/RequestLostSampleView'\r\nimport RequestUpdateResultView from './Request/RequestUpdateResultView'\r\n\r\nimport TestUpdateView from './Test/TestUpdateView'\r\n\r\nimport {getApiUrl} from './Common/CommonFunction'\r\nimport userList  from './../Data/userList'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            //screen function\r\n            Button1Selected: true,\r\n            Button2Selected: false,\r\n            Button3Selected: false,\r\n            Button4Selected: false,\r\n            Button5Selected: false,\r\n            dataChanged: true,\r\n            showView: 'RequestListView',\r\n\r\n            //authentication\r\n            logIn: false,\r\n            userInfo: null,\r\n            // logIn: true,\r\n            // userInfo: userList[0],\r\n            token: '',\r\n            \r\n            //request\r\n            requestList: null,\r\n            selectedRequest: null,\r\n\r\n            //appointment\r\n            appointmentList: null,\r\n            selectedAppointment: null,\r\n\r\n            //article\r\n            articlesList: null,\r\n            selectedArticle : null,\r\n\r\n            //test\r\n            testList: [],\r\n\r\n            //account\r\n            userList: null,\r\n            selectedAccount: null,\r\n\r\n            //other data\r\n            districtList: null,\r\n\r\n        };\r\n        this.loginSuccess = this.loginSuccess.bind(this)\r\n        this.menuButtonPress = this.menuButtonPress.bind(this)\r\n        this.changeShowView = this.changeShowView.bind(this)\r\n        this.setSelectedArticle = this.setSelectedArticle.bind(this)\r\n        this.setSelectedRequest = this.setSelectedRequest.bind(this)\r\n        this.setSelectedAppointment = this.setSelectedAppointment.bind(this)\r\n        this.setSelectedAccount = this.setSelectedAccount.bind(this)\r\n        this.updateUserInfo = this.updateUserInfo.bind(this)\r\n        this.logOut = this.logOut.bind(this)\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        // console.log(this.state.userInfo)\r\n        // this.callApiRequestList()\r\n        // this.callApiTestList()\r\n        // this.callApiArticleList()\r\n        // this.callApiUserList()\r\n        // this.callApiAppointmentList()\r\n        // this.callApiDistrictList()\r\n        // setInterval(()=>{\r\n        //     console.log('try again')\r\n        //     this.callApiRequestList()\r\n        //     this.callApiArticleList()\r\n        //     this.callApiUserList()\r\n        //     this.callApiAppointmentList()\r\n        // },5000)\r\n    }\r\n\r\n    changeShowView(newView){\r\n        if (newView=='RequestListView') this.menuButtonPress('1')\r\n        if (newView=='AppointmentListView') this.menuButtonPress('2')\r\n        if (newView=='ArticleListView') this.menuButtonPress('3')\r\n        if (newView=='AccountListView') this.menuButtonPress('5')\r\n        this.setState(previousState => ({ \r\n            showView: newView,\r\n        }))\r\n    }\r\n\r\n    setSelectedArticle(_article){        \r\n        this.setState(previousState => ({ \r\n            selectedArticle: _article,\r\n        }))\r\n    }\r\n\r\n    setSelectedRequest(_request){        \r\n        this.setState(previousState => ({ \r\n            selectedRequest: _request,\r\n        }))\r\n    }\r\n\r\n    setSelectedAppointment(_appointment){    \r\n        // console.log(_appointment)    \r\n        this.setState(previousState => ({ \r\n            selectedAppointment: _appointment,\r\n        }))\r\n    }\r\n\r\n    setSelectedAccount(_account){ \r\n        // console.log(_account)       \r\n        this.setState(previousState => ({ \r\n            selectedAccount: _account,\r\n        }))\r\n    }\r\n\r\n    updateUserInfo(_userInfo){\r\n        this.setState(previousState => ({ \r\n            userInfo: _userInfo,\r\n        }))\r\n    }\r\n\r\n    loginSuccess(_userInfo,_token){\r\n        this.setState(previousState => ({ \r\n            logIn: true,\r\n            userInfo: _userInfo,\r\n            token: _token,\r\n        }))\r\n        setTimeout(() => {\r\n            this.callApiRequestList()\r\n            this.callApiTestList()\r\n            this.callApiArticleList()\r\n            this.callApiUserList()\r\n            this.callApiAppointmentList()\r\n            this.callApiDistrictList()\r\n        }, 10);\r\n    }\r\n\r\n    logOut(){\r\n        this.setState(previousState => ({ \r\n            logIn: false,\r\n            userInfo: null,\r\n            token: null,\r\n        }))\r\n    }\r\n\r\n    menuButtonPress(button){\r\n        if (button==\"1\") this.callApiRequestList()\r\n        if (button==\"2\") this.callApiAppointmentList()\r\n        if (button==\"3\") this.callApiArticleList()\r\n        if (button==\"5\") this.callApiUserList()\r\n        this.setState(previousState => ({ \r\n            Button1Selected: button==\"1\"?true:false,\r\n            Button2Selected: button==\"2\"?true:false,\r\n            Button3Selected: button==\"3\"?true:false,\r\n            Button4Selected: button==\"4\"?true:false,\r\n            Button5Selected: button==\"5\"?true:false,\r\n            showView:   button==\"1\"? 'RequestListView': \r\n                        button==\"2\"? 'AppointmentListView': \r\n                        button==\"3\"? 'ArticleListView':  \r\n                        button==\"4\"? 'TestUpdateView':  \r\n                        button==\"5\"? 'AccountListView': 'RequestListView'\r\n                        ,\r\n            dataChanged: !this.state.dataChanged,\r\n        }))\r\n    }\r\n\r\n\r\n    callApiRequestList= async () => {\r\n        fetch(getApiUrl()+\"/requests/list-all-request\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.state.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    requestList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    callApiAppointmentList= async () =>  {\r\n        fetch(getApiUrl()+\"/appointments/list\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.state.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    appointmentList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    callApiArticleList= async () =>  {\r\n        fetch(getApiUrl()+\"/articles/list\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    articlesList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    callApiUserList= async () =>  {\r\n        fetch(getApiUrl()+\"/users/list-all-user\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.state.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    userList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n    \r\n    callApiTestList = async () => {\r\n        fetch(getApiUrl()+\"/test-types/type-test\")\r\n        // fetch(getApiUrl()+\"/tests/versions/lastest-version-test/\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    testList: result,\r\n                }));\r\n            },\r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    callApiDistrictList = async () => {\r\n        fetch(getApiUrl()+\"/management/districts/district-town-list\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    districtList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={{flex:1}}>\r\n            <PageHeader userInfo={this.state.userInfo?this.state.userInfo:null} changeShowView={this.state.userInfo?this.changeShowView:null}  setSelectedAccount={this.state.userInfo?this.setSelectedAccount:null} logOut={this.state.userInfo?this.logOut:null}/>\r\n            { !this.state.logIn ?\r\n            <LoginView loginSuccess={this.loginSuccess}/>\r\n            :\r\n            <View style={styles.listAreaContainer}>\r\n                <View style={styles.topMenu}>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/5 ,\r\n                        borderWidth: this.state.Button1Selected ? 1:0,\r\n                        backgroundColor: this.state.Button1Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('1')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Yêu cầu xét nghiệm</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/5 ,\r\n                        borderWidth: this.state.Button2Selected ? 1:0,\r\n                        backgroundColor: this.state.Button2Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('2')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Cuộc Hẹn</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/5 ,\r\n                        borderWidth: this.state.Button3Selected ? 1:0,\r\n                        backgroundColor: this.state.Button3Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('3')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Bài đăng</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/5 ,\r\n                        borderWidth: this.state.Button4Selected ? 1:0,\r\n                        backgroundColor: this.state.Button4Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('4')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Test</Text>\r\n                    </TouchableOpacity>\r\n                    {this.state.userInfo.role=='COORDINATOR'? null :\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? 0 : WIDTH/5 ,\r\n                        borderWidth: this.state.Button5Selected ? 1:0,\r\n                        backgroundColor: this.state.Button5Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('5')}\r\n                        >\r\n                        <Text style={styles.topMenuText}>Quản lý tài khoản</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                </View>                \r\n                <View style={{width:'100%',flex:1,backgroundColor:''}}>\r\n                {\r\n                    this.state.showView == 'RequestListView'? \r\n                    <RequestListView requestList={this.state.requestList} changeShowView={this.changeShowView} setSelectedRequest={this.setSelectedRequest} districtList={this.state.districtList} />                    \r\n                    // <ArticleAddView  />\r\n                    : this.state.showView == 'AppointmentListView'? \r\n                    <AppointmentListView appointmentList={this.state.appointmentList} changeShowView={this.changeShowView} setSelectedAppointment={this.setSelectedAppointment} districtList={this.state.districtList}/>\r\n                    : this.state.showView == 'ArticleListView'?\r\n                    <ArticleListView  articleList={this.state.articlesList} changeShowView={this.changeShowView} setSelectedArticle={this.setSelectedArticle}/>\r\n                    : this.state.showView == 'TestUpdateView'?\r\n                    <TestUpdateView  testList={this.state.testList} userInfo={this.state.userInfo} token={this.state.token}/>\r\n                    : this.state.showView == 'AccountListView'?\r\n                    <AccountListView userList={this.state.userList}  changeShowView={this.changeShowView} setSelectedAccount={this.setSelectedAccount}/>\r\n                    // sub screen\r\n                    //request\r\n                    : this.state.showView == 'RequestView'?\r\n                    <RequestView  request={this.state.selectedRequest} testList={this.state.testList} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'RequestLostSampleView'?\r\n                    <RequestLostSampleView  request={this.state.selectedRequest} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'RequestUpdateResultView'?\r\n                    <RequestUpdateResultView  request={this.state.selectedRequest} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    //appointment\r\n                    : this.state.showView == 'AppointmentView'?\r\n                    <AppointmentView  appointment={this.state.selectedAppointment} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'AppointmentRejectView'?\r\n                    <AppointmentRejectView appointment={this.state.selectedAppointment} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    //article\r\n                    : this.state.showView == 'ArticleAddView'?\r\n                    <ArticleAddView   token={this.state.token}  userInfo={this.state.userInfo} changeShowView={this.changeShowView} />\r\n                    : this.state.showView == 'ArticleView'?\r\n                    <ArticleView  article={this.state.selectedArticle} />\r\n                    //account\r\n                    : this.state.showView == 'AccountCreateView'?\r\n                    <AccountCreateView  districtList={this.state.districtList} token={this.state.token}/>\r\n                    : this.state.showView == 'AccountView'?\r\n                    <AccountView  districtList={this.state.districtList}  account={this.state.selectedAccount} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo}/>\r\n                    : this.state.showView == 'AccountChangePasswordView'?\r\n                    <AccountChangePasswordView account={this.state.selectedAccount} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo} />\r\n                    : <View/>\r\n                    \r\n                }\r\n                </View>\r\n            </View>\r\n            }\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst menuHeight= 50\r\n\r\nconst styles = StyleSheet.create({\r\n    listAreaContainer: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    topMenu:{\r\n        height: menuHeight,\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor:'white'\r\n    },\r\n    topMenuButton:{\r\n        width: Dimensions.get('window').width/3,\r\n        height: menuHeight,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    topMenuText:{\r\n        fontSize:18,\r\n    }\r\n\r\n});\r\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport ListScreen from './components/ListScreen'\n\nexport default function App() {\n  return (\n      <ListScreen/>\n    // <View style={styles.container}>\n    //   <Text>Open up App.js to start working on your app!</Text>\n    // </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/MedTestForCoordinator/expo-service-worker.js', { scope: '/MedTestForCoordinator/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}