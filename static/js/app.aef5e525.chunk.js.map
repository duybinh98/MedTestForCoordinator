{"version":3,"sources":["Data/Group 1.png","Data/ABClinic.jpg","Data/requestList.js","Data/districtList.js","Data/appointmentList.js","Data/userList.js","components/PageHeader.js","components/PageFooter.js","components/Common/CommonFunction.js","components/AccountManagement/AccountListViewItem.js","components/AccountManagement/AccountListView.js","components/AccountManagement/AccountCreateView.js","components/AccountManagement/AccountView.js","components/AccountManagement/AccountChangePasswordView.js","components/Appointment/AppointmentListViewItem.js","components/Appointment/AppointmentListView.js","components/Appointment/AppointmentView.js","components/Appointment/AppointmentRejectView.js","components/Article/ArticleListViewItem.js","components/Article/ArticleListView.js","components/Article/ArticleAddView.js","components/Article/ArticleView.js","components/Authentication/LoginView.js","components/Request/RequestListViewItem.js","components/Request/RequestListView.js","components/Request/RequestTestViewItem.js","components/Request/RequestTestCategoryItem.js","components/Request/RequestView.js","components/Request/RequestLostSampleView.js","components/Request/RequestUpdateResultView.js","components/Test/TestListItem.js","components/Test/TestUpdateView.js","components/ListScreen.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","ListScreen","props","state","requestId","editProfile","bind","logOut","searchRequest","handleChange","this","userInfo","account","id","phoneNumber","name","dob","address","password","active","email","role","gender","image","townCode","districtCode","changeShowView","setSelectedAccount","event","target","value","setState","ImageBackground","style","styles","headerContainer","resizeMode","View","leftArea","Image","imageIcon","source","require","leftContainer","titleContainer","Text","fontSize","fontWeight","color","hotlineContainer","middleArea","TextInput","searchInputContainer","placeholder","onChange","onSubmitEditing","rightArea","rightContainer","TouchableOpacity","onPress","width","height","uri","nameContainer","Component","WIDTH","Dimensions","get","StyleSheet","create","flexDirection","alignItems","justifyContent","backgroundColor","padding","marginTop","paddingLeft","borderWidth","borderRadius","headerHight","footerContainer","textContainer","middleContainer","paddingRight","alignSelf","convertDateTimeToDate","inputString","substring","convertDateTimeToTime","convertDateToDateTime","inputDate","getRoleName","getStateName","status","getAppointmentStateName","AccountListViewItem","onAccountPress","accountId","accountPhoneNumber","accountName","accountDob","accountAddress","accountPassword","accountActive","accountEmail","accountRole","accountGender","accountImageUrl","accountTownCode","accountDistrictCode","accountListItem","accountNameContainer","accountPhoneContainer","accountRoleContainer","paddingBottom","margin","marginRight","AccountListScreen","Button1Selected","Button2Selected","Button3Selected","Button4Selected","districtsList","districtList","accountSelected","userList","dataChanged","menuButtonPress","getAccountShowList","result","index","length","push","button","previousState","Button5Selected","prevProps","prevState","articleListArea","accountListTopMenuArea","accountListTopMenuContainer","topMenuTextInput","createNewAccountButton","topMenuButton","roleSelectedColor","topMenuText","articleListFlatListArea","articleListFlatListTitleArea","articleListFlatListTitleContainer","articleListTitleNameContainer","articleListTitleText","articleListTitlePhoneContainer","articleListTitleRoleContainer","FlatList","articleListFlatList","contentContainerStyle","showsVerticalScrollIndicator","data","extraData","keyExtractor","item","toString","renderItem","flex","paddingTop","TestListView","selectPicture","a","async","ImagePicker","console","log","cancelled","callApiUploadImage","accountRePassword","townList","listTown","districtSelected","townSelected","year","Date","getFullYear","month","getMonth","day","getDate","accountImage","error","errorList","onDistrictChange","createNumberPickerList","getNumberOfDayInMonth","createAccount","districtId","getFebDay","start","end","startToEnd","i","Picker","Item","label","parseInt","checkValid","callApiCreateAccount","fetch","getApiUrl","method","headers","Accept","Authorization","token","body","JSON","stringify","getDob","then","res","json","success","message","_data","accountCreateViewArea","accountCreateMenuArea","rowText","accountCreateArea","accountCreateContainer","accountCreateRowContainer","rowTextInput","selectedValue","accountTypeDropDown","onValueChange","itemValue","itemIndex","secureTextEntry","map","district","districtName","town","townName","addImageButton","imagePreviewArea","imagePreview","rowTextError","accountCreateConfirmButton","marginBottom","createTestButton","marginLeft","accountListFlatListArea","accountListFlatList","updateAccountInformation","resetPassword","checkCurrentUser","checkAdmin","changePassword","userProcessingID","callApiUpdateAccountInfo","updateUserInfo","rowTextLong","buttonArea","accountOldPassword","callApiChangePassword","url","oldPassword","newPassword","AppointmentListView","onAppointmentPress","appointment","appointmentId","appointmentCreatedTime","customerName","customerPhoneNumber","customerDOB","appointmentMeetingTime","appointmentStatus","setSelectedAppointment","appointmentListItem","appointmentTextContainer","appointmentListFirstColumnContainer","appointmentListSecondColumnContainer","borderStyle","statusSelected","testsList","appointmentList","getAppointmentShowList","requestDistrictID","appointment_status","appointmentListArea","appointmentListTopMenuArea","appointmentListTopMenuContainer","appointmentTypeDropdown","appointmentListFlatListArea","appointmentListFlatList","appointment_id","appointment_createdTime","appointment_customerName","appointment_phoneNumber","appointment_DOB","appointment_meetingTime","AppointmentView","onAccept","onReject","_status","coordinatorID","note","callApiAcceptAppointment","appointmentViewArea","appointmentTopMenuArea","appointmentArea","appointmentContainer","appointmentRowContainer","rowFirstContainer","rowSecondContainer","AppointmentLostSampleView","reason","rejectAppointment","callApiRejectAppointment","multiline","numberOfLines","appointmentConfirmButton","appointmentTypeDropDown","ArticleListViewItem","onArticlePress","article","articleId","articleTitle","articleContent","articleShortContent","articleImageUrl","userId","articleCreatedTime","creatorName","setSelectedArticle","articleListItem","articleImageContainer","articleImage","articleTextContainer","articleTextContentContainer","articleTitleContainer","articleCreateTimeContainer","articleShortContentContainer","textAlign","articleTextCreatorNameContainer","articleCreatorNameContainer","ArticleListScreen","articleList","articleListTopMenuArea","createNewArticleButton","tittle","shortContent","content","userID","createdTime","ArticleAddView","imageResultUri","createArticle","callApiCreateArticle","articleAddViewArea","articleAddTopMenuArea","articleAddArea","articleAddContainer","articleAddRowContainer","articleAddConfirmButton","articleTypeDropDown","ArticleView","imageUri","imageType","articleViewArea","articleArea","articleContainer","articleRowContainer","rowImage","articleTopMenuArea","Login","callApiLogin","loginSuccess","loginViewArea","rowContainer","login","loginButton","RequestListPendingItem","onRequestPress","testList","request","requestCreatedTime","requestAddress","requestDistrictName","requestTownName","requestMeetingTime","nurseName","nurseID","lsSelectedTest","requestAmount","requestStatus","requestTestVersion","setSelectedRequest","checkVersion","changeToRequestViewScreen","testVersion","lsTests","requestListItem","requestListTextContainer","requestListFirstColumnContainer","requestListSecondColumnContainer","RequestListView","requestList","requestShowList","requestCount","getRequestShowList","requestListArea","requestListTopMenuArea","requestListTopMenuContainer","requestTypeDropdown","requestListFlatListArea","requestListFlatList","requestID","versionOfTest","RequestTestViewItem","testItem","testName","testPrice","_price","price","convertMoney","RequestTestCategoryItem","visible","isVisible","test","forEach","isSelected","testID","countHide","testCategoryItem","testCategoryNameContainer","categoryName","TestListAreaScrollView","scrollEnabled","math","borderColor","RequestView","getLeftButtonName","getRightButtonName","onLeftButtonPress","onRightButtonPress","findIndex","onLostSample","onTakingSample","onUpdateResult","requestViewArea","requestTopMenuArea","requestArea","requestContainer","requestRowContainer","rowFlatList","testTypeName","listTest","RequestLostSampleView","lostSample","callApiLostSample","requestConfirmButton","requestTypeDropDown","RequestUpdateResultView","imageUriList","requestTitle","requestShortContent","requestContent","completeUpdateResult","callApiSetResultImage","tempList","imageList","listImage","callApiUpdateRequest","requestAddViewArea","requestAddTopMenuArea","requestAddArea","requestAddContainer","requestAddConfirmButton","updatePrice","testId","testListItem","testTextContainer","testListFirstColumnContainer","testListSecondColumnContainer","TestUpdateView","callApiUpdateVersion","testListTemp","indexTest","creatorID","lsInputTest","callApiGetVersionList","versionSelected","versionCreatedTime","versionCreatorName","testTypeSelected","testTypeSelectedForCreate","versionList","newTestId","createTest","getTestList","setSelectedVersion","versionID","callApiGetTestList","testTypeID","newTest","newPrice","testType","versionId","version","testUpdateViewArea","testUpdateMenuArea","versionDropdown","key","testUpdateConfirmButton","testUpdateArea","testUpdateContainer","testUpdateRowContainer","testTypeDropDown","testListFlatListArea","testListFlatList","testTypeId","callApiRequestList","callApiAppointmentList","callApiArticleList","articlesList","callApiUserList","callApiTestList","callApiDistrictList","showView","logIn","selectedRequest","selectedAppointment","selectedArticle","selectedAccount","newView","_article","_request","_appointment","_account","_userInfo","_token","setTimeout","listAreaContainer","topMenu","parseFloat","App","container","navigator","window","addEventListener","serviceWorker","register","scope","info","catch"],"mappings":"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","file":"static/js/app.aef5e525.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Group 1.656244df.png\";","module.exports = __webpack_public_path__ + \"static/media/ABClinic.013acc21.jpg\";","var requestList = [\r\n    {\r\n        \"requestID\":\"1\",\r\n        \"customerID\":\"2\",\r\n        \"customerName\":\"Phạm Lê Quỳnh Lam\",\r\n        \"customerPhoneNumber\":\"0111111111\",\r\n        \"customerDOB\":\"1998-12-13T00:00:00.000+0000\",\r\n        \"requestAddress\":\"Số 123 ngõ 4 Phường Yên Phụ Quận Hai Bà Trưng\",\r\n        \"requestMeetingTime\":\"2020-03-15T21:04:27.000+0000\",\r\n        \"requestStatus\":\"closed\",\r\n        \"requestCreatedTime\":\"2020-03-23T10:17:18.000+0000\",\r\n        \"nurseID\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"nurseName\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"coordinatorID\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"coordinatorName\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"requestAmount\":\"700000\",\r\n        \"requestNote\":\"Customer số 1 đã huỷ\",\r\n        \"lsSelectedTest\":[\"1\",\"2\",\"3\",\"4\",\"5\"]\r\n    },\r\n    {\r\n        \"requestID\":\"2\",\r\n        \"customerID\":\"2\",\r\n        \"customerName\":\"Phạm Lê Quỳnh Lam\",\r\n        \"customerPhoneNumber\":\"0111111111\",\r\n        \"customerDOB\":\"1998-12-13T00:00:00.000+0000\",\r\n        \"requestAddress\":\"Số 123 ngõ 4 Phường Yên Phụ Quận Hai Bà Trưng\",\r\n        \"requestMeetingTime\":\"2020-03-15T21:04:27.000+0000\",\r\n        \"requestStatus\":\"closed\",\r\n        \"requestCreatedTime\":\"2020-03-23T10:17:18.000+0000\",\r\n        \"nurseID\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"nurseName\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"coordinatorID\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"coordinatorName\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"requestAmount\":\"700000\",\r\n        \"requestNote\":\"Customer số 1 đã huỷ\",\r\n        \"lsSelectedTest\":[\"1\",\"2\",\"3\",\"4\",\"5\"]\r\n    },\r\n]\r\n\r\n\r\nmodule.exports = requestList;\r\n","var districtList = [\r\n                {\r\n                    \"districtCode\": \"D0\",\r\n                    \"districtName\": \"Default\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D1\",\r\n                    \"districtName\": \"Quận Ba Đình\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D10\",\r\n                    \"districtName\": \"Quận Bắc Từ Liêm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D11\",\r\n                    \"districtName\": \"Huyện Thanh Trì\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D12\",\r\n                    \"districtName\": \"Huyện Gia Lâm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D13\",\r\n                    \"districtName\": \"Huyện Đông Anh\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D14\",\r\n                    \"districtName\": \"Huyện Sóc Sơn\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D15\",\r\n                    \"districtName\": \"Quận Hà Đông\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D16\",\r\n                    \"districtName\": \"Thị xã Sơn Tây\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D17\",\r\n                    \"districtName\": \"Huyện Ba Vì\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D18\",\r\n                    \"districtName\": \"Huyện Phúc Thọ\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D19\",\r\n                    \"districtName\": \"Huyện Thạch Thất\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D2\",\r\n                    \"districtName\": \"Quận Hoàn Kiếm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D20\",\r\n                    \"districtName\": \"Huyện Quốc Oai\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D21\",\r\n                    \"districtName\": \"Huyện Chương Mỹ\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D22\",\r\n                    \"districtName\": \"Huyện Đan Phượng\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D23\",\r\n                    \"districtName\": \"Huyện Hoài Đức\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D24\",\r\n                    \"districtName\": \"Huyện Thanh Oai\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D25\",\r\n                    \"districtName\": \"Huyện Mỹ Đức\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D26\",\r\n                    \"districtName\": \"Huyện Ứng Hòa\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D27\",\r\n                    \"districtName\": \"Huyện Thường Tín\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D28\",\r\n                    \"districtName\": \"Huyện Phú Xuyên\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D29\",\r\n                    \"districtName\": \"Huyện Mê Linh\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D3\",\r\n                    \"districtName\": \"Quận Hai Bà Trưng\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D30\",\r\n                    \"districtName\": \"Quận Nam Từ Liêm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D31\",\r\n                    \"districtName\": \"Huyện Từ Liêm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D4\",\r\n                    \"districtName\": \"Quận Đống Đa\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D5\",\r\n                    \"districtName\": \"Quận Tây Hồ\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D6\",\r\n                    \"districtName\": \"Quận Cầu Giấy\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D7\",\r\n                    \"districtName\": \"Quận Thanh Xuân\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D8\",\r\n                    \"districtName\": \"Quận Hoàng Mai\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D9\",\r\n                    \"districtName\": \"Quận Long Biên\"\r\n                }\r\n                ]\r\n\r\n\r\nmodule.exports = districtList;\r\n","var appointmentList = [\r\n    {\r\n        \"appointment_id\":3,\r\n        \"appointment_customerName\":\"Phạm Duy Bình\",\r\n        \"appointment_phoneNumber\":\"0222222222\",\r\n        \"appointment_DOB\":\"1998-02-15T00:00:00.000+0000\",\r\n        \"appointment_meetingTime\":\"2020-12-21T17:59:00.000+0000\",\r\n        \"appointment_status\":\"pending\",\r\n        \"appointment_note\":null,\r\n        \"appointment_createdTime\":\"2020-03-17T06:20:04.000+0000\"\r\n    },\r\n    {\r\n        \"appointment_id\":4,\r\n        \"appointment_customerName\":\"Phạm Duy Bình\",\r\n        \"appointment_phoneNumber\":\"0222222222\",\r\n        \"appointment_DOB\":\"1998-02-15T00:00:00.000+0000\",\r\n        \"appointment_meetingTime\":\"2020-12-21T17:59:00.000+0000\",\r\n        \"appointment_status\":\"accepted\",\r\n        \"appointment_note\":null,\r\n        \"appointment_createdTime\":\"2020-03-17T06:20:04.000+0000\"\r\n    }\r\n]\r\n\r\n\r\nmodule.exports = appointmentList;\r\n","var userList = [\r\n    {\r\n        \"id\":1,\r\n        \"phoneNumber\":\"0000000000\",\r\n        \"name\":\"Lam Phan\",\r\n        \"dob\":\"1970-01-01T00:00:00.000+0000\",\r\n        \"address\":\"Default-Address\",\r\n        \"password\":\"$2a$10$Rqs8uzm/mZzJHWABOeOi7OuqyPsptBgWNL5k7Cf9bDnWpRL4gSfbW\",\r\n        \"active\":1,\r\n        \"email\":\"medtest.default@gmail.com\",\r\n        \"role\":\"COORDINATOR\",\r\n        \"gender\":0,\r\n        \"image\":\"https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png\",\r\n        \"townCode\":\"T0\",\r\n        \"districtCode\":\"D0\"\r\n    },\r\n    {\r\n        \"id\":2,\r\n        \"phoneNumber\":\"0000000001\",\r\n        \"name\":\"DefaultCoordinator\",\r\n        \"dob\":\"1970-01-01T00:00:00.000+0000\",\r\n        \"address\":\"Default-Address\",\r\n        \"password\":\"$2a$10$Rqs8uzm/mZzJHWABOeOi7OuqyPsptBgWNL5k7Cf9bDnWpRL4gSfbW\",\r\n        \"active\":1,\r\n        \"email\":\"medtest.default@gmail.com\",\r\n        \"role\":\"ADMIN\",\r\n        \"gender\":0,\r\n        \"image\":\"https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png\",\r\n        \"townCode\":\"T0\",\r\n        \"districtCode\":\"D0\"\r\n    },\r\n]\r\n\r\n\r\nmodule.exports = userList;\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, ImageBackground, Picker, TouchableOpacity, Dimensions } from 'react-native';\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            requestId: ''\r\n        }\r\n        this.editProfile = this.editProfile.bind(this)\r\n        this.logOut = this.logOut.bind(this)\r\n        this.searchRequest = this.searchRequest.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    editProfile(){\r\n        if (this.props.userInfo){\r\n            const account= { \r\n            'accountId':this.props.userInfo.id, \r\n            'accountPhoneNumber':this.props.userInfo.phoneNumber,                      \r\n            'accountName':this.props.userInfo.name,\r\n            'accountDob':this.props.userInfo.dob,\r\n            'accountAddress':this.props.userInfo.address,\r\n            'accountPassword':this.props.userInfo.password,\r\n            'accountActive':this.props.userInfo.active,\r\n            'accountEmail':this.props.userInfo.email,\r\n            'accountRole':this.props.userInfo.role,\r\n            'accountGender':this.props.userInfo.gender,\r\n            'accountImageUrl':this.props.userInfo.image,\r\n            'accountTownCode':this.props.userInfo.townCode,\r\n            'accountDistrictCode':this.props.userInfo.districtCode,\r\n            }\r\n            this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n            this.props.changeShowView?this.props.setSelectedAccount(account):null\r\n        }\r\n    }\r\n\r\n    logOut(){\r\n        this.props.changeShowView?this.props.logOut():null\r\n    }\r\n\r\n    searchRequest(){\r\n        this.props.userInfo?this.props.searchRequest(this.state.requestId):null\r\n    }\r\n\r\n    \r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.headerContainer} \r\n            // source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.leftArea}>\r\n                <Image \r\n                    style={styles.imageIcon}\r\n                    source={require('./../Data/Group 1.png')}>\r\n                </Image>\r\n                <View style={styles.leftContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:25, fontWeight:'bold',color:'white'}}>MedTest</Text>\r\n                    </View>\r\n                    <View style={styles.hotlineContainer}>\r\n                        <Text style={{fontSize:14}}>Hotline: 1900561252</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.middleArea}>\r\n                {this.props.userInfo?\r\n                <TextInput style={styles.searchInputContainer}\r\n                placeholder={'Tìm xét nghiệm'}\r\n                name=\"requestId\"\r\n                onChange={this.handleChange}\r\n                value={this.state.requestId}\r\n                onSubmitEditing={() => this.searchRequest()}\r\n                >                \r\n                </TextInput>\r\n                :<View/>\r\n                }\r\n            </View>\r\n            <View style={styles.rightArea}>\r\n                {this.props.userInfo?\r\n                <View style={styles.rightContainer}>\r\n                    <TouchableOpacity style={{}} onPress={() => this.editProfile()}>\r\n                        <Image \r\n                            style={{\r\n                                width:100,\r\n                                height:100,\r\n                            }}\r\n                            source={{uri:this.props.userInfo?this.props.userInfo.image:''}}>\r\n                            \r\n                        </Image>\r\n                    </TouchableOpacity>\r\n                    <View style={styles.nameContainer} >\r\n                        <Text style={{fontSize:14,color:'white'}}>{this.props.userInfo?this.props.userInfo.name:''}</Text>\r\n                    </View>\r\n                    <TouchableOpacity style={styles.nameContainer} onPress={() => this.logOut()}>\r\n                        <Text style={{fontSize:14,color:'white'}}>{this.props.userInfo?'Đăng xuất':''} </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                :null}\r\n            </View>\r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst headerHight=185\r\nconst WIDTH = Dimensions.get('window').width\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        height:headerHight,\r\n        width: WIDTH,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#25345D',\r\n\r\n    },\r\n    leftArea:{\r\n        height:headerHight,\r\n        width:300,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        padding:20,\r\n    },\r\n    imageIcon:{\r\n        width:100,\r\n        height:100,\r\n        marginTop:5\r\n    },\r\n    leftContainer:{\r\n        height:headerHight,\r\n        width:180,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        paddingLeft:20,\r\n\r\n    },\r\n    titleContainer:{\r\n        height:50,\r\n        width:100,\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        backgroundColor:''\r\n    },\r\n    hotlineContainer:{\r\n        height:35,\r\n        width:150,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        marginTop:10,\r\n    },\r\n    middleArea:{\r\n        height:headerHight,\r\n        // flex:1,\r\n        width: WIDTH-600,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:''\r\n    },\r\n    searchInputContainer:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:25,\r\n    },\r\n    rightArea:{\r\n        height:headerHight,\r\n        width:300,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:'',\r\n    },\r\n    rightContainer:{\r\n        height:headerHight-10,\r\n        width:200,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        padding:0,\r\n        backgroundColor:'',\r\n    },\r\n    nameContainer:{\r\n        height:30,\r\n        width:140,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, ImageBackground, Picker, TouchableOpacity, Dimensions } from 'react-native';\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.footerContainer} \r\n            // source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.leftArea}>                \r\n                <View style={styles.leftContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>TRỤ SỞ HÀ NỘI</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>159 B Lê Thanh Nghị, Hai Bà Trưng, Hà Nội</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.middleArea}>\r\n                <View style={styles.middleContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>CHỊU TRÁCH NHIỆM QUẢN LÝ NỘI DUNG</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Bác sĩ Nguyễn Trần Kiên</Text>\r\n                    </View>\r\n                    <View style={[styles.titleContainer,{marginTop:15}]}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>HỢP TÁC TRUYỀN THÔNG</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Liên hệ: 096 159 1593</Text>\r\n                    </View>\r\n                    <View style={[styles.titleContainer,{marginTop:15}]}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>LIÊN HỆ QUẢNG CÁO</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>medtest.default@gmail.com</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.rightArea}>\r\n                \r\n                <View style={styles.rightContainer}>\r\n                    <Image \r\n                        style={styles.imageIcon}\r\n                        source={require('./../Data/ABClinic.jpg')}>\r\n                    </Image>\r\n                    {/* <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:14, fontWeight:'',color:'white'}}>© Copyright 2007 - 2020 – </Text>\r\n                        <Text style={{fontSize:14, fontWeight:'bold',color:'white'}}>CÔNG TY CỔ PHẦN VCCORP</Text>\r\n                    </View> */}\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Tầng 17, 19, 20, 21 Tòa nhà Center Building - Hapulico Complex, Số 1 Nguyễn Huy Tưởng, Thanh Xuân, Hà Nội.</Text>\r\n                    </View>\r\n                    {/* <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Giấy phép số 2215/GP-TTĐT do Sở Thông tin và Truyền thông Hà Nội cấp ngày 10 tháng 4 năm 2019</Text>\r\n                    </View> */}\r\n                </View>\r\n                \r\n            </View>\r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst footerHeight=200\r\nconst WIDTH = Dimensions.get('window').width\r\n\r\nconst styles = StyleSheet.create({\r\n    footerContainer: {\r\n        height:footerHeight,\r\n        width: WIDTH,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#25345D',\r\n    },\r\n    leftArea:{\r\n        height:footerHeight,\r\n        width:500,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        padding:20,\r\n    },\r\n    leftContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        paddingLeft:100,\r\n        paddingRight:50,\r\n\r\n    },\r\n    middleArea:{\r\n        height:footerHeight,\r\n        width: 500,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        padding:20,\r\n        backgroundColor:''\r\n    },\r\n    middleContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        paddingLeft:100,\r\n        paddingRight:100,\r\n    },\r\n    searchInputContainer:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:25,\r\n    },\r\n    rightArea:{\r\n        height:footerHeight,\r\n        width:500,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:'',\r\n    },\r\n    rightContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start', \r\n        paddingLeft:50,\r\n        paddingRight:100,\r\n        backgroundColor:'',\r\n    },\r\n    nameContainer:{\r\n        height:30,\r\n        width:140,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    },\r\n    imageIcon:{\r\n        width:50,\r\n        height:50,\r\n        marginTop:5\r\n    },\r\n    titleContainer:{\r\n        height:20,\r\n        width:'100%',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        backgroundColor:''\r\n    },\r\n    textContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        marginTop:8,\r\n    },\r\n});\r\n","\r\nexport function convertDateTimeToDate(inputString){\r\n    if (inputString == null ) return ''\r\n    return inputString.substring(8,10)+'-'+inputString.substring(5,7)+'-'+inputString.substring(0,4);\r\n}\r\n\r\nexport function convertDateTimeToTime(inputString){\r\n    if (inputString == null ) return ''\r\n    return inputString.substring(11,13)+':'+inputString.substring(14,16);\r\n}\r\n\r\nexport function convertDateAndTimeToDateTime(inputDate,inputTime){\r\n    return inputDate.substring(6,10)+'-'+inputDate.substring(3,5)+'-'+inputDate.substring(0,2)+'T'+inputTime+':00.000+0000'\r\n}\r\n\r\nexport function convertDateToDateTime(inputDate){\r\n    return inputDate.substring(6,10)+'-'+inputDate.substring(3,5)+'-'+inputDate.substring(0,2)+'T00:00:00.000+0000'\r\n}\r\n\r\nexport function getApiUrl(){\r\n    // return \"http://192.168.1.17:8080\";\r\n    return \"https://medtest-backend.herokuapp.com\";\r\n}\r\n\r\nexport function getRoleName(role){\r\n    switch (role) {\r\n        case 'CUSTOMER':\r\n            return 'Khách hàng';\r\n            break;\r\n        case 'NURSE':\r\n            return 'Y tá';\r\n            break;\r\n        case 'COORDINATOR':\r\n            return 'Điều phối viên'\r\n            break;\r\n        case 'ADMIN':\r\n            return 'Quản trị hệ thống'\r\n            break;\r\n        }   \r\n    }\r\n\r\n\r\nexport function convertMoney(_price){\r\n    let price = _price.toString()\r\n    let index = price.length -1\r\n    let result = ''\r\n    while (index >= 3) {\r\n        // console.log(price+\": \"+price.substring(index-2,index+1)+', '+index)\r\n        result = '.'+price.substring(index-2,index+1)+result\r\n        index-=3\r\n    }\r\n    result = price.substring(0,index+1)+result\r\n    return result\r\n}\r\n\r\nexport function getStateName(status){\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'Đang đợi y tá nhận đơn';\r\n            break;\r\n        case 'coordinatorlostsample':\r\n            return 'Điều phối viên làm mất mẫu';\r\n            break;\r\n        case 'accepted':\r\n            return 'Đang đợi lấy mẫu';\r\n            break;\r\n        case 'transporting':\r\n            return 'Đang vận chuyển mẫu';\r\n            break;\r\n        case 'lostsample':\r\n            return 'Đang đợi lấy lại mẫu';\r\n            break;\r\n        case 'waitingforresult':\r\n            return 'Đang đợi kết quả';\r\n            break;\r\n        case 'closed':\r\n            return 'Đã xong';\r\n            break;\r\n        case 'canceled':\r\n            return 'Đã bị hủy';\r\n            break;\r\n        \r\n    } \r\n}\r\n\r\n\r\nexport function getAppointmentStateName(status){\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'Đơn đang đợi xử lý';\r\n            break;\r\n        case 'accepted':\r\n            return 'Đơn đã được chấp nhận';\r\n            break;\r\n        case 'rejected':\r\n            return 'Đơn đã bị từ chối';\r\n            break;\r\n        case 'canceled':\r\n            return 'Đơn đã bị hủy';\r\n            break;\r\n        \r\n        } \r\n    }\r\n\r\n\r\n\r\nexport function getStateColor(status){\r\n        switch (status) {\r\n        case 'pending':\r\n            return '#ffd66f';\r\n            break;\r\n        case 'coordinatorlostsample':\r\n            return '#ffd66f';\r\n            break;\r\n        case 'accepted':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'transporting':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'lostsample':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'waitingforresult':\r\n            return '#6398d6';\r\n            break;\r\n        case 'closed':\r\n            return '#000';\r\n            break;\r\n        \r\n        } \r\n    }","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getRoleName} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class AccountListViewItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            // appointment_date: convertDateTimeToDate(this.props.appoint_date),\r\n            // appointment_time: convertDateTimeToTime(this.props.appoint_date),\r\n        };\r\n        this.onAccountPress = this.onAccountPress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n\r\n    onAccountPress(){\r\n        const account= { \r\n            'accountId':this.props.accountId, \r\n            'accountPhoneNumber':this.props.accountPhoneNumber,                      \r\n            'accountName':this.props.accountName,\r\n            'accountDob':this.props.accountDob,\r\n            'accountAddress':this.props.accountAddress,\r\n            'accountPassword':this.props.accountPassword,\r\n            'accountActive':this.props.accountActive,\r\n            'accountEmail':this.props.accountEmail,\r\n            'accountRole':this.props.accountRole,\r\n            'accountGender':this.props.accountGender,\r\n            'accountImageUrl':this.props.accountImageUrl,\r\n            'accountTownCode':this.props.accountTownCode,\r\n            'accountDistrictCode':this.props.accountDistrictCode,\r\n            }\r\n        // console.log(account)\r\n        this.props.setSelectedAccount?this.props.setSelectedAccount(account):null\r\n        this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.accountListItem}\r\n                onPress={() => this.onAccountPress()}\r\n                >\r\n                <View style={styles.accountNameContainer}>                                       \r\n                <Text style={{fontSize:17}}>{this.props.accountName}</Text>\r\n                </View>\r\n                <View style={styles.accountPhoneContainer}>                                       \r\n                <Text style={{fontSize:17}}>{this.props.accountPhoneNumber}</Text>\r\n                </View>\r\n                <View style={styles.accountRoleContainer}>                                       \r\n                <Text style={{fontSize:17}}>{getRoleName(this.props.accountRole)}</Text>  \r\n                </View>\r\n                     \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingBottom:2,  \r\n    },\r\n    accountNameContainer:{\r\n        margin:10,\r\n        width:350,\r\n        alignItems: 'center',\r\n        marginRight:150,\r\n    },\r\n    accountPhoneContainer:{\r\n        margin:10,\r\n        width:200,\r\n        marginRight:100,\r\n        alignItems: 'center',\r\n    },\r\n    accountRoleContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n    },\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport AccountListViewItem from './AccountListViewItem'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class AccountListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            Button1Selected: true,\r\n            Button2Selected: false,\r\n            Button3Selected: false,\r\n            Button4Selected: false,\r\n            Button4Selected: false,\r\n            districtsList: districtList,\r\n            accountSelected: 'all',\r\n            userList: this.props.userList?this.props.userList:[],\r\n            dataChanged: true,\r\n        };\r\n        this.menuButtonPress = this.menuButtonPress.bind(this)\r\n        this.getAccountShowList = this.getAccountShowList.bind(this)\r\n    }\r\n\r\n\r\n    \r\n    getAccountShowList(){\r\n        \r\n        if (this.state.accountSelected=='all'){\r\n            return this.state.userList\r\n        }\r\n        else{\r\n            let result = []\r\n            let index = this.state.userList.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.userList[index].role === this.state.accountSelected) {\r\n                    result.push(this.state.userList[index]);\r\n                    }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        \r\n        return this.state.userList\r\n    }\r\n\r\n\r\n\r\n\r\n    menuButtonPress(button){\r\n        this.setState(previousState => ({ \r\n            Button1Selected: button==\"1\"?true:false,\r\n            Button2Selected: button==\"2\"?true:false,\r\n            Button3Selected: button==\"3\"?true:false,\r\n            Button4Selected: button==\"4\"?true:false,\r\n            Button5Selected: button==\"5\"?true:false,\r\n            accountSelected: button==\"1\"? 'all': button==\"2\"? 'COORDINATOR': button==\"3\"? 'NURSE' : button==\"4\"? 'CUSTOMER': 'ADMIN',\r\n            dataChanged: !this.state.dataChanged,\r\n        }))\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                userList: this.props.userList,\r\n                dataChanged: !this.state.dataChanged,\r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    // componentDidUpdate  (prevProps, prevState) {        \r\n    //      if (prevProps !== this.props) {\r\n    //         this.setState(previousState => ({ \r\n    //             userList: this.props.userList,\r\n    //         }));\r\n    //     }\r\n    // }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleListArea}>\r\n            <View style={styles.accountListTopMenuArea}>\r\n                <View style={styles.accountListTopMenuContainer}>\r\n                    <TextInput style={styles.topMenuTextInput}\r\n                    placeholder={'Tìm kiếm tài khoản theo số điện thoại'}>                \r\n                    </TextInput>\r\n                    <TouchableOpacity \r\n                        style={styles.createNewAccountButton} \r\n                        onPress={() => this.props.changeShowView ? this.props.changeShowView('AccountCreateView'): null}\r\n                        >\r\n                        <Text style={{color:'white'}}>Tạo tài khoản nhân viên</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={[styles.accountListTopMenuContainer,{\r\n                    justifyContent: 'flex-start',\r\n                    }]}>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button1Selected ? 1:0,\r\n                        backgroundColor: this.state.Button1Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('1')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Tất cả</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button2Selected ? 1:0,\r\n                        backgroundColor: this.state.Button2Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('2')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Điều phối viên</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button3Selected ? 1:0,\r\n                        backgroundColor: this.state.Button3Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('3')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Y tá</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button4Selected ? 1:0,\r\n                        backgroundColor: this.state.Button4Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('4')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Khách hàng</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button5Selected ? 1:0,\r\n                        backgroundColor: this.state.Button5Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('5')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Quản trị hệ thống</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={styles.accountListTopMenuContainer}>\r\n                    <Text >Số lượng: {this.getAccountShowList()?this.getAccountShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.articleListFlatListArea}>     \r\n                <View style={styles.articleListFlatListTitleArea}> \r\n                    <View style={styles.articleListFlatListTitleContainer}> \r\n                        <View style={styles.articleListTitleNameContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Tên người dùng</Text>\r\n                        </View>\r\n                        <View style={styles.articleListTitlePhoneContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Số điện thoại</Text>\r\n                        </View>\r\n                        <View style={styles.articleListTitleRoleContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Vị trí</Text>  \r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <FlatList style={styles.articleListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getAccountShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <AccountListViewItem\r\n                                    accountId={item.id}         \r\n                                    accountPhoneNumber={item.phoneNumber}                            \r\n                                    accountName={item.name}    \r\n                                    accountDob={item.dob}    \r\n                                    accountAddress={item.address}\r\n                                    accountPassword={item.password}\r\n                                    accountActive={item.active}\r\n                                    accountEmail={item.email}         \r\n                                    accountRole={item.role}                            \r\n                                    accountGender={item.gender}    \r\n                                    accountImageUrl={item.image}    \r\n                                    accountTownCode={item.townCode}\r\n                                    accountDistrictCode={item.districtCode}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedAccount={this.props.setSelectedAccount?this.props.setSelectedAccount: null}  \r\n                                                                                                    \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList> \r\n                       \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst roleSelectedColor = '#c0c0c0';\r\n\r\nconst roleSelectButtonHeight = 30;\r\n\r\nconst styles = StyleSheet.create({\r\n    articleListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountListTopMenuArea: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:40,\r\n        paddingTop:10,\r\n    },\r\n    accountListTopMenuContainer: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:10,\r\n        paddingLeft:190,\r\n        paddingRight:200,\r\n    },\r\n    topMenuTextInput:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:10,\r\n    },\r\n    topMenuButton:{\r\n        width: (Dimensions.get('window').width-400)/5,\r\n        height: roleSelectButtonHeight,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    createNewAccountButton:{\r\n        width: 240,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        // marginRight:200,\r\n    },\r\n    articleListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    articleListFlatListTitleArea:{\r\n        alignSelf: 'stretch',\r\n        width: \"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    articleListFlatListTitleContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        // width: 750,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',   \r\n        backgroundColor:'#c0c0c0',     \r\n    },\r\n    articleListTitleNameContainer:{\r\n        margin:10,\r\n        width:350,\r\n        alignItems: 'center',\r\n        marginRight:150,\r\n    },\r\n    articleListTitlePhoneContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n        marginRight:100,\r\n    },\r\n    articleListTitleRoleContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n    },\r\n    articleListTitleText:{\r\n        fontSize:17, \r\n        fontWeight:'bold'\r\n    },\r\n    articleListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingBottom:40,\r\n    },\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',\r\n            accountEmail:'',\r\n            accountDob: '',\r\n            accountGender: '',\r\n            accountPassword: '',\r\n            accountRePassword: '',\r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountAddress: '',\r\n            accountRole: '',\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            day: new Date().getDate(),\r\n            accountImage: '',\r\n            error: '',\r\n            errorList: ['',\r\n                    'Tên chủ tài khoản không được bỏ trống',\r\n                    'Số điện thoại phải có mười số',\r\n                    'Địa chỉ email không được bỏ trống',\r\n                    'Mật khẩu phải có ít nhất 6 kí tự',\r\n                    'Xác nhận mật khẩu không trùng với mật khẩu ',\r\n                    'Địa chỉ không được bỏ trống'],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onDistrictChange = this.onDistrictChange.bind(this)\r\n        this.createNumberPickerList = this.createNumberPickerList.bind(this)\r\n        this.getNumberOfDayInMonth = this.getNumberOfDayInMonth.bind(this)\r\n        this.createAccount = this.createAccount.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountImage: '',\r\n            error: '',\r\n        }));\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                districtList: this.props.districtList?this.props.districtList:[],\r\n                townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n                districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n                townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n                accountImage: '',\r\n                error: '',\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onDistrictChange(districtId){\r\n        this.setState({\r\n            districtSelected:districtId,                  \r\n        })\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == districtId){\r\n                this.setState({\r\n                    townList:  this.state.districtList[index].listTown,\r\n                    townSelected: this.state.districtList[index].listTown[0]?this.state.districtList[index].listTown[0].townCode:'none'              \r\n                })\r\n                index = 0;\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    getFebDay(){        \r\n        const year = this.state.year\r\n        if (year % 400 == 0 ) return 29\r\n        if (year % 100 == 0 ) return 28\r\n        if (year % 4 == 0) return 29\r\n        return 28\r\n    }\r\n\r\n    getNumberOfDayInMonth(month){\r\n        switch (month) {\r\n            case '1':\r\n            case '3':\r\n            case '5':\r\n            case '7':\r\n            case '8':\r\n            case '10':\r\n            case '12':\r\n                return 31;\r\n                break;\r\n            case '4':\r\n            case '6':\r\n            case '9':\r\n            case '11':\r\n                return 30;\r\n                break;\r\n            case '2':\r\n                return this.getFebDay();\r\n                break;\r\n            \r\n        }   \r\n    }\r\n\r\n    createNumberPickerList(start,end,startToEnd){\r\n        let result = [];\r\n        if(startToEnd){\r\n            for (let i = start; i <= end; i++)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        else{\r\n            for (let i = end; i >= start; i--)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        return result\r\n    }\r\n\r\n    getDob(){\r\n        let result = ''\r\n        if(parseInt(this.state.month)<10)\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n        else\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n        return result\r\n    }\r\n\r\n    \r\n    createAccount(){\r\n        // console.log(this.state.accountRole)\r\n        if(this.checkValid()){\r\n            this.callApiCreateAccount()\r\n        }\r\n    }\r\n\r\n    \r\n    checkValid(){        \r\n        if (this.state.accountName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.accountPhoneNumber == '' ||  this.state.accountPhoneNumber.length<10) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        \r\n        if (this.state.accountEmail == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (this.state.accountPassword == '' || this.state.accountPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        if (this.state.accountRePassword != this.state.accountPassword) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[5]\r\n            }));\r\n        if (this.state.accountAddress == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[6]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n\r\n    callApiCreateAccount(){\r\n        fetch(getApiUrl()+'/users/create-employee', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            name: this.state.accountName,\r\n            phoneNumber: this.state.accountPhoneNumber,\r\n            email: this.state.accountEmail,\r\n            dob: convertDateToDateTime(this.getDob()),\r\n            gender: this.state.accountGender,\r\n            password: this.state.accountPassword,\r\n            districtCode: this.state.districtSelected,\r\n            townCode: this.state.townSelected,\r\n            address: this.state.accountAddress,\r\n            role: this.state.accountRole,\r\n            image: this.state.accountImage\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.props.changeShowView('AccountListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n\r\n    selectPicture = async () =>{\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                this.setState({ accountImage: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Tạo nhân viên mới: \"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên nhân viên:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên nhân viên'}\r\n                            name={\"accountName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountName}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập số điện thoại của nhân viên'}\r\n                            name=\"accountPhoneNumber\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPhoneNumber}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ email:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ email của nhân viên'}\r\n                            name=\"accountEmail\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountEmail}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.day}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,this.getNumberOfDayInMonth(this.state.month.toString()),true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.month}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day: this.getNumberOfDayInMonth(itemValue)<this.state.day?'1':this.state.day,\r\n                                month:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,12,true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.year}\r\n                            style={[styles.accountTypeDropDown,{width:80}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                year:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1920,new Date().getFullYear(),false)}\r\n                        </Picker>\r\n                        \r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Giới tính:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.accountGender}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountGender:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Nam'} value={'1'} />\r\n                            <Picker.Item label={'Nữ'} value={'0'} />\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu'}\r\n                            name=\"accountPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Xác nhận mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Xác nhận lại mật khẩu'}\r\n                            name=\"accountRePassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountRePassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>                    \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Quận/huyện:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.districtSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.onDistrictChange(itemValue)}                    \r\n                            >\r\n                            {this.state.districtList?this.state.districtList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />))\r\n                            : null }\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Phường/xã:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.townSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                townSelected:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.state.townList?this.state.townList.map(town => (\r\n                            <Picker.Item label={town.townName} value={town.townCode} />\r\n                            )): null}\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ chi tiết:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ chi tiết: số nhà, đường, thôn, ..'}\r\n                            name=\"accountAddress\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountAddress}\r\n                            >                \r\n                        </TextInput>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Vị trí nhân viên:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.accountRole}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountRole:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Y tá'} value={'NURSE'} />\r\n                            <Picker.Item label={'Điều phối viên'} value={'COORDINATOR'} />\r\n                            <Picker.Item label={'Quản trị hệ thống'} value={'ADMIN'} />\r\n                        </Picker>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đại diện: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text style={{color:'white'}}>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                        \r\n                    </View>\r\n                    {this.state.accountImage?\r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Text style={[styles.rowText,{fontSize:15,width:800,paddingTop:3}]}>{' '+this.state.accountImage}</Text>\r\n                        </View>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: this.state.accountImage}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    :null\r\n                    }\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n            <TouchableOpacity style={styles.accountCreateConfirmButton} onPress={()=>this.createAccount()}>\r\n                    <Text style={{color:'white'}}>Tạo tài khoản nhân viên</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        fontWeight:'bold'\r\n        \r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    accountCreateConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:30,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        \r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',\r\n            accountEmail:'',\r\n            accountDob: '',\r\n            accountGender: '',\r\n            accountPassword: '',\r\n            accountRePassword: '',\r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountAddress: '',\r\n            accountRole: '',\r\n            accountActive: '',\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            day: new Date().getDate(),\r\n            accountImage: '',\r\n            error: '',\r\n            errorList: ['','Tên chủ tài khoản không được bỏ trống','Địa chỉ email không được bỏ trống', 'Địa chỉ không được bỏ trống'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onDistrictChange = this.onDistrictChange.bind(this)\r\n        this.createNumberPickerList = this.createNumberPickerList.bind(this)\r\n        this.getNumberOfDayInMonth = this.getNumberOfDayInMonth.bind(this)\r\n        this.updateAccountInformation = this.updateAccountInformation.bind(this)\r\n        this.resetPassword = this.resetPassword.bind(this)\r\n        this.checkCurrentUser = this.checkCurrentUser.bind(this)\r\n        this.checkAdmin = this.checkAdmin.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n        this.getDob = this.getDob.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log('')\r\n        this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            accountEmail: this.props.account?this.props.account.accountEmail:'',\r\n            accountDob: this.props.account?this.props.account.accountDob:'',\r\n            accountGender: this.props.account?this.props.account.accountGender:'',\r\n            accountRole: this.props.account?this.props.account.accountRole:'',\r\n            accountAddress: this.props.account?this.props.account.accountAddress:'',\r\n            accountActive: this.props.account?this.props.account.accountActive:'',\r\n            accountImage: this.props.account?this.props.account.accountImageUrl:'',\r\n            year: this.props.account?this.props.account.accountDob? this.props.account.accountDob.substring(0,4):'2020':'2020',\r\n            month: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(5,7)).toString():'2020':'2020',\r\n            day: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(8,10)).toString():'2020':'2020',\r\n            error: '',\r\n        }));\r\n    }\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n        if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            accountEmail: this.props.account?this.props.account.accountEmail:'',\r\n            accountDob: this.props.account?this.props.account.accountDob:'',\r\n            accountGender: this.props.account?this.props.account.accountGender:'',\r\n            accountRole: this.props.account?this.props.account.accountRole:'',\r\n            accountAddress: this.props.account?this.props.account.accountAddress:'',\r\n            accountActive: this.props.account?this.props.account.accountActive:'',\r\n            accountImage: this.props.account?this.props.account.accountImageUrl:'',\r\n            year: this.props.account?this.props.account.accountDob? this.props.account.accountDob.substring(0,4):'2020':'2020',\r\n            month: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(5,7)).toString():'2020':'2020',\r\n            day: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(8,10)).toString():'2020':'2020',\r\n            error: '',\r\n        }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onDistrictChange(districtId){\r\n        this.setState({\r\n            districtSelected:districtId,                  \r\n        })\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == districtId){\r\n                this.setState({\r\n                    townList:  this.state.districtList[index].listTown,\r\n                    townSelected: this.state.districtList[index].listTown[0]?this.state.districtList[index].listTown[0].townCode:'none'              \r\n                })\r\n                index = 0;\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    getFebDay(){        \r\n        const year = this.state.year\r\n        if (year % 400 == 0 ) return 29\r\n        if (year % 100 == 0 ) return 28\r\n        if (year % 4 == 0) return 29\r\n        return 28\r\n    }\r\n\r\n    getNumberOfDayInMonth(month){\r\n        switch (month) {\r\n            case '1':\r\n            case '3':\r\n            case '5':\r\n            case '7':\r\n            case '8':\r\n            case '10':\r\n            case '12':\r\n                return 31;\r\n                break;\r\n            case '4':\r\n            case '6':\r\n            case '9':\r\n            case '11':\r\n                return 30;\r\n                break;\r\n            case '2':\r\n                return this.getFebDay();\r\n                break;\r\n            \r\n        }   \r\n    }\r\n\r\n    createNumberPickerList(start,end,startToEnd){\r\n        let result = [];\r\n        if(startToEnd){\r\n            for (let i = start; i <= end; i++)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        else{\r\n            for (let i = end; i >= start; i--)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        return result\r\n    }\r\n\r\n\r\n    getDob(){\r\n        let result = ''\r\n        if(parseInt(this.state.month)<10)\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n        else\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n        return result\r\n    }\r\n    \r\n\r\n    resetPassword(){\r\n        console.log(this.props.account.accountId),\r\n        console.log(this.props.userInfo.id),\r\n        fetch(getApiUrl()+'/users/reset-password/'+this.props.account.accountId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n            \r\n        },\r\n        body: JSON.stringify({\r\n            userProcessingID: this.props.userInfo.id\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message?  success=true : null : null;\r\n                if (success)\r\n                    this.props.changeShowView('AccountListView')\r\n                \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    changePassword(){\r\n        this.props.changeShowView('AccountChangePasswordView')\r\n    }\r\n\r\n    updateAccountInformation(){\r\n        if(this.checkValid()){\r\n            this.callApiUpdateAccountInfo()\r\n        }\r\n    }\r\n\r\n    \r\n    checkValid(){        \r\n        if (this.state.accountName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.accountEmail == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.accountAddress == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n    callApiUpdateAccountInfo(){\r\n        fetch(getApiUrl()+'/users/update-user/'+this.props.account.accountId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            name: this.state.accountName,\r\n            dob: convertDateToDateTime(this.getDob()),\r\n            address: this.state.accountAddress,\r\n            active: this.state.accountActive,\r\n            email: this.state.accountEmail,\r\n            gender: this.state.accountGender,\r\n            townCode: this.state.townSelected,\r\n            districtCode: this.state.districtSelected,\r\n            image: this.state.accountImage\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) {\r\n                    if (this.checkCurrentUser()) this.props.updateUserInfo(result)\r\n                    this.props.changeShowView('AccountListView')\r\n                }\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    \r\n    selectPicture = async () =>{\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                this.setState({ accountImage: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    checkCurrentUser(){\r\n        if (this.props.account.accountId == this.props.userInfo.id) return true\r\n        return false\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Chỉnh sửa thông tin nhân viên: \"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Thay đổi mật khẩu:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên nhân viên'}\r\n                            name={\"accountName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountName}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountName}</Text>\r\n                        }\r\n                        \r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <Text style={styles.rowTextLong}>{this.state.accountPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ email:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ email của nhân viên'}\r\n                            name=\"accountEmail\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountEmail}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountEmail}</Text>\r\n                        }\r\n                    </View>\r\n                    {this.checkAdmin()?\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.day}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,this.getNumberOfDayInMonth(this.state.month.toString()),true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.month}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day: this.getNumberOfDayInMonth(itemValue)<this.state.day?'1':this.state.day,\r\n                                month:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,12,true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.year}\r\n                            style={[styles.accountTypeDropDown,{width:80}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                year:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1920,2020,false)}\r\n                        </Picker>\r\n                    </View>\r\n                    :\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Text style={styles.rowTextLong}>{this.getDob()}</Text>\r\n                    </View>\r\n                    }\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Giới tính:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.accountGender}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountGender:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Nam'} value={'1'} />\r\n                            <Picker.Item label={'Nữ'} value={'0'} />\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountGender=='1'?'Nam':'Nữ'}</Text>\r\n                        }\r\n                        \r\n                    </View>                   \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Quận/huyện:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.districtSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.onDistrictChange(itemValue)}                    \r\n                            >\r\n                            {this.state.districtList?this.state.districtList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />))\r\n                            : null }\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Phường/xã:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.townSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                townSelected:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.state.townList?this.state.townList.map(town => (\r\n                            <Picker.Item label={town.townName} value={town.townCode} />\r\n                            )): null}\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ chi tiết:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ chi tiết: số nhà, đường, thôn, ..'}\r\n                            name=\"accountAddress\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountAddress}\r\n                            >                \r\n                        </TextInput>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Vị trí nhân viên:</Text>\r\n                        <Text style={styles.rowTextLong}>{getRoleName(this.state.accountRole)}</Text>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Trạng thái:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.accountActive}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountActive:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Đang hoạt động'} value={'1'} />\r\n                            <Picker.Item label={'Bị khóa'} value={'0'} />\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountActive=='1'?'Đang hoạt động':'Bị khóa'}</Text>\r\n                        }\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đại diện: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text style={{color:'white'}}>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    {this.state.accountImage?\r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Text style={[styles.rowTextLong,{fontSize:15,width:800,paddingTop:3}]}>{' '+this.state.accountImage}</Text>\r\n                        </View>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: this.state.accountImage}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    :null\r\n                    }\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>  \r\n                <View style={styles.buttonArea}>\r\n                    {this.checkCurrentUser()?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.changePassword()}>\r\n                        <Text style={{color:'white'}}>Thay đổi mật khẩu</Text>\r\n                    </TouchableOpacity>\r\n                    :\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.resetPassword()}>\r\n                        <Text style={{color:'white'}}>Đặt lại mật khẩu</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.updateAccountInformation()}>\r\n                        <Text style={{color:'white'}}>Lưu thay đổi</Text>\r\n                    </TouchableOpacity>\r\n                </View>  \r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        fontWeight:'bold'\r\n        \r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:30,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime} from './../Common/CommonFunction'\r\n// import DatePicker from 'react-native-date-picker'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',    \r\n            accountOldPassword: '',        \r\n            accountPassword: '',\r\n            accountRePassword: '',            \r\n            error: '',\r\n            errorList: ['',\r\n                    'Mật khẩu cũ phải có ít nhất 6 kí tự',\r\n                    'Mật khẩu mới phải có ít nhất 6 kí tự',\r\n                    'Xác nhận mới mật khẩu không trùng với mật khẩu '],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            error: '',\r\n        }));\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                accountName: this.props.account?this.props.account.accountName:'',\r\n                accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n                error: '',\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    \r\n    changePassword(){\r\n        if(this.checkValid()){\r\n            this.callApiChangePassword()\r\n        }\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n    \r\n    checkValid(){    \r\n        if (this.state.accountOldPassword == '' || this.state.accountOldPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));   \r\n        if (this.state.accountPassword == '' || this.state.accountPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.accountRePassword != this.state.accountPassword) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n\r\n    callApiChangePassword(){\r\n        console.log(this.props.userInfo.id)\r\n        let url = ''\r\n        if (this.checkAdmin()) url = getApiUrl()+'/users/admin/change-password/'+this.props.userInfo.id\r\n        else url = getApiUrl()+'/users/coordinators/change-password/'+this.props.userInfo.id\r\n        fetch(url, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            oldPassword: this.state.accountOldPassword,\r\n            newPassword: this.state.accountPassword,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? result.message == \"Thay đổi mật khẩu thành công!\"? success=true : null : null : null;\r\n                if (success)\r\n                this.props.changeShowView('AccountListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Thay đổi mật khẩu:\"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên người dùng:</Text>\r\n                        <Text style={styles.rowTextLong}>{this.state.accountName}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <Text style={styles.rowText}>{this.state.accountPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu cũ:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu cũ'}\r\n                            name=\"accountOldPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountOldPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu mới:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu mới'}\r\n                            name=\"accountPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Xác nhận mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Xác nhận lại mật khẩu'}\r\n                            name=\"accountRePassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountRePassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>           \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n            <TouchableOpacity style={styles.accountCreateConfirmButton} onPress={()=>this.changePassword()}>\r\n                    <Text>Đổi mật khẩu</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    accountCreateConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:30,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getAppointmentStateName, getStateColor} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class AppointmentListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n        };\r\n        this.onAppointmentPress = this.onAppointmentPress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n\r\n    onAppointmentPress(){\r\n        const appointment= { \r\n            \"appointmentId\": this.props.appointmentId,\r\n            \"appointmentCreatedTime\":this.props.appointmentCreatedTime,\r\n            \"customerName\":this.props.customerName,\r\n            \"customerPhoneNumber\":this.props.customerPhoneNumber,\r\n            \"customerDOB\":this.props.customerDOB,\r\n            \"appointmentMeetingTime\":this.props.appointmentMeetingTime,\r\n            \"appointmentStatus\":this.props.appointmentStatus,\r\n            }\r\n            \r\n        this.props.setSelectedAppointment?this.props.setSelectedAppointment(appointment):null\r\n        this.props.changeShowView?this.props.changeShowView('AppointmentView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.appointmentListItem}\r\n                onPress={() => this.onAppointmentPress()}\r\n                >                          \r\n                <View style={[styles.appointmentTextContainer,{\r\n                    marginTop:5,\r\n                }]}>                    \r\n                    <View>\r\n                    <Text style={{fontSize:17,color:'#25345D',fontWeight:'bold'}}>#{this.props.appointmentId}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={styles.appointmentTextContainer}>\r\n                    <View style={styles.appointmentListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>{this.props.customerName}</Text>\r\n                    </View>\r\n                    <View style={[styles.appointmentListSecondColumnContainer,{\r\n                        borderRadius:1,\r\n                        borderStyle: 'dashed',\r\n                    }]}>\r\n                    <Text style={{fontSize:17}}>{convertDateTimeToDate(this.props.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointmentCreatedTime)}</Text>                    \r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:15}}>Khung giờ hẹn: {convertDateTimeToTime(this.props.appointmentMeetingTime)}</Text>\r\n                    </View>\r\n                </View>     \r\n                <View style={[styles.appointmentTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.appointmentListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>Số điện thoại:  {this.props.customerPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentListSecondColumnContainer}>\r\n                    <Text style={{fontSize:17,color:'#0c59cf'}}>{getAppointmentStateName(this.props.appointmentStatus)}</Text>\r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:15}}>Ngày hẹn: {convertDateTimeToDate(this.props.appointmentMeetingTime)}</Text>\r\n                    </View>\r\n                    \r\n                </View>                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    appointmentListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    appointmentTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:3,\r\n        paddingTop:3,\r\n    },\r\n    appointmentListFirstColumnContainer:{\r\n        width:250,\r\n    },\r\n    appointmentListSecondColumnContainer:{\r\n        width:200,\r\n        marginLeft:20,\r\n        marginRight:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport AppointmentListViewItem from './AppointmentListViewItem'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\n\r\nexport default class AppointmentListView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            districtsList: this.props.districtList,\r\n            statusSelected: 'all',\r\n            districtSelected: 'all',\r\n            dataChanged: true,\r\n            testsList: this.props.testsList,\r\n            appointmentList: this.props.appointmentList,\r\n        };\r\n        this.getAppointmentShowList = this.getAppointmentShowList.bind(this)\r\n    }\r\n\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                appointmentList: this.props.appointmentList,\r\n                districtsList: this.props.districtList,\r\n                dataChanged: !this.state.dataChanged\r\n            }));\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    getAppointmentShowList(){\r\n        if (this.state.statusSelected=='all'){\r\n            if (this.state.districtSelected=='all'){\r\n                return this.state.appointmentList\r\n            }\r\n            else{\r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        else{\r\n            if (this.state.districtSelected=='all'){\r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].appointment_status === this.state.statusSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n            else{                \r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].appointment_status === this.state.statusSelected && this.state.appointmentList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        return this.state.appointmentList\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentListArea}>\r\n            <View style={styles.appointmentListTopMenuArea}>\r\n                <View style={styles.appointmentListTopMenuContainer}>\r\n                    <Text style={{fontWeight:'bold'}}>Trạng thái: </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.statusSelected}\r\n                        style={styles.appointmentTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            statusSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged\r\n                        })}\r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        <Picker.Item label=\"Đơn đang đợi xử lý\" value=\"pending\" />\r\n                        <Picker.Item label=\"Đơn đã được chấp nhận\" value=\"accepted\" />\r\n                        <Picker.Item label=\"Đơn đã bị từ chối\" value=\"rejected\" />\r\n                        <Picker.Item label=\"Đơn đã bị hủy\" value=\"canceled\" />\r\n                    </Picker>                    \r\n                </View>\r\n                <View style={styles.appointmentListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getAppointmentShowList()?this.getAppointmentShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.appointmentListFlatListArea}>        \r\n                <FlatList style={styles.appointmentListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getAppointmentShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <AppointmentListViewItem\r\n                                    appointmentId={item.appointment_id}       \r\n                                    appointmentCreatedTime={item.appointment_createdTime}                             \r\n                                    customerName={item.appointment_customerName}\r\n                                    customerPhoneNumber={item.appointment_phoneNumber}\r\n                                    customerDOB={item.appointment_DOB}\r\n                                    appointmentMeetingTime={item.appointment_meetingTime}\r\n                                    appointmentStatus={item.appointment_status}        \r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedAppointment={this.props.setSelectedAppointment?this.props.setSelectedAppointment: null}                                                                 \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentListTopMenuArea: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n        paddingTop:10,\r\n    },\r\n    appointmentListTopMenuContainer: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n        padding:10,\r\n        paddingLeft:200,\r\n        paddingRight:200\r\n    },\r\n    appointmentTypeDropdown:{\r\n        height: 35, \r\n        width: 300,\r\n        borderRadius:5,\r\n        marginLeft:54,\r\n    },\r\n    appointmentListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    appointmentListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport {getApiUrl, getAppointmentStateName} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class AppointmentView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {        \r\n            \r\n        };\r\n        this.onAccept = this.onAccept.bind(this)\r\n        this.onReject = this.onReject.bind(this)\r\n        \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n    callApiAcceptAppointment(_status){\r\n        fetch(getApiUrl()+\"/appointments/accept/\"+this.props.appointment.appointmentId, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                status: _status,\r\n                coordinatorID: this.props.userInfo.id,\r\n                note: 'ok',\r\n            }),\r\n            })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                // let success = false\r\n                // result ? result.message? null : success=true : null;\r\n                // if (success) \r\n                this.props.changeShowView('AppointmentListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    onAccept(){\r\n        this.callApiAcceptAppointment()\r\n    }\r\n\r\n    onReject(){\r\n        this.props.changeShowView('AppointmentRejectView')\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentViewArea}>\r\n            <View style={styles.appointmentTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Chi tiết đơn khám</Text>                \r\n            </View>\r\n            <View style={styles.appointmentArea}>\r\n                <View style={styles.appointmentContainer}>      \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Mã đơn xét khám: </Text> \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.appointmentId:''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentCreatedTime):''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ hẹn:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentMeetingTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentMeetingTime):''}</Text>\r\n                    </View>  \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.customerPhoneNumber:''}</Text>\r\n                    </View>                  \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Trạng thái: </Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?getAppointmentStateName(this.props.appointment.appointmentStatus):''}</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    {this.props.appointment.appointmentStatus =='pending'?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onReject()}>\r\n                        <Text style={{color:'white'}}>Từ chối</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>}\r\n                    {this.props.appointment.appointmentStatus =='pending'?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onAccept()}>\r\n                        <Text style={{color:'white'}}>Xác nhận</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>}\r\n                </View>\r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:10,\r\n        marginBottom:-20,\r\n    },\r\n    appointmentArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    appointmentContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    appointmentRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowFirstContainer:{\r\n        width:200,\r\n    },\r\n    rowSecondContainer:{\r\n        width:'100%',\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:17,\r\n        fontWeight:'bold',\r\n        backgroundColor:''\r\n    },\r\n    \r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        backgroundColor:''\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\n\r\nexport default class AppointmentLostSampleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            reason: '',\r\n            error: '',\r\n            errorList: ['','Phải điền lý do từ chối'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.rejectAppointment = this.rejectAppointment.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    rejectAppointment(){\r\n        if(this.checkValid()){\r\n            this.callApiRejectAppointment()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.reason == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiRejectAppointment(){\r\n        fetch(getApiUrl()+\"/appointments/cancel/\"+this.props.appointment.appointmentId, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                status: 'rejected',\r\n                coordinatorID: this.props.userInfo.id,\r\n                note: this.state.reason,\r\n            }),\r\n            })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                // let success = false\r\n                // result ? result.message? null : success=true : null;\r\n                // if (success) \r\n                this.props.changeShowView('AppointmentListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentViewArea}>\r\n            <View style={styles.appointmentTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Từ chối đơn hẹn: </Text>                \r\n            </View>\r\n            <View style={styles.appointmentArea}>\r\n                <View style={styles.appointmentContainer}>   \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn hẹn: </Text>        \r\n                        <Text style={styles.rowText}>{this.props.appointment?this.props.appointment.appointmentId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowText,{width:300}]}>{this.props.appointment?this.props.appointment.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.appointment?this.props.appointment.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowText}>{'Lý do từ chối: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Điền lý do từ chối'}\r\n                            name={\"reason\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reason}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.appointmentConfirmButton} onPress={() => this.props.changeShowView('AppointmentView')}>\r\n                        <Text>Quay lại</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.appointmentConfirmButton} onPress={() => this.rejectAppointment()}>\r\n                        <Text>Từ chối đơn hẹn</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    appointmentArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    appointmentContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    appointmentRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n    },\r\n    appointmentTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    appointmentConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class ArticleListViewItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n        };\r\n        this.onArticlePress = this.onArticlePress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n    onArticlePress(){\r\n        const article= { \r\n            \"articleId\": this.props.articleId,\r\n            \"articleTitle\":this.props.articleTitle,\r\n            \"articleContent\":this.props.articleContent,\r\n            \"articleShortContent\":this.props.articleShortContent,\r\n            \"articleImageUrl\":this.props.articleImageUrl,\r\n            \"userId\":this.props.userId,\r\n            \"articleCreatedTime\":this.props.articleCreatedTime,\r\n            \"creatorName\": this.props.creatorName,\r\n            }\r\n        this.props.setSelectedArticle?this.props.setSelectedArticle(article):null\r\n        this.props.changeShowView?this.props.changeShowView('ArticleView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.articleListItem}\r\n                onPress={() => this.onArticlePress()}\r\n                >                                \r\n                <View style={styles.articleImageContainer}>\r\n                    <Image \r\n                        style={styles.articleImage}\r\n                        source={{uri:this.props.articleImageUrl}}>\r\n                    </Image>\r\n                </View>  \r\n                <View style={styles.articleTextContainer}>\r\n                    <View style={styles.articleTextContentContainer}>\r\n                        <View style={styles.articleTitleContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'Bold'}}>{this.props.articleTitle}</Text>\r\n                        </View>\r\n                        <View style={[styles.articleCreateTimeContainer,{\r\n                            borderRadius:1,\r\n                            borderStyle: 'dashed',\r\n                        }]}>\r\n                        <Text style={{fontSize:15}}>{convertDateTimeToDate(this.props.articleCreatedTime)+\"   \"+convertDateTimeToTime(this.props.articleCreatedTime)}</Text>                                   \r\n                        </View>\r\n                        <View style={styles.articleShortContentContainer}>\r\n                            <Text style={{fontSize:17, textAlign: 'justify'}}>{this.props.articleShortContent}</Text>        \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.articleTextCreatorNameContainer}>\r\n                        <View style={styles.articleCreatorNameContainer}>\r\n                            <Text style={{fontSize:17}}>{this.props.creatorName}</Text>\r\n                        </View>\r\n                    </View>\r\n                    \r\n                </View>     \r\n                                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    articleListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    articleImageContainer:{\r\n        margin:10,\r\n        height:200,\r\n        width:200,\r\n    },\r\n    articleImage:{\r\n        height:200,\r\n        width:200,\r\n    },\r\n    articleTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-620,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        backgroundColor:'',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:5,\r\n        paddingTop:10,\r\n    },\r\n    articleTextContentContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-650,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        backgroundColor:''\r\n    },\r\n    articleTextCreatorNameContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-630,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        backgroundColor:'',\r\n        paddingRight:10,\r\n    },\r\n    articleTitleContainer:{\r\n        marginBottom:10,\r\n    },\r\n    articleCreateTimeContainer:{\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n        padding:2,\r\n        marginBottom:10\r\n    },\r\n    articleShortContentContainer:{\r\n    },\r\n    articleCreatorNameContainer:{\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport ArticleListViewItem from './ArticleListViewItem'\r\n\r\nexport default class ArticleListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            statusSelected: 'pending',\r\n            districtSelected: 'D0',\r\n            articleList: this.props.articleList,\r\n        };\r\n        this.onArticlePress = this.onArticlePress.bind(this)\r\n    }\r\n\r\n    \r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                articleList: this.props.articleList,\r\n            }));\r\n        }\r\n    }\r\n\r\n    onArticlePress (){\r\n        this.props.changeShowView ? this.props.changeShowView('ArticleView'): null\r\n    }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleListArea}>\r\n            <View style={styles.articleListTopMenuArea}>\r\n                <Text style={{fontSize:25,fontWeight:'bold'}}>Bài viết mới </Text>\r\n                <TouchableOpacity \r\n                    style={styles.createNewArticleButton}\r\n                    onPress={() => this.props.changeShowView ? this.props.changeShowView('ArticleAddView'): null}\r\n                    >\r\n                    <Text style={{color:'white'}}>Tạo bài viết mới</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.articleListFlatListArea}>        \r\n                <FlatList style={styles.articleListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.state.articleList}\r\n                    // extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <ArticleListViewItem\r\n                                    articleId={item.id}         \r\n                                    articleTitle={item.tittle}                            \r\n                                    articleShortContent={item.shortContent}    \r\n                                    articleContent={item.content}    \r\n                                    articleImageUrl={item.image}\r\n                                    userId={item.userID}\r\n                                    articleCreatedTime={item.createdTime}\r\n                                    creatorName={item.creatorName}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedArticle={this.props.setSelectedArticle?this.props.setSelectedArticle: null}\r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleListTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n    },\r\n    createNewArticleButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginRight:200,\r\n    },\r\n    articleListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    articleListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n// import * as DocumentPicker from 'expo-document-picker';\r\n\r\nexport default class ArticleAddView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            imageResultUri: '',\r\n            articleTitle: '',\r\n            articleShortContent: '',\r\n            articleContent: '',\r\n            error: '',\r\n            errorList: ['','Phải điền tiêu đề bài viết','Phải điền nội dung ngắn ngọn bài viết', 'Phải điền nội dung bài viết','Bài viết chưa có ảnh min họa'],\r\n\r\n        };\r\n        this.selectPicture = this.selectPicture.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.createArticle = this.createArticle.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    createArticle(){\r\n        if(this.checkValid()){\r\n            this.callApiCreateArticle()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.articleTitle == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.articleShortContent == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.articleContent == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (this.state.imageResultUri == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiCreateArticle(){\r\n        fetch(getApiUrl()+'/articles/create', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            tittle: this.state.articleTitle,\r\n            shortContent:this.state.articleShortContent,\r\n            content: this.state.articleContent,\r\n            image: this.state.imageResultUri,\r\n            userID: this.props.userInfo.id\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.success? success=result.success : null : null;\r\n                if (success) \r\n                this.props.changeShowView('ArticleListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    selectPicture = async () =>{\r\n        // const result = await DocumentPicker.getDocumentAsync({copyToCacheDirectory:true})\r\n        // console.log(result)\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                this.setState({ imageResultUri: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleAddViewArea}>\r\n            <View style={styles.articleAddTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Thêm bài viết: </Text>                \r\n            </View>\r\n            <View style={styles.articleAddArea}>\r\n                <View style={styles.articleAddContainer}>                    \r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>Tiêu đề: </Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                        placeholder={'Nhập tiêu đề'}   \r\n                        name={\"articleTitle\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.articleTitle}  \r\n                        >           \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Nội dung\\nngắn gọn: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Nhập nội dung ngắn gọn'}\r\n                            name={\"articleShortContent\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.articleShortContent}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Nội dung\\nbài viết: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={12}\r\n                            placeholder={'Nhập nội dung '}\r\n                            name={\"articleContent\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.articleContent} \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đính kèm: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text style={{color:'white'}}>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                        <Text style={[styles.rowText,{fontSize:15,width:600,paddingTop:3,marginLeft:20}]}>{' '+this.state.imageResultUri}</Text>\r\n                    </View>\r\n                    {this.state.imageResultUri?\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{' '}</Text>\r\n                        <Image \r\n                            style={styles.imagePreview}\r\n                            source={{ uri: this.state.imageResultUri}}\r\n                            >\r\n                        </Image>\r\n                    </View>\r\n                    :null\r\n                    }\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.articleAddConfirmButton} onPress={() => this.createArticle()}>\r\n                    <Text style={{color:'white'}}>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleAddViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleAddTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    articleAddArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    articleAddContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    articleAddRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:18,\r\n    },\r\n    articleTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    articleAddConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class ArticleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            imageUri: '',\r\n            imageType: '',\r\n            imageResultUri: '',\r\n        };\r\n        \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleViewArea}>\r\n            \r\n            <View style={styles.articleArea}>\r\n                <View style={styles.articleContainer}>      \r\n                    <View style={styles.articleRowContainer}>\r\n                        <Text style={{fontSize:25,fontWeight:'bold'}}>{this.props.article?this.props.article.articleTitle:''}</Text>                \r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{borderWidth:1,borderRadius:1,borderStyle: 'dashed',width:180}]}>\r\n                        <Text style={[styles.rowText,{flex:1,textAlign: 'center',}]}>{this.props.article?convertDateTimeToDate(this.props.article.articleCreatedTime)+\"   \"+convertDateTimeToTime(this.props.article.articleCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{justifyContent: 'center',}]}>\r\n                        <Image \r\n                            style={styles.rowImage}\r\n                            source={{ uri: this.props.article?this.props.article.articleImageUrl:'' }}\r\n                            >\r\n                            </Image>\r\n                    </View>\r\n                    <View style={styles.articleRowContainer}>\r\n                        <Text style={styles.rowText}>{this.props.article?this.props.article.articleContent:''}</Text>\r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{justifyContent: 'flex-end',}]}>\r\n                        <Text style={styles.rowText}>{this.props.article?this.props.article.creatorName:''}</Text>\r\n                    </View>   \r\n                                     \r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    articleArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    articleContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    articleRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        fontSize:18,\r\n        backgroundColor:'',\r\n        textAlign: 'justify'\r\n    },\r\n    articleTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowImage:{\r\n        width:400,\r\n        height:400,\r\n        backgroundColor:''\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,TextInput, Dimensions} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\n\r\nimport PageFooter from './../PageFooter'\r\n\r\nexport default class Login extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            phoneNumber: '',\r\n            password:'',\r\n            error: ' ',\r\n            errorList: [' ','Phải điền số điện thoại', 'Phải điền mật khẩu']\r\n        };\r\n        this.callApiLogin = this.callApiLogin.bind(this)\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    login(){\r\n        if(this.checkValid()){\r\n            this.callApiLogin()\r\n        }    \r\n    }\r\n\r\n    \r\n    checkValid(){     \r\n        if (this.state.phoneNumber == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.password == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiLogin(){\r\n        fetch(getApiUrl()+\"/users/login\",{\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                phoneNumber: this.state.phoneNumber,\r\n                password: this.state.password,\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) this.props.loginSuccess(result.userInfo,result.token)\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={{flex:1}}>\r\n            <View style={styles.loginViewArea}>\r\n                <View style={styles.titleContainer}>\r\n                    <Text style={{fontSize:23,fontWeight:'bold'}}>Đăng nhập</Text>\r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowText}>{'Số điện thoại'}</Text>\r\n                    <TextInput \r\n                        style={styles.rowTextInput}\r\n                        name={\"phoneNumber\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.phoneNumber}\r\n                        >                \r\n                    </TextInput>     \r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowText}>{'Mật khẩu'}</Text>\r\n                    <TextInput \r\n                        style={styles.rowTextInput}\r\n                        name={\"password\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.password}\r\n                        secureTextEntry={true}\r\n                        onSubmitEditing={() => this.login()}\r\n                        >                \r\n                    </TextInput>     \r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowTextError}>{this.state.error}</Text>                         \r\n                </View>\r\n                <TouchableOpacity style={styles.loginButton} onPress={() => this.login()}>\r\n                    <Text style={{color:'white'}}>Đăng nhập</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <PageFooter/>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    loginViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n        paddingTop:70,\r\n    },\r\n    titleContainer:{\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding:20,\r\n        marginBottom:20,\r\n\r\n    },\r\n    rowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width:'100%',\r\n        padding:20,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:130,\r\n        fontSize:18,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 400,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    loginButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:20,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime, getStateName, getStateColor} from './../Common/CommonFunction'\r\n\r\nexport default class RequestListPendingItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            \r\n        };\r\n        this.onRequestPress = this.onRequestPress.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    changeToRequestViewScreen(testList){\r\n        const request= { \r\n            \"requestId\": this.props.requestId,\r\n            \"requestCreatedTime\":this.props.requestCreatedTime,\r\n            \"customerName\":this.props.customerName,\r\n            \"customerPhoneNumber\":this.props.customerPhoneNumber,\r\n            \"customerDOB\":this.props.customerDOB,\r\n            \"requestAddress\":this.props.requestAddress,\r\n            \"requestDistrictName\":this.props.requestDistrictName,\r\n            \"requestTownName\": this.props.requestTownName,\r\n            \"requestMeetingTime\": this.props.requestMeetingTime,\r\n            \"nurseName\":this.props.nurseName,\r\n            \"nurseID\":this.props.nurseID,\r\n            \"lsSelectedTest\":this.props.lsSelectedTest,\r\n            \"requestAmount\":this.props.requestAmount,\r\n            \"requestStatus\":this.props.requestStatus,\r\n            \"testList\":testList,\r\n            \"requestTestVersion\":this.props.requestTestVersion,\r\n            }\r\n        this.props.setSelectedRequest?this.props.setSelectedRequest(request):null\r\n        this.props.changeShowView?this.props.changeShowView('RequestView'):null\r\n    }\r\n\r\n    onRequestPress(){        \r\n        if (this.checkVersion()) this.changeToRequestViewScreen(this.props.testList)\r\n    }\r\n\r\n    checkVersion(){\r\n        if(this.props.testVersion != this.props.requestTestVersion){\r\n            fetch(getApiUrl()+\"/tests/versions/list-all-test/\"+this.props.requestTestVersion,{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    let list = []\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    {\r\n                        this.changeToRequestViewScreen(result.lsTests)\r\n                        return false\r\n                    }\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )  \r\n        }\r\n        else return true;\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.requestListItem}\r\n                onPress={() => this.onRequestPress()}\r\n                >                                \r\n                <View style={[styles.requestListTextContainer,{\r\n                    marginTop:5,\r\n                }]}>                    \r\n                    <View>\r\n                    <Text style={{fontSize:17,color:'#25345D',fontWeight:'bold'}}>#{this.props.requestId}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={styles.requestListTextContainer}>\r\n                    <View style={styles.requestListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>{this.props.customerName}</Text>\r\n                    </View>\r\n                    <View style={[styles.requestListSecondColumnContainer,{\r\n                        borderRadius:1,\r\n                        borderStyle: 'dashed',\r\n                    }]}>\r\n                    <Text style={{fontSize:17}}>{convertDateTimeToDate(this.props.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.requestCreatedTime)}</Text>                    \r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:16}}>{this.props.requestAddress+', '+this.props.requestTownName+', '+this.props.requestDistrictName}</Text>\r\n                    </View>\r\n                </View>     \r\n                <View style={[styles.requestListTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.requestListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>Số điện thoại:  {this.props.customerPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.requestListSecondColumnContainer}>\r\n                    <Text style={{fontSize:17,color:'#0c59cf'}}>{getStateName(this.props.requestStatus)}</Text>\r\n                    </View>\r\n                    \r\n                </View>                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    requestListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    requestListTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:3,\r\n        paddingTop:3,\r\n    },\r\n    requestListFirstColumnContainer:{\r\n        width:250,\r\n    },\r\n    requestListSecondColumnContainer:{\r\n        width:230,\r\n        marginLeft:20,\r\n        marginRight:50,\r\n\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport RequestListViewItem from './RequestListViewItem'\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport requestList from './../../Data/requestList'\r\nimport districtList from './../../Data/districtList'\r\n\r\nexport default class RequestListView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            districtsList: this.props.districtList,\r\n            statusSelected: 'all',\r\n            districtSelected: 'all',\r\n            dataChanged: true,\r\n            testsList: this.props.testsList,\r\n            requestList: this.props.requestList,\r\n            requestShowList : this.props.requestList,\r\n            requestCount: this.props.requestList?this.props.requestList.length:'0',\r\n        };\r\n        this.getRequestShowList = this.getRequestShowList.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                requestList: this.props.requestList,\r\n                districtsList: this.props.districtList,\r\n                requestCount: this.props.requestList?this.props.requestList.length:'0', \r\n                dataChanged: !this.state.dataChanged\r\n            }));\r\n        }\r\n    }\r\n\r\n    \r\n    getRequestShowList(){\r\n        if (this.state.statusSelected=='all'){\r\n            if (this.state.districtSelected=='all'){\r\n                return this.state.requestList\r\n            }\r\n            else{\r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                \r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        else{\r\n            if (this.state.districtSelected=='all'){\r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestStatus === this.state.statusSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n            else{                \r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestStatus === this.state.statusSelected && this.state.requestList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        return this.state.requestList\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestListArea}>\r\n            <View style={styles.requestListTopMenuArea}>\r\n                <View style={styles.requestListTopMenuContainer}>\r\n                    <Text style={{fontWeight:'bold'}}>Trạng thái: </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.statusSelected}\r\n                        style={styles.requestTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            statusSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}\r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        <Picker.Item label=\"Đang đợi y tá nhận đơn\" value=\"pending\" />\r\n                        <Picker.Item label=\"Đơn đã được y tá chấp nhận\" value=\"accepted\" />\r\n                        <Picker.Item label=\"Đơn đã được lấy mẫu\" value=\"transporting\" />\r\n                        <Picker.Item label=\"Đang đợi kết quả\" value=\"waitingforresult\" />\r\n                        <Picker.Item label=\"Đơn đã xong\" value=\"closed\" />\r\n                        <Picker.Item label=\"Y tá làm mất mẫu\" value=\"lostsample\" />\r\n                        <Picker.Item label=\"Điều phối viên là mất mẫu\" value=\"coordinatorlostsample\" />\r\n                        <Picker.Item label=\"Đơn đã hủy\" value=\"canceled\" />\r\n                    </Picker>\r\n                    <Text style={{marginLeft:200,fontWeight:'bold'}}>Quận/Huyện : </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.districtSelected}\r\n                        style={styles.requestTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            districtSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}                    \r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        {this.state.districtsList?this.state.districtsList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />\r\n                        )):null}\r\n                    </Picker>\r\n                </View>\r\n                <View style={styles.requestListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getRequestShowList()?this.getRequestShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.requestListFlatListArea}>\r\n                <FlatList style={styles.requestListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    // showsVerticalScrollIndicator={false}\r\n                    data={this.getRequestShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <RequestListViewItem\r\n                                    requestId={item.requestID}\r\n                                    requestCreatedTime={item.requestCreatedTime}\r\n                                    customerName={item.customerName}\r\n                                    customerPhoneNumber={item.customerPhoneNumber}\r\n                                    customerDOB={item.customerDOB}\r\n                                    requestAddress={item.requestAddress}\r\n                                    requestDistrictName={item.requestDistrictName}\r\n                                    requestTownName={item.requestTownName}\r\n                                    requestMeetingTime={item.requestMeetingTime}\r\n                                    nurseName={item.nurseName}\r\n                                    nurseID={item.nurseID}\r\n                                    lsSelectedTest={item.lsSelectedTest}\r\n                                    requestAmount={item.requestAmount}\r\n                                    requestStatus={item.requestStatus}\r\n                                    requestTestVersion={item.versionOfTest}\r\n                                    testVersion={this.props.testVersion}\r\n                                    testList={this.state.testsList} \r\n                                    token={this.props.token}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedRequest={this.props.setSelectedRequest?this.props.setSelectedRequest: null}         \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestListTopMenuArea: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n        paddingTop:10,\r\n    },\r\n    requestListTopMenuContainer: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:10,\r\n        paddingLeft:200,\r\n        paddingRight:200\r\n    },\r\n    requestTypeDropdown:{\r\n        height: 35, \r\n        width: 300,\r\n        borderRadius:5,\r\n        backgroundColor: 'white',\r\n        color:'black'\r\n    },\r\n    requestListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    requestListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, Text, TextInput, ScrollView, TouchableOpacity} from 'react-native';\r\nimport {convertMoney} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class RequestTestViewItem extends Component {\r\n    \r\n    componentDidMount(){\r\n        // console.log(this.props.testID+' '+this.props.index+' '+this.props.countHide+' '+this.props.math+this.props.backgroundColor)\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <View style={[styles.testItem,{\r\n                backgroundColor:this.props.backgroundColor?this.props.backgroundColor:'white',    \r\n            }]}>\r\n                <View style={styles.testName}>\r\n                    <Text style={{fontSize:15,color:'#25345d'}} >{this.props.testName}</Text>\r\n                </View>\r\n                <View style={styles.testPrice}>\r\n                    <Text style={{fontSize:15,color:'#25345d'}}  >{convertMoney(this.props.testPrice)}</Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testItem:{\r\n        height:45,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        //borderWidth:1,\r\n        //borderColor:'#25345d',\r\n    },\r\n    testName:{\r\n        width: 500,\r\n        height:29,\r\n        paddingLeft:5,\r\n        paddingRight:5,\r\n        paddingTop:3\r\n    },\r\n    testPrice:{\r\n        width: 100,\r\n        height:15,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        marginBottom:2,\r\n        paddingRight:10\r\n    }\r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, Text, TextInput, ScrollView, TouchableOpacity, FlatList, Alert} from 'react-native';\r\nimport RequestTestViewItem from './RequestTestViewItem'\r\nimport {convertMoney} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class RequestTestCategoryItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={        \r\n            visible: false\r\n        }\r\n        this.isVisible = this.isVisible.bind(this);\r\n    }\r\n\r\n    isVisible(){\r\n        let result = false;\r\n        this.props.test.forEach(test => {\r\n            this.props.isSelected(test.testID) == true ? result=true : '';  \r\n        });\r\n        return result;\r\n    }\r\n\r\n    render(){\r\n        const testList = this.props.test;\r\n        let countHide = 0;\r\n        return(\r\n            <View>\r\n            {this.isVisible() ?\r\n            <View>\r\n                <View style={styles.testCategoryItem}  >\r\n                    <View style={styles.testCategoryNameContainer}>\r\n                        <Text style={{fontSize:17,color:''}} >{this.props.categoryName}</Text>\r\n                    \r\n                    </View>\r\n                </View>\r\n                <FlatList \r\n                    style ={styles.TestListAreaScrollView}                        \r\n                    showsVerticalScrollIndicator={false}\r\n                    scrollEnabled={false}\r\n                    data={testList}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item, index}) => {\r\n                            this.props.isSelected(item.testID) ?  null : countHide+=1 ;\r\n                            return ( \r\n                                <View>                                 \r\n                                { this.props.isSelected(item.testID) ?\r\n                                    // <View style={[styles.testItem,{\r\n                                    //     backgroundColor:(parseInt(index)-countHide) % 2 == 0 ? '#EEE': '#FFF',    \r\n                                    // }]}>\r\n                                    //     <View style={styles.testName}>\r\n                                    //         <Text style={{fontSize:15,color:'#25345d'}} >{item.testName}</Text>\r\n                                    //     </View>\r\n                                    //     <View style={styles.testPrice}>\r\n                                    //         <Text style={{fontSize:15,color:'#25345d'}}  >{convertMoney(item.price)}</Text>\r\n                                    //     </View>\r\n                                    // </View>\r\n\r\n                                    <RequestTestViewItem \r\n                                    testName={item.testName}\r\n                                    testPrice={item.price}\r\n                                    testID={item.testID}\r\n                                    // backgroundColor={(parseInt(index)-countHide) % 2 === 0 ? '#EEE': '#FFF'}\r\n                                    backgroundColor='white'\r\n                                    countHide={countHide}\r\n                                    index={index}\r\n                                    math={(parseInt(index)-countHide) % 2 }\r\n                                    /> \r\n                                    : null}    \r\n                                </View>                          \r\n                            );\r\n                        }}\r\n                />\r\n            </View> \r\n            : null }\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testCategoryItem:{\r\n        height:50,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n        borderColor:'#25345d',\r\n              \r\n    },\r\n    TestListAreaScrollView:{\r\n        width: '100%',\r\n        flex:1,\r\n        backgroundColor:'white',\r\n        borderRadius:10,\r\n    },\r\n    testCategoryNameContainer:{\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        height:35,\r\n        paddingLeft:5,\r\n        paddingRight:5,   \r\n    },\r\n    testItem:{\r\n        height:45,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        //borderWidth:1,\r\n        //borderColor:'#25345d',\r\n    },\r\n    testName:{\r\n        width: 500,\r\n        height:29,\r\n        paddingLeft:5,\r\n        paddingRight:5,\r\n        paddingTop:3\r\n    },\r\n    testPrice:{\r\n        width: 100,\r\n        height:15,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        marginBottom:2,\r\n        paddingRight:10\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport {getApiUrl, getStateName} from './../Common/CommonFunction'\r\nimport RequestTestCategoryItem from './RequestTestCategoryItem'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class RequestView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {        \r\n            testList: this.props.testList,\r\n        };\r\n        this.isSelected = this.isSelected.bind(this)\r\n        this.getLeftButtonName = this.getLeftButtonName.bind(this)\r\n        this.getRightButtonName = this.getRightButtonName.bind(this)\r\n        this.onLeftButtonPress = this.onLeftButtonPress.bind(this)\r\n        this.onRightButtonPress = this.onRightButtonPress.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n    \r\n    isSelected(id) {\r\n        const found = this.props.request?this.props.request.lsSelectedTest.findIndex(test => test == id) : -1;\r\n        let result = false;\r\n        found === -1 ? '' : result = true;\r\n        return result;\r\n    }\r\n\r\n    \r\n    onTakingSample(){\r\n        fetch(getApiUrl()+\"/requests/update/\"+this.props.request.requestId, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    status: 'waitingforresult',\r\n                    userID: this.props.userInfo.id,\r\n                    note: 'Coordinator have take this request',\r\n                }),\r\n                })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                this.props.changeShowView('RequestListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    onLostSample(){\r\n        this.props.changeShowView('RequestLostSampleView')\r\n    }\r\n\r\n    onUpdateResult(){\r\n        this.props.changeShowView('RequestUpdateResultView')\r\n    }\r\n\r\n    getLeftButtonName(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                return '';\r\n                break;\r\n            case 'waitingforresult':\r\n                return 'Làm mất mẫu';\r\n                break;            \r\n            default: '';\r\n        }\r\n    }\r\n\r\n    getRightButtonName(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                return 'Xác nhận lấy mẫu';\r\n                break;\r\n            case 'waitingforresult':\r\n                return 'Cập nhật kết quả';\r\n                break;            \r\n            default: ''\r\n        }\r\n    }\r\n\r\n\r\n    onLeftButtonPress(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                \r\n                break;\r\n            case 'waitingforresult':\r\n                this.onLostSample();\r\n                break;\r\n        }\r\n    }\r\n\r\n    onRightButtonPress(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                this.onTakingSample();\r\n                break;\r\n            case 'waitingforresult':\r\n                this.onUpdateResult();\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Chi tiết đơn yêu cầu xét nghiệm</Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>      \r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestId:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                        \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerName:''}</Text>    \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Địa chỉ nhận đơn: </Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestAddress+', '+this.props.request.requestTownName+', '+this.props.request.requestDistrictName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Trạng thái: </Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.request?getStateName(this.props.request.requestStatus):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <FlatList\r\n                                style={styles.rowFlatList}\r\n                                showsVerticalScrollIndicator={false}\r\n                                scrollEnabled={false}\r\n                                data={this.props.request?this.props.request.testList:[]}\r\n                                keyExtractor={(item, index) => index.toString()}\r\n                                renderItem={({ item }) => {\r\n                                    return (\r\n                                        <RequestTestCategoryItem\r\n                                            categoryName={item.testTypeName}\r\n                                            test={item.listTest}\r\n                                            isSelected={this.isSelected}\r\n                                        >\r\n                                        </RequestTestCategoryItem>\r\n                                    );\r\n                                }}\r\n                            >\r\n                        </FlatList>\r\n                    </View>\r\n                    {/* <View style={[styles.requestRowContainer,{justifyContent: 'center',}]}>\r\n                        <Image \r\n                            style={styles.rowImage}\r\n                            source={{ uri: this.props.request?this.props.request.requestImageUrl:'' }}\r\n                            >\r\n                        </Image>\r\n                    </View>         */}\r\n                </View>\r\n\r\n                <View style={styles.buttonArea}>\r\n                    {!this.getLeftButtonName(this.props.request?this.props.request.requestStatus:'') ==''?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onLeftButtonPress(this.props.request?this.props.request.requestStatus:'')}>\r\n                        <Text style={{color:'white'}}>{this.getLeftButtonName(this.props.request?this.props.request.requestStatus:'')}</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>\r\n                    }\r\n                    {!this.getRightButtonName(this.props.request?this.props.request.requestStatus:'')==''?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onRightButtonPress(this.props.request?this.props.request.requestStatus:'')}>\r\n                        <Text style={{color:'white'}}>{this.getRightButtonName(this.props.request?this.props.request.requestStatus:'')}</Text>\r\n                    </TouchableOpacity>  \r\n                    :<View/>\r\n                    }\r\n                </View>\r\n\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:10,\r\n        marginBottom:-20,\r\n    },\r\n    requestArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:17,\r\n        fontWeight:'bold',\r\n        backgroundColor:''\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n    },\r\n    rowFlatList: {\r\n        width: '100%',\r\n        alignSelf: 'stretch',\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        // borderRadius: 10,\r\n        marginTop: 5,\r\n        backgroundColor:'gray'\r\n    },\r\n    rowImage:{\r\n        width:400,\r\n        height:400,\r\n        backgroundColor:'red'\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\n\r\nexport default class RequestLostSampleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            reason: '',\r\n            error: '',\r\n            errorList: ['','Phải điền lý do làm mất mẫu'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.lostSample = this.lostSample.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    lostSample(){\r\n        if(this.checkValid()){\r\n            this.callApiLostSample()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.reason == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiLostSample(){\r\n        fetch(getApiUrl()+'/requests/update/'+this.props.request.requestId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            status: 'coordinatorlostsample',\r\n            userID: this.props.userInfo.id,\r\n            note: this.state.reason,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=result.success : null;\r\n                if (success) \r\n                this.props.changeShowView('RequestListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Báo mất mẫu xét nghiệm: </Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>   \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>        \r\n                        <Text style={styles.rowText}>{this.props.request?this.props.request.requestId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowText,{width:300}]}>{this.props.request?this.props.request.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{'Lý do mất mẫu: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Điền lý do làm mất mẫu'}\r\n                            name={\"reason\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reason}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.requestConfirmButton} onPress={() => this.props.changeShowView('RequestView')}>\r\n                        <Text>Quay lại</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.requestConfirmButton} onPress={() => this.lostSample()}>\r\n                        <Text>Báo mất mẫu</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    requestArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n    },\r\n    requestTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    requestConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nexport default class RequestUpdateResultView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            // imageUriList: [{'image':'https://znews-photo.zadn.vn/w1024/Uploaded/jgtnrz/2020_03_23/Rebel_4.jpeg'}],\r\n            imageUriList: [],\r\n            requestTitle: '',\r\n            requestShortContent: '',\r\n            requestContent: '',\r\n            error: '',\r\n            errorList: ['','Bài viết chưa có ảnh min họa'],\r\n\r\n        };\r\n        this.selectPicture = this.selectPicture.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.completeUpdateResult = this.completeUpdateResult.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    completeUpdateResult(){\r\n        if(this.checkValid()){\r\n            this.callApiSetResultImage()\r\n            // this.callApiUpdateRequest()\r\n        }\r\n    }\r\n\r\n    checkValid(){  \r\n        if (this.state.imageUriList.length == 0) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiUpdateRequest(){\r\n        fetch(getApiUrl()+'/requests/update/'+this.props.request.requestId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            status: 'closed',\r\n            userID: this.props.userInfo.id,\r\n            note: 'Đã cập nhật kết quả',\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=true : null;\r\n                if (success) \r\n                this.props.changeShowView('RequestListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    selectPicture = async () =>{\r\n        // console.log(result)\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                // this.callApiSetResultImage(result.uri)\r\n                let tempList = this.state.imageUriList\r\n                tempList.push({'image':result.uri})\r\n                // console.log(tempList)\r\n                this.setState({ imageUriList: tempList });   \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    callApiSetResultImage(){\r\n        let imageList = []\r\n        let index = this.state.imageUriList.length - 1;\r\n        while (index >= 0) {\r\n            imageList.push(this.state.imageUriList[index].image)\r\n            index-=1\r\n        }\r\n        console.log(imageList)\r\n        fetch(getApiUrl()+'/requests/detail/results/add', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            listImage: imageList,\r\n            userID: this.props.userInfo.id,\r\n            requestID: this.props.request.requestId\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=true : null;   \r\n                if(success){\r\n                    this.callApiUpdateRequest()\r\n                }  \r\n                        \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestAddViewArea}>\r\n            <View style={styles.requestAddTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Thêm kết quả xét nghiệm: </Text>                \r\n            </View>\r\n            <View style={styles.requestAddArea}>\r\n                <View style={styles.requestAddContainer}>                    \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>        \r\n                        <Text style={styles.rowText}>{this.props.request?this.props.request.requestId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowText,{width:300}]}>{this.props.request?this.props.request.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh kết quả: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    {this.state.imageUriList.length==0?null:\r\n                    this.state.imageUriList.map(imageUri => (                        \r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Text style={[styles.rowText,{fontSize:15,width:600,paddingTop:3}]}>{' '+imageUri.image}</Text>\r\n                        </View>\r\n                        <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: imageUri.image}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    ))\r\n                    }\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.requestAddConfirmButton} onPress={() => this.completeUpdateResult()}>\r\n                    <Text>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestAddViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestAddTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    requestAddArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestAddContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n    },\r\n    requestTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    requestAddConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getAppointmentStateName, getStateColor} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            testPrice: this.props.testPrice,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                testPrice: this.props.testPrice\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.props.updatePrice?this.props.updatePrice(this.props.testId,value):null\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(        \r\n            <View style={styles.testListItem}>  \r\n                <View style={[styles.testTextContainer,{marginTop:5,}]}>  \r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Loại Test: </Text>\r\n                    </View>\r\n                    <View style={styles.testListSecondColumnContainer}>\r\n                        <Text style={{fontSize:17}}>{this.props.testTypeName}</Text>\r\n                    </View>\r\n                </View>                               \r\n                <View style={styles.testTextContainer}>           \r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Tên Test: </Text>\r\n                    </View>\r\n                    <View style={styles.testListSecondColumnContainer}>\r\n                        <Text style={{fontSize:17}}>{this.props.testName}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={[styles.testTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Giá tiền: </Text>\r\n                    </View>\r\n                    <TextInput style={styles.rowTextInput}\r\n                        placeholder={'nhập giá tiền (VNĐ)'}\r\n                        name={\"testPrice\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.testPrice.toString()}\r\n                        >   \r\n                    </TextInput>\r\n                </View>                     \r\n            </View>      \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    testListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    testTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:20,\r\n        paddingRight:10,\r\n        paddingBottom:5,\r\n        paddingTop:5,\r\n    },\r\n    testListFirstColumnContainer:{\r\n        width:100,\r\n    },\r\n    testListSecondColumnContainer:{\r\n        width:500,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 100,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput} from 'react-native';\r\nimport TestListItem from './TestListItem'\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class TestUpdateView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            versionSelected:'2',\r\n            versionCreatedTime: null,\r\n            versionCreatorName: null,\r\n            testTypeSelected: 'none',\r\n            testTypeSelectedForCreate: 'none',\r\n            dataChanged: true,\r\n            testList: [],\r\n            testListTemp: [],\r\n            versionList: null,\r\n            testName: '',\r\n            testPrice: '',\r\n            newTestId: 1,\r\n            error: '',\r\n            errorList: ['','Phải chọn loại xét nghiệm','Phải điền tên xét nghiệm', 'Phải điền giá xét nghiệm'],\r\n        };\r\n        this.createTest = this.createTest.bind(this)\r\n        this.handleChange= this.handleChange.bind(this)\r\n        this.getTestList = this.getTestList.bind(this)\r\n        this.updatePrice = this.updatePrice.bind(this)\r\n        this.setSelectedVersion = this.setSelectedVersion.bind(this)\r\n        this.callApiUpdateVersion = this.callApiUpdateVersion.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.callApiGetVersionList()\r\n        // this.callApiGetTestList()\r\n    }\r\n\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                // testList: this.props.testList,\r\n                // testListTemp: this.props.testList,\r\n            }));\r\n        }\r\n    }\r\n\r\n    callApiGetVersionList(){\r\n        fetch(getApiUrl()+\"/tests/versions/list\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success){\r\n                    this.setState(previousState => ({\r\n                        versionList: result,\r\n                        versionSelected: result[0].versionID,\r\n                        versionCreatedTime: result[0].createdTime,\r\n                        versionCreatorName: result[0].creatorName,\r\n                    }));\r\n                    this.callApiGetTestList()\r\n                }\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n\r\n    createTest(){\r\n        if(this.checkValid()){\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.testListTemp[index].testTypeID == this.state.testTypeSelectedForCreate) {\r\n                    let testList = this.state.testListTemp[index].listTest\r\n                    let newTest = {\r\n                        'testID':(\"new\"+this.state.newTestId),\r\n                        'testName':this.state.testName,                   \r\n                        'price':this.state.testPrice,\r\n                        'testTypeID': this.state.testTypeSelectedForCreate,\r\n                        'testTypeName': this.state.testListTemp[index].testTypeName,\r\n                        }\r\n                    testList.push(newTest)\r\n\r\n                    // let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                    // while(indexTest >= 0){\r\n                    //     var test = this.state.testListTemp[index].listTest[indexTest]\r\n                    //     test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                    //     result.push(test)\r\n                    //     indexTest -=1;\r\n                    // }\r\n                }\r\n                index -= 1;   \r\n            } \r\n        }    \r\n    }\r\n    \r\n    checkValid(){        \r\n        if (this.state.testTypeSelectedForCreate == 'none') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.testName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.testPrice == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiUpdateVersion  = async () => {\r\n        let result = []\r\n        let index = this.state.testListTemp.length - 1;\r\n        while (index >= 0) {\r\n            let indexTest = this.state.testListTemp[index].listTest.length -1\r\n            while(indexTest >= 0){     \r\n                var test = this.state.testListTemp[index].listTest[indexTest]           \r\n                result.push(test)\r\n                indexTest -=1;\r\n            }\r\n            index -= 1;\r\n        }        \r\n        console.log(result)\r\n        fetch(getApiUrl()+'/tests/versions/upgrade-version', {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            creatorID: this.props.userInfo.id,\r\n            lsInputTest: result,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                this.callApiGetVersionList()\r\n                // this.callApiGetTestList()\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    updatePrice(testId,newPrice){\r\n        let result = []\r\n        let index = this.state.testListTemp.length - 1;\r\n        while (index >= 0) {\r\n            var testType = this.state.testListTemp[index]\r\n            let testList = []\r\n            let indexTest = this.state.testListTemp[index].listTest.length -1\r\n            while(indexTest >= 0){\r\n                var test = this.state.testListTemp[index].listTest[indexTest]\r\n                if (test.testID == testId){\r\n                    test.price = newPrice\r\n                } \r\n                testList.push(test)               \r\n                indexTest -=1;\r\n            }\r\n            testType['listTest'] = testList;\r\n            result.push(testType)\r\n            index -= 1;            \r\n        }      \r\n        // console.log(this.state.testListTemp)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    setSelectedVersion(versionId){\r\n        let index = this.state.versionList.length -1\r\n        while(index >= 0){\r\n            var version = this.state.versionList[index]\r\n            if (version.versionID == versionId){\r\n                this.setState({\r\n                    versionSelected: versionId,\r\n                    versionCreatedTime: version.createdTime,\r\n                    versionCreatorName: version.creatorName,\r\n                })\r\n            }     \r\n            index -= 1;\r\n        }      \r\n        this.callApiGetTestList(versionId)\r\n        \r\n        \r\n    }\r\n\r\n    callApiGetTestList(version){\r\n        let url = ''\r\n        if (version) url =  getApiUrl()+\"/tests/versions/list-all-test/\"+version\r\n        else url =  getApiUrl()+\"/tests/versions/lastest-version-test/\"\r\n        fetch(url,{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                let list = []\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                {\r\n                    this.setState(previousState => ({\r\n                        testList: result.lsTests ,\r\n                        testListTemp: result.lsTests ,\r\n                    }));\r\n                }\r\n                else \r\n                this.setState(previousState => ({\r\n                        testList: [],\r\n                        testListTemp: [],\r\n                    }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n\r\n    }\r\n\r\n    getTestList(){\r\n        if (this.state.testTypeSelected =='none'){\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                while(indexTest >= 0){\r\n                    var test = this.state.testListTemp[index].listTest[indexTest]\r\n                    test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                    result.push(test)\r\n                    indexTest -=1;\r\n                }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        else{\r\n            // console.log(this.state.testTypeSelected)\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n                if (this.state.testListTemp[index].testTypeID == this.state.testTypeSelected) {\r\n                    let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                    while(indexTest >= 0){\r\n                        var test = this.state.testListTemp[index].listTest[indexTest]\r\n                        test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                        result.push(test)\r\n                        indexTest -=1;\r\n                    }\r\n                }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        return this.state.testList\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.testUpdateViewArea}>\r\n            <View style={styles.testUpdateMenuArea}>\r\n                <Picker\r\n                    selectedValue={this.state.versionSelected}\r\n                    style={styles.versionDropdown}\r\n                    onValueChange={(itemValue, itemIndex) => this.setSelectedVersion(itemValue)}                    \r\n                    >\r\n                    {this.state.versionList?this.state.versionList.map(version => (\r\n                        <Picker.Item label={version.versionID} value={version.versionID} key={version.versionID}/>\r\n                    )):null}\r\n                </Picker> \r\n                <View style={{flexDirection: 'row',}}>\r\n                    <Text style={[styles.rowText,{width:79,fontWeight:'bold'}]}>{\"Cập nhật: \"}</Text>\r\n                    <Text style={[styles.rowText,{width:173}]}>{(this.state.versionCreatedTime?convertDateTimeToDate(this.state.versionCreatedTime)+\"   \"+convertDateTimeToTime(this.state.versionCreatedTime):'')}</Text>   \r\n                </View>\r\n                <View style={{flexDirection: 'row',}}>\r\n                    <Text style={[styles.rowText,{width:133,fontWeight:'bold'}]}>{\"Người cập nhật: \"}</Text>  \r\n                    <Text style={[styles.rowText,{width:200}]}>{(this.state.versionCreatorName?this.state.versionCreatorName:'')}</Text> \r\n                </View>\r\n                 \r\n                <TouchableOpacity style={styles.testUpdateConfirmButton} onPress={() => this.callApiUpdateVersion()}>\r\n                    <Text style={{color:'white'}}>Cập nhật</Text>\r\n                </TouchableOpacity>  \r\n            </View>\r\n            \r\n            <View style={styles.testUpdateArea}>\r\n                <View style={styles.testUpdateContainer}>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={[styles.rowText,{fontWeight:'bold'}]}>Loại test: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.testTypeSelectedForCreate}\r\n                            style={styles.testTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                testTypeSelectedForCreate:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label=\"Chọn loại xét nghiệm\" value=\"none\" key='none'/>\r\n                            {this.state.testList?this.state.testList.map(testType => (\r\n                                <Picker.Item label={testType.testTypeName} value={testType.testTypeID} key={testType.testTypeID}/>\r\n                            )):null}\r\n                        </Picker>\r\n                        <TouchableOpacity style={styles.createTestButton} onPress={() => this.createTest()}>\r\n                            <Text style={{color:'white'}}>Tạo bài test</Text>\r\n                        </TouchableOpacity>   \r\n                    </View>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={[styles.rowText,{fontWeight:'bold'}]}>Tên test:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên bài test'}\r\n                            name={\"testName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.testName}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={[styles.rowText,{fontWeight:'bold'}]}>Giá tiền:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập giá tiền (VNĐ)'}\r\n                            name=\"testPrice\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.testPrice}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n\r\n            <View style={styles.testUpdateMenuArea}>\r\n                <Picker\r\n                    selectedValue={this.state.testTypeSelected}\r\n                    style={styles.testTypeDropDown}\r\n                    onValueChange={(itemValue, itemIndex) => this.setState({\r\n                        testTypeSelected:itemValue,\r\n                        dataChanged: !this.state.dataChanged,\r\n                    })}                    \r\n                    >\r\n                    <Picker.Item label=\"Chọn loại xét nghiệm\" value=\"none\" key='none'/>\r\n                    {this.state.testList?this.state.testList.map(testType => (\r\n                        <Picker.Item label={testType.testTypeName} value={testType.testTypeID} key={testType.testTypeID}/>\r\n                    )):null}\r\n                </Picker>\r\n                \r\n                <Text style={[styles.rowText,{width:500}]}>Số lượng: {this.getTestList()?this.getTestList().length:'0'}</Text>\r\n                \r\n            </View>\r\n\r\n            <View style={styles.testListFlatListArea}>        \r\n                <FlatList style={styles.testListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getTestList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <TestListItem\r\n                                    testId={item.testID}       \r\n                                    testName={item.testName}                             \r\n                                    testPrice={item.price}\r\n                                    testTypeId={item.testTypeID}  \r\n                                    testTypeName={item.testTypeName}  \r\n                                    updatePrice={this.updatePrice}                                                                   \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testUpdateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    testUpdateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    versionDropdown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 200,\r\n        borderRadius:5,\r\n        marginRight:30,\r\n    },\r\n    testUpdateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    testUpdateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    testUpdateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        \r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    testTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    testUpdateConfirmButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:50,\r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    testListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    testListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions} from 'react-native';\r\n\r\nimport PageHeader from './PageHeader'\r\nimport PageFooter from './PageFooter'\r\n\r\nimport AccountListView from './AccountManagement/AccountListView'\r\nimport AccountCreateView from './AccountManagement/AccountCreateView'\r\nimport AccountView from './AccountManagement/AccountView'\r\nimport AccountChangePasswordView from './AccountManagement/AccountChangePasswordView'\r\n\r\n\r\nimport AppointmentListView from './Appointment/AppointmentListView'\r\nimport AppointmentView from './Appointment/AppointmentView'\r\nimport AppointmentRejectView from './Appointment/AppointmentRejectView'\r\n\r\nimport ArticleListView from './Article/ArticleListView'\r\nimport ArticleAddView from './Article/ArticleAddView'\r\nimport ArticleView from './Article/ArticleView'\r\n\r\nimport LoginView from './Authentication/LoginView'\r\n\r\nimport RequestListView from './Request/RequestListView'\r\nimport RequestView from './Request/RequestView'\r\nimport RequestLostSampleView from './Request/RequestLostSampleView'\r\nimport RequestUpdateResultView from './Request/RequestUpdateResultView'\r\n\r\nimport TestUpdateView from './Test/TestUpdateView'\r\n\r\nimport {getApiUrl} from './Common/CommonFunction'\r\nimport userList  from './../Data/userList'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            //screen function\r\n            Button1Selected: true,\r\n            Button2Selected: false,\r\n            Button3Selected: false,\r\n            Button4Selected: false,\r\n            Button5Selected: false,\r\n            dataChanged: true,\r\n            showView: 'RequestListView',\r\n\r\n            //authentication\r\n            logIn: false,\r\n            userInfo: null,\r\n            // logIn: true,\r\n            // userInfo: userList[0],\r\n            token: '',\r\n            \r\n            //request\r\n            requestList: null,\r\n            selectedRequest: null,\r\n\r\n            //appointment\r\n            appointmentList: null,\r\n            selectedAppointment: null,\r\n\r\n            //article\r\n            articlesList: null,\r\n            selectedArticle : null,\r\n\r\n            //test\r\n            testList: [],\r\n            testVersion: '',\r\n\r\n            //account\r\n            userList: null,\r\n            selectedAccount: null,\r\n\r\n            //other data\r\n            districtList: null,\r\n\r\n        };\r\n        this.loginSuccess = this.loginSuccess.bind(this)\r\n        this.logOut = this.logOut.bind(this)\r\n        this.searchRequest = this.searchRequest.bind(this)\r\n        this.menuButtonPress = this.menuButtonPress.bind(this)\r\n        this.changeShowView = this.changeShowView.bind(this)\r\n        this.setSelectedArticle = this.setSelectedArticle.bind(this)\r\n        this.setSelectedRequest = this.setSelectedRequest.bind(this)\r\n        this.setSelectedAppointment = this.setSelectedAppointment.bind(this)\r\n        this.setSelectedAccount = this.setSelectedAccount.bind(this)\r\n        this.updateUserInfo = this.updateUserInfo.bind(this)\r\n        \r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        // console.log(this.state.userInfo)\r\n        // this.callApiRequestList()\r\n        // this.callApiTestList()\r\n        // this.callApiArticleList()\r\n        // this.callApiUserList()\r\n        // this.callApiAppointmentList()\r\n        // this.callApiDistrictList()\r\n        // setInterval(()=>{\r\n        //     console.log('try again')\r\n        //     this.callApiRequestList()\r\n        //     this.callApiArticleList()\r\n        //     this.callApiUserList()\r\n        //     this.callApiAppointmentList()\r\n        // },5000)\r\n    }\r\n\r\n    changeShowView(newView){\r\n        if (newView=='RequestListView') this.menuButtonPress('1')\r\n        if (newView=='AppointmentListView') this.menuButtonPress('2')\r\n        if (newView=='ArticleListView') this.menuButtonPress('3')\r\n        if (newView=='AccountListView') this.menuButtonPress('5')\r\n        this.setState(previousState => ({ \r\n            showView: newView,\r\n        }))\r\n    }\r\n\r\n    setSelectedArticle(_article){        \r\n        this.setState(previousState => ({ \r\n            selectedArticle: _article,\r\n        }))\r\n    }\r\n\r\n    setSelectedRequest(_request){        \r\n        this.setState(previousState => ({ \r\n            selectedRequest: _request,\r\n        }))\r\n    }\r\n\r\n    setSelectedAppointment(_appointment){    \r\n        // console.log(_appointment)    \r\n        this.setState(previousState => ({ \r\n            selectedAppointment: _appointment,\r\n        }))\r\n    }\r\n\r\n    setSelectedAccount(_account){ \r\n        // console.log(_account)       \r\n        this.setState(previousState => ({ \r\n            selectedAccount: _account,\r\n        }))\r\n    }\r\n\r\n    updateUserInfo(_userInfo){\r\n        this.setState(previousState => ({ \r\n            userInfo: _userInfo,\r\n        }))\r\n    }\r\n\r\n    searchRequest(requestId){\r\n        console.log(requestId)\r\n        let request = null\r\n        let index = this.state.requestList.length - 1;\r\n        while (index >= 0) {\r\n            // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n            if (this.state.requestList[index].requestID == requestId) {\r\n                request = this.state.requestList[index]\r\n                console.log(request)\r\n                if(this.state.testVersion != request.versionOfTest){\r\n                    fetch(getApiUrl()+\"/tests/versions/list-all-test/\"+request.versionOfTest,{\r\n                        method: 'GET',\r\n                        headers: {\r\n                            Accept: 'application/json',\r\n                            'Content-Type': 'application/json',\r\n                            Authorization: 'Bearer '+this.state.token,\r\n                        }\r\n                    })\r\n                    .then(res => res.json())\r\n                    .then(\r\n                        (result) => {\r\n                            console.log(result)\r\n                            let success = false\r\n                            let list = []\r\n                            result ? result.message? null : success=true : null;\r\n                            if (success)\r\n                            {\r\n                                this.changeToRequestViewScreen(request,result.lsTests)\r\n                                return false\r\n                            }\r\n                        },            \r\n                        (error) => {\r\n                            console.log(error)\r\n                        }\r\n                    )  \r\n                }\r\n                else this.changeToRequestViewScreen(request,this.state.testList);\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    changeToRequestViewScreen(_request,testList){\r\n        const request= { \r\n            \"requestId\": _request.requestID,\r\n            \"requestCreatedTime\":_request.requestCreatedTime,\r\n            \"customerName\":_request.customerName,\r\n            \"customerPhoneNumber\":_request.customerPhoneNumber,\r\n            \"customerDOB\":_request.customerDOB,\r\n            \"requestAddress\":_request.requestAddress,\r\n            \"requestDistrictName\":_request.requestDistrictName,\r\n            \"requestTownName\": _request.requestTownName,\r\n            \"requestMeetingTime\": _request.requestMeetingTime,\r\n            \"nurseName\":_request.nurseName,\r\n            \"nurseID\":_request.nurseID,\r\n            \"lsSelectedTest\":_request.lsSelectedTest,\r\n            \"requestAmount\":_request.requestAmount,\r\n            \"requestStatus\":_request.requestStatus,\r\n            \"testList\":testList,\r\n            \"requestTestVersion\":_request.versionOfTest,\r\n            }\r\n        this.setSelectedRequest(request)\r\n        this.changeShowView('RequestView')\r\n    }\r\n\r\n    loginSuccess(_userInfo,_token){\r\n        this.setState(previousState => ({ \r\n            logIn: true,\r\n            userInfo: _userInfo,\r\n            token: _token,\r\n        }))\r\n        setTimeout(() => {\r\n            this.callApiRequestList()\r\n            this.callApiTestList()\r\n            this.callApiArticleList()\r\n            this.callApiUserList()\r\n            this.callApiAppointmentList()\r\n            this.callApiDistrictList()\r\n        }, 10);\r\n    }\r\n\r\n    logOut(){\r\n        this.setState(previousState => ({ \r\n            logIn: false,\r\n            userInfo: null,\r\n            token: null,\r\n        }))\r\n    }\r\n\r\n    menuButtonPress(button){\r\n        if (button==\"1\") this.callApiRequestList()\r\n        if (button==\"2\") this.callApiAppointmentList()\r\n        if (button==\"3\") this.callApiArticleList()\r\n        if (button==\"5\") this.callApiUserList()\r\n        this.setState(previousState => ({ \r\n            Button1Selected: button==\"1\"?true:false,\r\n            Button2Selected: button==\"2\"?true:false,\r\n            Button3Selected: button==\"3\"?true:false,\r\n            Button4Selected: button==\"4\"?true:false,\r\n            Button5Selected: button==\"5\"?true:false,\r\n            showView:   button==\"1\"? 'RequestListView': \r\n                        button==\"2\"? 'AppointmentListView': \r\n                        button==\"3\"? 'ArticleListView':  \r\n                        button==\"4\"? 'TestUpdateView':  \r\n                        button==\"5\"? 'AccountListView': 'RequestListView'\r\n                        ,\r\n            dataChanged: !this.state.dataChanged,\r\n        }))\r\n    }\r\n\r\n\r\n    callApiRequestList= async () => {\r\n        fetch(getApiUrl()+\"/requests/list-all-request\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.state.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    requestList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    callApiAppointmentList= async () =>  {\r\n        fetch(getApiUrl()+\"/appointments/list\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.state.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    appointmentList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    callApiArticleList= async () =>  {\r\n        fetch(getApiUrl()+\"/articles/list\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    articlesList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    callApiUserList= async () =>  {\r\n        fetch(getApiUrl()+\"/users/list-all-user\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.state.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    userList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n    \r\n    callApiTestList = async () => {\r\n        // fetch(getApiUrl()+\"/test-types/type-test\")\r\n        fetch(getApiUrl()+\"/tests/versions/lastest-version-test/\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.state.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    testList: result.lsTests,\r\n                    testVersion: result.versionID\r\n                }));\r\n            },\r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    callApiDistrictList = async () => {\r\n        fetch(getApiUrl()+\"/management/districts/district-town-list\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    districtList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={{flex:1}}>\r\n            <PageHeader userInfo={this.state.userInfo?this.state.userInfo:null} changeShowView={this.state.userInfo?this.changeShowView:null}  setSelectedAccount={this.state.userInfo?this.setSelectedAccount:null} logOut={this.state.userInfo?this.logOut:null} searchRequest={this.searchRequest}/>\r\n            { !this.state.logIn ?\r\n            <LoginView loginSuccess={this.loginSuccess}/>\r\n            :\r\n            <View style={styles.listAreaContainer}>\r\n                <View style={styles.topMenu}>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/parseFloat(5) ,\r\n                        borderWidth: this.state.Button1Selected ? 1:0,\r\n                        backgroundColor: this.state.Button1Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('1')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Yêu cầu xét nghiệm</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/parseFloat(5) ,\r\n                        borderWidth: this.state.Button2Selected ? 1:0,\r\n                        backgroundColor: this.state.Button2Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('2')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Cuộc Hẹn</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/parseFloat(5) ,\r\n                        borderWidth: this.state.Button3Selected ? 1:0,\r\n                        backgroundColor: this.state.Button3Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('3')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Bài đăng</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/parseFloat(5) ,\r\n                        borderWidth: this.state.Button4Selected ? 1:0,\r\n                        backgroundColor: this.state.Button4Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('4')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Test</Text>\r\n                    </TouchableOpacity>\r\n                    {this.state.userInfo.role=='COORDINATOR'? null :\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? 0 : WIDTH/parseFloat(5) ,\r\n                        borderWidth: this.state.Button5Selected ? 1:0,\r\n                        backgroundColor: this.state.Button5Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('5')}\r\n                        >\r\n                        <Text style={styles.topMenuText}>Quản lý tài khoản</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                </View>                \r\n                <View style={{width:'100%',flex:1,backgroundColor:''}}>\r\n                {\r\n                    this.state.showView == 'RequestListView'? \r\n                    <RequestListView requestList={this.state.requestList} testVersion={this.state.testVersion} changeShowView={this.changeShowView} setSelectedRequest={this.setSelectedRequest} districtList={this.state.districtList} token={this.state.token}/>                    \r\n                    // <ArticleAddView  />\r\n                    : this.state.showView == 'AppointmentListView'? \r\n                    <AppointmentListView appointmentList={this.state.appointmentList} changeShowView={this.changeShowView} setSelectedAppointment={this.setSelectedAppointment} districtList={this.state.districtList}/>\r\n                    : this.state.showView == 'ArticleListView'?\r\n                    <ArticleListView  articleList={this.state.articlesList} changeShowView={this.changeShowView} setSelectedArticle={this.setSelectedArticle}/>\r\n                    : this.state.showView == 'TestUpdateView'?\r\n                    <TestUpdateView  testList={this.state.testList} userInfo={this.state.userInfo} token={this.state.token}/>\r\n                    : this.state.showView == 'AccountListView'?\r\n                    <AccountListView userList={this.state.userList}  changeShowView={this.changeShowView} setSelectedAccount={this.setSelectedAccount}/>\r\n                    // sub screen\r\n                    //request\r\n                    : this.state.showView == 'RequestView'?\r\n                    <RequestView  request={this.state.selectedRequest} testList={this.state.testList} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'RequestLostSampleView'?\r\n                    <RequestLostSampleView  request={this.state.selectedRequest} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'RequestUpdateResultView'?\r\n                    <RequestUpdateResultView  request={this.state.selectedRequest} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    //appointment\r\n                    : this.state.showView == 'AppointmentView'?\r\n                    <AppointmentView  appointment={this.state.selectedAppointment} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'AppointmentRejectView'?\r\n                    <AppointmentRejectView appointment={this.state.selectedAppointment} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    //article\r\n                    : this.state.showView == 'ArticleAddView'?\r\n                    <ArticleAddView   token={this.state.token}  userInfo={this.state.userInfo} changeShowView={this.changeShowView} />\r\n                    : this.state.showView == 'ArticleView'?\r\n                    <ArticleView  article={this.state.selectedArticle} />\r\n                    //account\r\n                    : this.state.showView == 'AccountCreateView'?\r\n                    <AccountCreateView  districtList={this.state.districtList} token={this.state.token}/>\r\n                    : this.state.showView == 'AccountView'?\r\n                    <AccountView  districtList={this.state.districtList}  account={this.state.selectedAccount} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo}/>\r\n                    : this.state.showView == 'AccountChangePasswordView'?\r\n                    <AccountChangePasswordView account={this.state.selectedAccount} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo} />\r\n                    : <View/>\r\n                    \r\n                }\r\n                </View>\r\n                <PageFooter/>\r\n            </View>\r\n            }\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst menuHeight= 50\r\n\r\nconst styles = StyleSheet.create({\r\n    listAreaContainer: {\r\n        flex: 1,\r\n        width: Dimensions.get('window').width,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    topMenu:{\r\n        height: menuHeight,\r\n        width: Dimensions.get('window').width,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor:'white'\r\n    },\r\n    topMenuButton:{\r\n        width: Dimensions.get('window').width/parseFloat(5),\r\n        height: menuHeight,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    topMenuText:{\r\n        fontSize:18,\r\n    }\r\n\r\n});\r\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport ListScreen from './components/ListScreen'\n\nexport default function App() {\n  return (\n      <ListScreen/>\n    // <View style={styles.container}>\n    //   <Text>Open up App.js to start working on your app!</Text>\n    // </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/MedTestForCoordinator/expo-service-worker.js', { scope: '/MedTestForCoordinator/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}