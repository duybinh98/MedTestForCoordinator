{"version":3,"sources":["Data/Group 1.png","Data/ABClinic.jpg","Data/userList.js","components/Common/CommonFunction.js","components/PageHeader.js","components/PageFooter.js","components/AccountManagement/AccountListViewItem.js","components/AccountManagement/AccountListView.js","components/AccountManagement/AccountCreateView.js","components/AccountManagement/AccountView.js","components/AccountManagement/AccountChangePasswordView.js","components/Appointment/AppointmentListViewItem.js","components/Appointment/AppointmentListView.js","components/Common/AlertScreen.js","components/Appointment/AppointmentView.js","components/Appointment/AppointmentRejectView.js","components/Article/ArticleListViewItem.js","components/Article/ArticleListView.js","components/Article/ArticleAddView.js","components/Article/ArticleView.js","components/Authentication/LoginView.js","components/Request/RequestListViewItem.js","components/Request/RequestListView.js","components/Request/RequestTestViewItem.js","components/Request/RequestTestCategoryItem.js","components/Request/RequestView.js","components/Request/RequestLostSampleView.js","components/Request/RequestUpdateResultView.js","components/Test/TestListItem.js","components/Test/TestUpdateView.js","components/Common/LoadingView.js","components/ListScreen.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","convertDateTimeToDate","inputString","substring","convertDateTimeToTime","convertDateToDateTime","inputDate","screenWidth","Dimensions","get","width","getRoleName","role","getStateName","status","getAppointmentStateName","ListScreen","props","state","requestId","editProfile","bind","logOut","searchRequest","handleChange","this","userInfo","account","id","phoneNumber","name","dob","address","password","active","email","gender","image","townCode","districtCode","changeShowView","setSelectedAccount","event","target","value","setState","ImageBackground","style","styles","headerContainer","resizeMode","View","leftArea","Image","imageIcon","source","require","leftContainer","titleContainer","Text","fontSize","fontWeight","color","hotlineContainer","middleArea","TextInput","searchInputContainer","placeholder","onChange","onSubmitEditing","rightArea","rightContainer","TouchableOpacity","onPress","height","uri","nameContainer","Component","StyleSheet","create","flexDirection","alignItems","justifyContent","backgroundColor","padding","paddingLeft","marginBottom","borderWidth","marginTop","borderRadius","headerHight","footerContainer","textContainer","middleContainer","paddingRight","alignSelf","AccountListViewItem","onAccountPress","accountId","accountPhoneNumber","accountName","accountDob","accountAddress","accountPassword","accountActive","accountEmail","accountRole","accountGender","accountImageUrl","accountTownCode","accountDistrictCode","accountListItem","accountNameContainer","accountPhoneContainer","accountRoleContainer","paddingBottom","margin","marginRight","AccountListScreen","Button1Selected","Button2Selected","Button3Selected","Button4Selected","accountSelected","inputPhoneNumber","isSearch","userList","dataChanged","menuButtonPress","getAccountShowList","searchUser","result","index","length","push","button","previousState","Button5Selected","prevProps","prevState","articleListArea","accountListTopMenuArea","accountListTopMenuContainer","topMenuTextInput","createNewAccountButton","topMenuButton","roleSelectedColor","topMenuText","articleListFlatListArea","articleListFlatListTitleArea","articleListFlatListTitleContainer","articleListTitleNameContainer","articleListTitleText","articleListTitlePhoneContainer","articleListTitleRoleContainer","FlatList","articleListFlatList","contentContainerStyle","showsVerticalScrollIndicator","data","extraData","keyExtractor","item","toString","renderItem","flex","paddingTop","componentWidth","TestListView","selectPicture","a","async","ImagePicker","console","log","cancelled","callApiUploadImage","accountRePassword","districtList","townList","listTown","districtSelected","townSelected","year","Date","getFullYear","month","getMonth","day","getDate","accountImage","error","errorList","onDistrictChange","createNumberPickerList","getNumberOfDayInMonth","createAccount","districtId","getFebDay","start","end","startToEnd","i","Picker","Item","label","parseInt","checkValid","callApiCreateAccount","fetch","getApiUrl","method","headers","Accept","Authorization","token","body","JSON","stringify","getDob","then","res","json","success","message","_data","accountCreateViewArea","accountCreateMenuArea","rowText","accountCreateArea","accountCreateContainer","imagePreviewArea","accountCreateRowContainer","imagePreview","rowTextInput","selectedValue","accountTypeDropDown","onValueChange","itemValue","itemIndex","secureTextEntry","map","district","districtName","town","townName","rowTextError","accountCreateConfirmButton","createTestButton","marginLeft","accountListFlatListArea","accountListFlatList","addImageButton","updateAccountInformation","resetPassword","checkCurrentUser","checkAdmin","changePassword","userProcessingID","callApiUpdateAccountInfo","updateUserInfo","accountViewArea","accountMenuArea","accountArea","accountContainer","accountRowContainer","rowTextLong","buttonArea","accountOldPassword","callApiChangePassword","url","oldPassword","newPassword","AppointmentListView","onAppointmentPress","appointment","appointmentId","appointmentCreatedTime","customerName","customerPhoneNumber","customerDOB","appointmentMeetingTime","appointmentStatus","setSelectedAppointment","appointmentListItem","appointmentTextContainer","appointmentListFirstColumnContainer","appointmentListSecondColumnContainer","borderStyle","districtsList","statusSelected","testsList","appointmentList","getAppointmentShowList","requestDistrictID","appointment_status","appointmentListArea","appointmentListTopMenuArea","appointmentListTopMenuContainer","appointmentTypeDropdown","appointmentListFlatListArea","appointmentListFlatList","appointment_id","appointment_createdTime","appointment_customerName","appointment_phoneNumber","appointment_DOB","appointment_meetingTime","container","alertContainer","title","content","onCancel","onConfirm","AppointmentView","onAccept","onReject","callApiAcceptAppointment","coordinatorID","note","appointmentViewArea","appointmentTopMenuArea","appointmentArea","appointmentContainer","appointmentRowContainer","rowFirstContainer","rowSecondContainer","AppointmentLostSampleView","reason","rejectAppointment","callApiRejectAppointment","multiline","numberOfLines","appointmentConfirmButton","appointmentTypeDropDown","ArticleListViewItem","onArticlePress","article","articleId","articleTitle","articleContent","articleShortContent","articleImageUrl","userId","articleCreatedTime","creatorName","setSelectedArticle","articleListItem","articleImageContainer","articleImage","articleTextContainer","articleTextContentContainer","articleTitleContainer","articleCreateTimeContainer","articleShortContentContainer","textAlign","articleTextCreatorNameContainer","articleCreatorNameContainer","ArticleListScreen","articleList","onAddArticlePress","articleListTopMenuArea","createNewArticleButton","tittle","shortContent","userID","createdTime","ArticleAddView","imageResultUri","createArticle","callApiCreateArticle","articleAddViewArea","articleAddTopMenuArea","articleAddArea","articleAddContainer","articleAddRowContainer","articleAddConfirmButton","articleTypeDropDown","ArticleView","imageUri","imageType","articleViewArea","articleArea","articleContainer","articleRowContainer","rowImage","articleTopMenuArea","Login","callApiLogin","loginSuccess","loginViewArea","rowContainer","login","loginButton","RequestListPendingItem","onRequestPress","testList","request","requestCreatedTime","requestAddress","requestDistrictName","requestTownName","requestMeetingTime","nurseName","nurseId","coordinatorId","coordinatorName","lsSelectedTest","requestAmount","requestStatus","requestTestVersion","setSelectedRequest","checkVersion","changeToRequestViewScreen","testVersion","lsTests","requestListItem","requestListTextContainer","requestListFirstColumnContainer","requestListSecondColumnContainer","RequestListView","requestList","requestShowList","requestCount","getRequestShowList","requestListArea","requestListTopMenuArea","requestListTopMenuContainer","requestTypeDropdown","requestListFlatListArea","requestListFlatList","requestID","nurseID","versionOfTest","RequestTestViewItem","testItem","testName","testPrice","_price","price","convertMoney","RequestTestCategoryItem","visible","isVisible","test","forEach","isSelected","testID","countHide","testCategoryItem","testCategoryNameContainer","categoryName","TestListAreaScrollView","scrollEnabled","math","borderColor","RequestView","resultList","getLeftButtonName","getRightButtonName","onLeftButtonPress","onRightButtonPress","callApiTakingSample","callApiResultList","findIndex","onLostSample","onTakingSample","onUpdateResult","requestViewArea","requestTopMenuArea","requestArea","requestContainer","requestRowContainer","rowFlatList","testTypeName","listTest","aspectRatio","RequestLostSampleView","lostSample","callApiLostSample","requestConfirmButton","requestTypeDropDown","RequestUpdateResultView","imageUriList","requestTitle","requestShortContent","requestContent","completeUpdateResult","callApiSetResultImage","tempList","imageList","listImage","callApiUpdateRequest","requestAddViewArea","requestAddTopMenuArea","requestAddArea","requestAddContainer","requestAddConfirmButton","updatePrice","testId","testListItem","testTextContainer","testListFirstColumnContainer","testListSecondColumnContainer","TestUpdateView","callApiUpdateVersion","testListTemp","indexTest","creatorID","lsInputTest","callApiGetVersionList","versionSelected","versionCreatedTime","versionCreatorName","testTypeSelected","testTypeSelectedForCreate","testListApi","testVersionApi","versionList","newTestId","createTest","getTestList","setSelectedVersion","versionID","callApiGetTestList","testTypeID","newTest","newPrice","testType","versionId","version","testUpdateViewArea","testUpdateMenuArea","versionDropdown","key","testUpdateConfirmButton","testAddArea","testUpdateContainer","testUpdateRowContainer","testTypeDropDown","testListFlatListArea","testListFlatList","testTypeId","textArea","callApiRequestList","requestListApi","callApiAppointmentList","appointmentListApi","callApiArticleList","articleListApi","callApiUserList","userListApi","callApiTestList","callApiDistrictList","showView","logIn","selectedRequest","selectedAppointment","selectedArticle","selectedAccount","newView","_article","_request","_appointment","_account","_userInfo","userPhoneNumber","changeToAccountViewScreen","_token","setTimeout","listAreaContainer","topMenu","parseFloat","App","navigator","window","addEventListener","serviceWorker","register","scope","info","catch"],"mappings":"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","file":"static/js/app.f7ec0433.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Group 1.656244df.png\";","module.exports = __webpack_public_path__ + \"static/media/ABClinic.013acc21.jpg\";","var userList = [\r\n    {\r\n        \"id\":1,\r\n        \"phoneNumber\":\"0000000000\",\r\n        \"name\":\"Lam Phan\",\r\n        \"dob\":\"1970-01-01T00:00:00.000+0000\",\r\n        \"address\":\"Default-Address\",\r\n        \"password\":\"$2a$10$Rqs8uzm/mZzJHWABOeOi7OuqyPsptBgWNL5k7Cf9bDnWpRL4gSfbW\",\r\n        \"active\":1,\r\n        \"email\":\"medtest.default@gmail.com\",\r\n        \"role\":\"COORDINATOR\",\r\n        \"gender\":0,\r\n        \"image\":\"https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png\",\r\n        \"townCode\":\"T0\",\r\n        \"districtCode\":\"D0\"\r\n    },\r\n    {\r\n        \"id\":2,\r\n        \"phoneNumber\":\"0000000001\",\r\n        \"name\":\"DefaultCoordinator\",\r\n        \"dob\":\"1970-01-01T00:00:00.000+0000\",\r\n        \"address\":\"Default-Address\",\r\n        \"password\":\"$2a$10$Rqs8uzm/mZzJHWABOeOi7OuqyPsptBgWNL5k7Cf9bDnWpRL4gSfbW\",\r\n        \"active\":1,\r\n        \"email\":\"medtest.default@gmail.com\",\r\n        \"role\":\"ADMIN\",\r\n        \"gender\":0,\r\n        \"image\":\"https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png\",\r\n        \"townCode\":\"T0\",\r\n        \"districtCode\":\"D0\"\r\n    },\r\n]\r\n\r\n\r\nmodule.exports = userList;\r\n","import {Dimensions} from 'react-native';\r\n\r\nexport function convertDateTimeToDate(inputString){\r\n    if (inputString == null ) return ''\r\n    return inputString.substring(8,10)+'-'+inputString.substring(5,7)+'-'+inputString.substring(0,4);\r\n}\r\n\r\nexport function convertDateTimeToTime(inputString){\r\n    if (inputString == null ) return ''\r\n    return inputString.substring(11,13)+':'+inputString.substring(14,16);\r\n}\r\n\r\nexport function convertDateAndTimeToDateTime(inputDate,inputTime){\r\n    return inputDate.substring(6,10)+'-'+inputDate.substring(3,5)+'-'+inputDate.substring(0,2)+'T'+inputTime+':00.000+0000'\r\n}\r\n\r\nexport function convertDateToDateTime(inputDate){\r\n    return inputDate.substring(6,10)+'-'+inputDate.substring(3,5)+'-'+inputDate.substring(0,2)+'T00:00:00.000+0000'\r\n}\r\n\r\nexport function getApiUrl(){\r\n    // return \"http://192.168.1.17:8080\";\r\n    return \"https://medtest-backend.herokuapp.com\";\r\n}\r\n\r\nexport const componentWidth = 1100\r\n\r\nexport const screenWidth =  Dimensions.get('window').width<1201?1200:\r\n                            // Dimensions.get('window').width<1269?1268:\r\n                            // Dimensions.get('window').width<1350?1349:\r\n                            // Dimensions.get('window').width<1367?1366:\r\n                            // Dimensions.get('window').width<1537?1536:\r\n                            // Dimensions.get('window').width<1921?1920:\r\n                            Dimensions.get('window').width\r\n\r\nexport function getRoleName(role){\r\n    switch (role) {\r\n        case 'CUSTOMER':\r\n            return 'Khách hàng';\r\n            break;\r\n        case 'NURSE':\r\n            return 'Y tá';\r\n            break;\r\n        case 'COORDINATOR':\r\n            return 'Điều phối viên'\r\n            break;\r\n        case 'ADMIN':\r\n            return 'Quản trị hệ thống'\r\n            break;\r\n        }   \r\n    }\r\n\r\n\r\nexport function convertMoney(_price){\r\n    let price = _price.toString()\r\n    let index = price.length -1\r\n    let result = ''\r\n    while (index >= 3) {\r\n        // console.log(price+\": \"+price.substring(index-2,index+1)+', '+index)\r\n        result = '.'+price.substring(index-2,index+1)+result\r\n        index-=3\r\n    }\r\n    result = price.substring(0,index+1)+result\r\n    return result\r\n}\r\n\r\nexport function getStateName(status){\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'Đang đợi y tá nhận đơn';\r\n            break;\r\n        case 'coordinatorlostsample':\r\n            return 'Điều phối viên làm mất mẫu';\r\n            break;\r\n        case 'accepted':\r\n            return 'Đang đợi lấy mẫu';\r\n            break;\r\n        case 'transporting':\r\n            return 'Đang vận chuyển mẫu';\r\n            break;\r\n        case 'lostsample':\r\n            return 'Đang đợi lấy lại mẫu';\r\n            break;\r\n        case 'waitingforresult':\r\n            return 'Đang đợi kết quả';\r\n            break;\r\n        case 'closed':\r\n            return 'Đã xong';\r\n            break;\r\n        case 'canceled':\r\n            return 'Đã bị hủy';\r\n            break;\r\n        case 'reaccepted':\r\n            return 'Đã nhận đơn bị mất do điều phối viên';\r\n            break;\r\n        case 'retransporting':\r\n            return 'Đang vận chuyển đơn bị mất do điều phối viên';\r\n            break;\r\n        case 'relostsample':\r\n            return 'Đang đợi lấy lại mẫu do điều phối viên làm mất';\r\n            break;\r\n        \r\n    } \r\n}\r\n\r\n\r\nexport function getAppointmentStateName(status){\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'Đơn đang đợi xử lý';\r\n            break;\r\n        case 'accepted':\r\n            return 'Đơn đã được chấp nhận';\r\n            break;\r\n        case 'rejected':\r\n            return 'Đơn đã bị từ chối';\r\n            break;\r\n        case 'canceled':\r\n            return 'Đơn đã bị hủy';\r\n            break;\r\n        \r\n        } \r\n    }\r\n\r\n\r\n\r\nexport function getStateColor(status){\r\n        switch (status) {\r\n        case 'pending':\r\n            return '#ffd66f';\r\n            break;\r\n        case 'coordinatorlostsample':\r\n            return '#ffd66f';\r\n            break;\r\n        case 'accepted':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'transporting':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'lostsample':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'waitingforresult':\r\n            return '#6398d6';\r\n            break;\r\n        case 'closed':\r\n            return '#000';\r\n            break;\r\n        \r\n        } \r\n    }","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, ImageBackground, Picker, TouchableOpacity, Dimensions } from 'react-native';\r\nimport {screenWidth} from './Common/CommonFunction'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            requestId: ''\r\n        }\r\n        this.editProfile = this.editProfile.bind(this)\r\n        this.logOut = this.logOut.bind(this)\r\n        this.searchRequest = this.searchRequest.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    editProfile(){\r\n        if (this.props.userInfo){\r\n            const account= { \r\n            'accountId':this.props.userInfo.id, \r\n            'accountPhoneNumber':this.props.userInfo.phoneNumber,                      \r\n            'accountName':this.props.userInfo.name,\r\n            'accountDob':this.props.userInfo.dob,\r\n            'accountAddress':this.props.userInfo.address,\r\n            'accountPassword':this.props.userInfo.password,\r\n            'accountActive':this.props.userInfo.active,\r\n            'accountEmail':this.props.userInfo.email,\r\n            'accountRole':this.props.userInfo.role,\r\n            'accountGender':this.props.userInfo.gender,\r\n            'accountImageUrl':this.props.userInfo.image,\r\n            'accountTownCode':this.props.userInfo.townCode,\r\n            'accountDistrictCode':this.props.userInfo.districtCode,\r\n            }\r\n            this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n            this.props.changeShowView?this.props.setSelectedAccount(account):null\r\n        }\r\n    }\r\n\r\n    logOut(){\r\n        this.props.changeShowView?this.props.logOut():null\r\n    }\r\n\r\n    searchRequest(){\r\n        this.props.userInfo?this.props.searchRequest(this.state.requestId):null\r\n    }\r\n\r\n    \r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.headerContainer} \r\n            // source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.leftArea}>\r\n                <Image \r\n                    style={styles.imageIcon}\r\n                    source={require('./../Data/Group 1.png')}>\r\n                </Image>\r\n                <View style={styles.leftContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:25, fontWeight:'bold',color:'white'}}>MedTest</Text>\r\n                    </View>\r\n                    <View style={styles.hotlineContainer}>\r\n                        <Text style={{fontSize:14}}>Hotline: 1900561252</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.middleArea}>\r\n                {this.props.userInfo?\r\n                <TextInput style={styles.searchInputContainer}\r\n                placeholder={'Tìm xét nghiệm'}\r\n                name=\"requestId\"\r\n                onChange={this.handleChange}\r\n                value={this.state.requestId}\r\n                onSubmitEditing={() => this.searchRequest()}\r\n                >                \r\n                </TextInput>\r\n                :<View/>\r\n                }\r\n            </View>\r\n            <View style={styles.rightArea}>\r\n                {this.props.userInfo?\r\n                <View style={styles.rightContainer}>\r\n                    <TouchableOpacity style={{}} onPress={() => this.editProfile()}>\r\n                        <Image \r\n                            style={{\r\n                                width:100,\r\n                                height:100,\r\n                            }}\r\n                            source={{uri:this.props.userInfo?this.props.userInfo.image:''}}>\r\n                            \r\n                        </Image>\r\n                    </TouchableOpacity>\r\n                    <View style={styles.nameContainer} >\r\n                        <Text style={{fontSize:14,color:'white'}}>{this.props.userInfo?this.props.userInfo.name:''}</Text>\r\n                    </View>\r\n                    <TouchableOpacity style={styles.nameContainer} onPress={() => this.logOut()}>\r\n                        <Text style={{fontSize:14,color:'white'}}>{this.props.userInfo?'Đăng xuất':''} </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                :null}\r\n            </View>\r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst headerHight=185\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        height:headerHight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#25345D',\r\n\r\n    },\r\n    leftArea:{\r\n        height:headerHight,\r\n        width:300,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        padding:20,\r\n        \r\n    },\r\n    imageIcon:{\r\n        width:100,\r\n        height:100,\r\n        // marginTop:5\r\n    },\r\n    leftContainer:{\r\n        height:headerHight,\r\n        width:180,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',    \r\n        backgroundColor:'',\r\n        paddingLeft:20,\r\n\r\n    },\r\n    titleContainer:{\r\n        width:100,\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        backgroundColor:'',\r\n        marginBottom:10,\r\n    },\r\n    hotlineContainer:{\r\n        height:35,\r\n        width:150,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        marginTop:10,\r\n    },\r\n    middleArea:{\r\n        height:headerHight,\r\n        // flex:1,\r\n        width: screenWidth-600,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:''\r\n    },\r\n    searchInputContainer:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:25,\r\n    },\r\n    rightArea:{\r\n        height:headerHight,\r\n        width:300,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:'',\r\n    },\r\n    rightContainer:{\r\n        height:headerHight-10,\r\n        width:200,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        padding:0,\r\n        backgroundColor:'',\r\n    },\r\n    nameContainer:{\r\n        height:30,\r\n        width:140,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, ImageBackground, Picker, TouchableOpacity, Dimensions } from 'react-native';\r\nimport {screenWidth} from './Common/CommonFunction'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.footerContainer} \r\n            // source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.leftArea}>                \r\n                <View style={styles.leftContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>TRỤ SỞ HÀ NỘI</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>159 B Lê Thanh Nghị, Hai Bà Trưng, Hà Nội</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.middleArea}>\r\n                <View style={styles.middleContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>CHỊU TRÁCH NHIỆM QUẢN LÝ NỘI DUNG</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Bác sĩ Nguyễn Trần Kiên</Text>\r\n                    </View>\r\n                    <View style={[styles.titleContainer,{marginTop:15}]}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>HỢP TÁC TRUYỀN THÔNG</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Liên hệ: 096 159 1593</Text>\r\n                    </View>\r\n                    <View style={[styles.titleContainer,{marginTop:15}]}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>LIÊN HỆ QUẢNG CÁO</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>medtest.default@gmail.com</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.rightArea}>\r\n                \r\n                <View style={styles.rightContainer}>\r\n                    <Image \r\n                        style={styles.imageIcon}\r\n                        source={require('./../Data/ABClinic.jpg')}>\r\n                    </Image>\r\n                    {/* <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:14, fontWeight:'',color:'white'}}>© Copyright 2007 - 2020 – </Text>\r\n                        <Text style={{fontSize:14, fontWeight:'bold',color:'white'}}>CÔNG TY CỔ PHẦN VCCORP</Text>\r\n                    </View> */}\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Tầng 17, 19, 20, 21 Tòa nhà Center Building - Hapulico Complex, Số 1 Nguyễn Huy Tưởng, Thanh Xuân, Hà Nội.</Text>\r\n                    </View>\r\n                    {/* <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Giấy phép số 2215/GP-TTĐT do Sở Thông tin và Truyền thông Hà Nội cấp ngày 10 tháng 4 năm 2019</Text>\r\n                    </View> */}\r\n                </View>\r\n                \r\n            </View>\r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst footerHeight=200\r\n\r\nconst styles = StyleSheet.create({\r\n    footerContainer: {\r\n        height:footerHeight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#25345D',\r\n    },\r\n    leftArea:{\r\n        height:footerHeight,\r\n        width:500,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        padding:20,\r\n    },\r\n    leftContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        paddingLeft:100,\r\n        paddingRight:50,\r\n\r\n    },\r\n    middleArea:{\r\n        height:footerHeight,\r\n        width: 500,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        padding:20,\r\n        backgroundColor:''\r\n    },\r\n    middleContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        paddingLeft:100,\r\n        paddingRight:100,\r\n    },\r\n    searchInputContainer:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:25,\r\n    },\r\n    rightArea:{\r\n        height:footerHeight,\r\n        width:500,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:'',\r\n    },\r\n    rightContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start', \r\n        paddingLeft:50,\r\n        paddingRight:100,\r\n        backgroundColor:'',\r\n    },\r\n    nameContainer:{\r\n        height:30,\r\n        width:140,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    },\r\n    imageIcon:{\r\n        width:50,\r\n        height:50,\r\n        marginTop:5\r\n    },\r\n    titleContainer:{\r\n        height:20,\r\n        width:'100%',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        backgroundColor:''\r\n    },\r\n    textContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        marginTop:8,\r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getRoleName, componentWidth} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class AccountListViewItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            // appointment_date: convertDateTimeToDate(this.props.appoint_date),\r\n            // appointment_time: convertDateTimeToTime(this.props.appoint_date),\r\n        };\r\n        this.onAccountPress = this.onAccountPress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n\r\n    onAccountPress(){\r\n        const account= { \r\n            'accountId':this.props.accountId, \r\n            'accountPhoneNumber':this.props.accountPhoneNumber,                      \r\n            'accountName':this.props.accountName,\r\n            'accountDob':this.props.accountDob,\r\n            'accountAddress':this.props.accountAddress,\r\n            'accountPassword':this.props.accountPassword,\r\n            'accountActive':this.props.accountActive,\r\n            'accountEmail':this.props.accountEmail,\r\n            'accountRole':this.props.accountRole,\r\n            'accountGender':this.props.accountGender,\r\n            'accountImageUrl':this.props.accountImageUrl,\r\n            'accountTownCode':this.props.accountTownCode,\r\n            'accountDistrictCode':this.props.accountDistrictCode,\r\n            }\r\n        // console.log(account)\r\n        this.props.setSelectedAccount?this.props.setSelectedAccount(account):null\r\n        this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.accountListItem}\r\n                onPress={() => this.onAccountPress()}\r\n                >\r\n                <View style={styles.accountNameContainer}>                                       \r\n                <Text style={{fontSize:17}}>{this.props.accountName}</Text>\r\n                </View>\r\n                <View style={styles.accountPhoneContainer}>                                       \r\n                <Text style={{fontSize:17}}>{this.props.accountPhoneNumber}</Text>\r\n                </View>\r\n                <View style={styles.accountRoleContainer}>                                       \r\n                <Text style={{fontSize:17}}>{getRoleName(this.props.accountRole)}</Text>  \r\n                </View>\r\n                     \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    accountListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingBottom:2,  \r\n    },\r\n    accountNameContainer:{\r\n        margin:10,\r\n        width:350,\r\n        alignItems: 'center',\r\n        marginRight:150,\r\n    },\r\n    accountPhoneContainer:{\r\n        margin:10,\r\n        width:200,\r\n        marginRight:100,\r\n        alignItems: 'center',\r\n    },\r\n    accountRoleContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n    },\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput} from 'react-native';\r\nimport {getApiUrl, componentWidth} from './../Common/CommonFunction'\r\nimport AccountListViewItem from './AccountListViewItem'\r\n\r\nexport default class AccountListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            Button1Selected: true,\r\n            Button2Selected: false,\r\n            Button3Selected: false,\r\n            Button4Selected: false,\r\n            Button4Selected: false,\r\n            accountSelected: 'all',\r\n            inputPhoneNumber: '',\r\n            isSearch: false,\r\n            userList: this.props.userList?this.props.userList:[],\r\n            dataChanged: true,\r\n        };\r\n        this.menuButtonPress = this.menuButtonPress.bind(this)\r\n        this.getAccountShowList = this.getAccountShowList.bind(this)\r\n        this.searchUser = this.searchUser.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    // componentDidUpdate  (prevProps, prevState) {        \r\n    //      if (prevProps !== this.props) {\r\n    //         this.setState(previousState => ({ \r\n    //             userList: this.props.userList,\r\n    //         }));\r\n    //     }\r\n    // }\r\n    \r\n    getAccountShowList(){\r\n        if (this.state.isSearch){\r\n            let result = []\r\n            let index = this.state.userList.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.userList[index].phoneNumber === this.state.inputPhoneNumber) {\r\n                    result.push(this.state.userList[index]);\r\n                    }\r\n                index -= 1;\r\n            }\r\n            return result;\r\n        }\r\n        if (this.state.accountSelected=='all'){\r\n            return this.state.userList\r\n        }\r\n        else{\r\n            let result = []\r\n            let index = this.state.userList.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.userList[index].role === this.state.accountSelected) {\r\n                    result.push(this.state.userList[index]);\r\n                    }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        return this.state.userList\r\n    }\r\n\r\n\r\n\r\n\r\n    menuButtonPress(button){\r\n        this.setState(previousState => ({ \r\n            Button1Selected: button==\"1\"?true:false,\r\n            Button2Selected: button==\"2\"?true:false,\r\n            Button3Selected: button==\"3\"?true:false,\r\n            Button4Selected: button==\"4\"?true:false,\r\n            Button5Selected: button==\"5\"?true:false,\r\n            accountSelected: button==\"1\"? 'all': button==\"2\"? 'COORDINATOR': button==\"3\"? 'NURSE' : button==\"4\"? 'CUSTOMER': 'ADMIN',\r\n            dataChanged: !this.state.dataChanged,\r\n            isSearch: false,\r\n        }))\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                userList: this.props.userList,\r\n                dataChanged: !this.state.dataChanged,\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    searchUser(){\r\n        // this.props.searchUser?this.props.searchUser(this.state.inputPhoneNumber):null\r\n        this.setState(previousState => ({ \r\n            dataChanged: !this.state.dataChanged,\r\n            isSearch: true,\r\n        }))\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleListArea}>\r\n            <View style={styles.accountListTopMenuArea}>\r\n                <View style={styles.accountListTopMenuContainer}>\r\n                    <TextInput style={styles.topMenuTextInput}\r\n                    placeholder={'Tìm kiếm tài khoản theo số điện thoại'}\r\n                    name=\"inputPhoneNumber\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.inputPhoneNumber}\r\n                    onSubmitEditing={() => this.searchUser()}\r\n                    >                \r\n                    </TextInput>\r\n                    <TouchableOpacity \r\n                        style={styles.createNewAccountButton} \r\n                        onPress={() => this.props.changeShowView ? this.props.changeShowView('AccountCreateView'): null}\r\n                        >\r\n                        <Text style={{color:'white'}}>Tạo tài khoản nhân viên</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={[styles.accountListTopMenuContainer,{\r\n                    }]}>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button1Selected ? 1:0,\r\n                        backgroundColor: this.state.Button1Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('1')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Tất cả</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button2Selected ? 1:0,\r\n                        backgroundColor: this.state.Button2Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('2')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Điều phối viên</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button3Selected ? 1:0,\r\n                        backgroundColor: this.state.Button3Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('3')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Y tá</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button4Selected ? 1:0,\r\n                        backgroundColor: this.state.Button4Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('4')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Khách hàng</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button5Selected ? 1:0,\r\n                        backgroundColor: this.state.Button5Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('5')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Quản trị hệ thống</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={styles.accountListTopMenuContainer}>\r\n                    <Text >Số lượng: {this.getAccountShowList()?this.getAccountShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.articleListFlatListArea}>     \r\n                <View style={styles.articleListFlatListTitleArea}> \r\n                    <View style={styles.articleListFlatListTitleContainer}> \r\n                        <View style={styles.articleListTitleNameContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Tên người dùng</Text>\r\n                        </View>\r\n                        <View style={styles.articleListTitlePhoneContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Số điện thoại</Text>\r\n                        </View>\r\n                        <View style={styles.articleListTitleRoleContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Vị trí</Text>  \r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <FlatList style={styles.articleListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getAccountShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <AccountListViewItem\r\n                                    accountId={item.id}         \r\n                                    accountPhoneNumber={item.phoneNumber}                            \r\n                                    accountName={item.name}    \r\n                                    accountDob={item.dob}    \r\n                                    accountAddress={item.address}\r\n                                    accountPassword={item.password}\r\n                                    accountActive={item.active}\r\n                                    accountEmail={item.email}         \r\n                                    accountRole={item.role}                            \r\n                                    accountGender={item.gender}    \r\n                                    accountImageUrl={item.image}    \r\n                                    accountTownCode={item.townCode}\r\n                                    accountDistrictCode={item.districtCode}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedAccount={this.props.setSelectedAccount?this.props.setSelectedAccount: null}  \r\n                                                                                                    \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList> \r\n                       \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst roleSelectedColor = '#c0c0c0';\r\n\r\nconst roleSelectButtonHeight = 30;\r\n\r\nconst styles = StyleSheet.create({\r\n    articleListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountListTopMenuArea: {\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:40,\r\n        paddingTop:10,\r\n    },\r\n    accountListTopMenuContainer: {\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:10,\r\n        paddingBottom:10,\r\n    },\r\n    topMenuTextInput:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:10,\r\n    },\r\n    topMenuButton:{\r\n        width: componentWidth/5,\r\n        height: roleSelectButtonHeight,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    createNewAccountButton:{\r\n        width: 240,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        // marginRight:200,\r\n    },\r\n    articleListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    articleListFlatListTitleArea:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    articleListFlatListTitleContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',   \r\n        backgroundColor:'#c0c0c0',     \r\n    },\r\n    articleListTitleNameContainer:{\r\n        margin:10,\r\n        width:350,\r\n        alignItems: 'center',\r\n        marginRight:150,\r\n    },\r\n    articleListTitlePhoneContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n        marginRight:100,\r\n    },\r\n    articleListTitleRoleContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n    },\r\n    articleListTitleText:{\r\n        fontSize:17, \r\n        fontWeight:'bold'\r\n    },\r\n    articleListFlatList:{\r\n        width: componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingBottom:40,\r\n    },\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime, componentWidth} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',\r\n            accountEmail:'',\r\n            accountDob: '',\r\n            accountGender: '',\r\n            accountPassword: '',\r\n            accountRePassword: '',\r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountAddress: '',\r\n            accountRole: '',\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            day: new Date().getDate(),\r\n            accountImage: 'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            error: '',\r\n            errorList: ['',\r\n                    'Tên chủ tài khoản không được bỏ trống',\r\n                    'Số điện thoại phải có mười số',\r\n                    'Địa chỉ email không được bỏ trống',\r\n                    'Mật khẩu phải có ít nhất 6 kí tự',\r\n                    'Xác nhận mật khẩu không trùng với mật khẩu ',\r\n                    'Địa chỉ không được bỏ trống'],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onDistrictChange = this.onDistrictChange.bind(this)\r\n        this.createNumberPickerList = this.createNumberPickerList.bind(this)\r\n        this.getNumberOfDayInMonth = this.getNumberOfDayInMonth.bind(this)\r\n        this.createAccount = this.createAccount.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountImage: 'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            error: '',\r\n        }));\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                districtList: this.props.districtList?this.props.districtList:[],\r\n                townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n                districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n                townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n                accountImage: 'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n                error: '',\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onDistrictChange(districtId){\r\n        this.setState({\r\n            districtSelected:districtId,                  \r\n        })\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == districtId){\r\n                this.setState({\r\n                    townList:  this.state.districtList[index].listTown,\r\n                    townSelected: this.state.districtList[index].listTown[0]?this.state.districtList[index].listTown[0].townCode:'none'              \r\n                })\r\n                index = 0;\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    getFebDay(){        \r\n        const year = this.state.year\r\n        if (year % 400 == 0 ) return 29\r\n        if (year % 100 == 0 ) return 28\r\n        if (year % 4 == 0) return 29\r\n        return 28\r\n    }\r\n\r\n    getNumberOfDayInMonth(month){\r\n        switch (month) {\r\n            case '1':\r\n            case '3':\r\n            case '5':\r\n            case '7':\r\n            case '8':\r\n            case '10':\r\n            case '12':\r\n                return 31;\r\n                break;\r\n            case '4':\r\n            case '6':\r\n            case '9':\r\n            case '11':\r\n                return 30;\r\n                break;\r\n            case '2':\r\n                return this.getFebDay();\r\n                break;\r\n            \r\n        }   \r\n    }\r\n\r\n    createNumberPickerList(start,end,startToEnd){\r\n        let result = [];\r\n        if(startToEnd){\r\n            for (let i = start; i <= end; i++)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        else{\r\n            for (let i = end; i >= start; i--)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        return result\r\n    }\r\n\r\n    getDob(){\r\n        let result = ''\r\n        if(parseInt(this.state.month)<10)\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n        else\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n        return result\r\n    }\r\n\r\n    \r\n    createAccount(){\r\n        // console.log(this.state.accountRole)\r\n        if(this.checkValid()){\r\n            this.callApiCreateAccount()\r\n        }\r\n    }\r\n\r\n    \r\n    checkValid(){        \r\n        if (this.state.accountName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.accountPhoneNumber == '' ||  this.state.accountPhoneNumber.length<10) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        \r\n        if (this.state.accountEmail == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (this.state.accountPassword == '' || this.state.accountPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        if (this.state.accountRePassword != this.state.accountPassword) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[5]\r\n            }));\r\n        if (this.state.accountAddress == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[6]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n\r\n    callApiCreateAccount(){\r\n        fetch(getApiUrl()+'/users/create-employee', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            name: this.state.accountName,\r\n            phoneNumber: this.state.accountPhoneNumber,\r\n            email: this.state.accountEmail,\r\n            dob: convertDateToDateTime(this.getDob()),\r\n            gender: this.state.accountGender,\r\n            password: this.state.accountPassword,\r\n            districtCode: this.state.districtSelected,\r\n            townCode: this.state.townSelected,\r\n            address: this.state.accountAddress,\r\n            role: this.state.accountRole,\r\n            image: this.state.accountImage\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.props.changeShowView('AccountListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n\r\n    selectPicture = async () =>{\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                this.setState({ accountImage: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Tạo nhân viên mới: \"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    {/* <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đại diện: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text style={{color:'white'}}>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                    </View> */}\r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <TouchableOpacity onPress={() => this.selectPicture()}\r\n                            >\r\n                                <Image \r\n                                    style={styles.imagePreview}\r\n                                    source={{ uri: this.state.accountImage}}\r\n                                    >\r\n                                </Image>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên nhân viên:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên nhân viên'}\r\n                            name={\"accountName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountName}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập số điện thoại của nhân viên'}\r\n                            name=\"accountPhoneNumber\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPhoneNumber}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ email:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ email của nhân viên'}\r\n                            name=\"accountEmail\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountEmail}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.day}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,this.getNumberOfDayInMonth(this.state.month.toString()),true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.month}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day: this.getNumberOfDayInMonth(itemValue)<this.state.day?'1':this.state.day,\r\n                                month:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,12,true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.year}\r\n                            style={[styles.accountTypeDropDown,{width:80}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                year:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1920,new Date().getFullYear(),false)}\r\n                        </Picker>\r\n                        \r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Giới tính:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.accountGender}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountGender:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Nam'} value={'1'} />\r\n                            <Picker.Item label={'Nữ'} value={'0'} />\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu'}\r\n                            name=\"accountPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Xác nhận mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Xác nhận lại mật khẩu'}\r\n                            name=\"accountRePassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountRePassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>                    \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Quận/huyện:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.districtSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.onDistrictChange(itemValue)}                    \r\n                            >\r\n                            {this.state.districtList?this.state.districtList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />))\r\n                            : null }\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Phường/xã:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.townSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                townSelected:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.state.townList?this.state.townList.map(town => (\r\n                            <Picker.Item label={town.townName} value={town.townCode} />\r\n                            )): null}\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ chi tiết:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ chi tiết: số nhà, đường, thôn, ..'}\r\n                            name=\"accountAddress\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountAddress}\r\n                            >                \r\n                        </TextInput>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Vị trí nhân viên:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.accountRole}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountRole:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Y tá'} value={'NURSE'} />\r\n                            <Picker.Item label={'Điều phối viên'} value={'COORDINATOR'} />\r\n                            <Picker.Item label={'Quản trị hệ thống'} value={'ADMIN'} />\r\n                        </Picker>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n            <TouchableOpacity style={styles.accountCreateConfirmButton} onPress={()=>this.createAccount()}>\r\n                    <Text style={{color:'white'}}>Tạo tài khoản nhân viên</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:50,\r\n        paddingBottom:50,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        fontWeight:'bold'\r\n        \r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    accountCreateConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:30,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        \r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime, componentWidth} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',\r\n            accountEmail:'',\r\n            accountDob: '',\r\n            accountGender: '',\r\n            accountPassword: '',\r\n            accountRePassword: '',\r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountAddress: '',\r\n            accountRole: '',\r\n            accountActive: '',\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            day: new Date().getDate(),\r\n            accountImage: 'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            error: '',\r\n            errorList: ['','Tên chủ tài khoản không được bỏ trống','Địa chỉ email không được bỏ trống', 'Địa chỉ không được bỏ trống'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onDistrictChange = this.onDistrictChange.bind(this)\r\n        this.createNumberPickerList = this.createNumberPickerList.bind(this)\r\n        this.getNumberOfDayInMonth = this.getNumberOfDayInMonth.bind(this)\r\n        this.updateAccountInformation = this.updateAccountInformation.bind(this)\r\n        this.resetPassword = this.resetPassword.bind(this)\r\n        this.checkCurrentUser = this.checkCurrentUser.bind(this)\r\n        this.checkAdmin = this.checkAdmin.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n        this.getDob = this.getDob.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log('')\r\n        this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            accountEmail: this.props.account?this.props.account.accountEmail:'',\r\n            accountDob: this.props.account?this.props.account.accountDob:'',\r\n            accountGender: this.props.account?this.props.account.accountGender:'',\r\n            accountRole: this.props.account?this.props.account.accountRole:'',\r\n            accountAddress: this.props.account?this.props.account.accountAddress:'',\r\n            accountActive: this.props.account?this.props.account.accountActive:'',\r\n            accountImage: this.props.account?this.props.account.accountImageUrl:'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            year: this.props.account?this.props.account.accountDob? this.props.account.accountDob.substring(0,4):'2020':'2020',\r\n            month: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(5,7)).toString():'2020':'2020',\r\n            day: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(8,10)).toString():'2020':'2020',\r\n            error: '',\r\n        }));\r\n    }\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n        if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            accountEmail: this.props.account?this.props.account.accountEmail:'',\r\n            accountDob: this.props.account?this.props.account.accountDob:'',\r\n            accountGender: this.props.account?this.props.account.accountGender:'',\r\n            accountRole: this.props.account?this.props.account.accountRole:'',\r\n            accountAddress: this.props.account?this.props.account.accountAddress:'',\r\n            accountActive: this.props.account?this.props.account.accountActive:'',\r\n            accountImage: this.props.account?this.props.account.accountImageUrl:'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            year: this.props.account?this.props.account.accountDob? this.props.account.accountDob.substring(0,4):'2020':'2020',\r\n            month: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(5,7)).toString():'2020':'2020',\r\n            day: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(8,10)).toString():'2020':'2020',\r\n            error: '',\r\n        }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onDistrictChange(districtId){\r\n        this.setState({\r\n            districtSelected:districtId,                  \r\n        })\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == districtId){\r\n                this.setState({\r\n                    townList:  this.state.districtList[index].listTown,\r\n                    townSelected: this.state.districtList[index].listTown[0]?this.state.districtList[index].listTown[0].townCode:'none'              \r\n                })\r\n                index = 0;\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    getFebDay(){        \r\n        const year = this.state.year\r\n        if (year % 400 == 0 ) return 29\r\n        if (year % 100 == 0 ) return 28\r\n        if (year % 4 == 0) return 29\r\n        return 28\r\n    }\r\n\r\n    getNumberOfDayInMonth(month){\r\n        switch (month) {\r\n            case '1':\r\n            case '3':\r\n            case '5':\r\n            case '7':\r\n            case '8':\r\n            case '10':\r\n            case '12':\r\n                return 31;\r\n                break;\r\n            case '4':\r\n            case '6':\r\n            case '9':\r\n            case '11':\r\n                return 30;\r\n                break;\r\n            case '2':\r\n                return this.getFebDay();\r\n                break;\r\n            \r\n        }   \r\n    }\r\n\r\n    createNumberPickerList(start,end,startToEnd){\r\n        let result = [];\r\n        if(startToEnd){\r\n            for (let i = start; i <= end; i++)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        else{\r\n            for (let i = end; i >= start; i--)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        return result\r\n    }\r\n\r\n\r\n    getDob(){\r\n        let result = ''\r\n        if(parseInt(this.state.month)<10)\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n        else\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n        return result\r\n    }\r\n    \r\n\r\n    resetPassword(){\r\n        console.log(this.props.account.accountId),\r\n        console.log(this.props.userInfo.id),\r\n        fetch(getApiUrl()+'/users/reset-password/'+this.props.account.accountId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n            \r\n        },\r\n        body: JSON.stringify({\r\n            userProcessingID: this.props.userInfo.id\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message?  success=true : null : null;\r\n                if (success)\r\n                    this.props.changeShowView('AccountListView')\r\n                \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    changePassword(){\r\n        this.props.changeShowView('AccountChangePasswordView')\r\n    }\r\n\r\n    updateAccountInformation(){\r\n        if(this.checkValid()){\r\n            this.callApiUpdateAccountInfo()\r\n        }\r\n    }\r\n\r\n    \r\n    checkValid(){        \r\n        if (this.state.accountName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.accountEmail == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.accountAddress == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n    callApiUpdateAccountInfo(){\r\n        fetch(getApiUrl()+'/users/update-user/'+this.props.account.accountId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            name: this.state.accountName,\r\n            dob: convertDateToDateTime(this.getDob()),\r\n            address: this.state.accountAddress,\r\n            active: this.state.accountActive,\r\n            email: this.state.accountEmail,\r\n            gender: this.state.accountGender,\r\n            townCode: this.state.townSelected,\r\n            districtCode: this.state.districtSelected,\r\n            image: this.state.accountImage\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) {\r\n                    if (this.checkCurrentUser()) this.props.updateUserInfo(result)\r\n                    this.props.changeShowView('AccountListView')\r\n                }\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    \r\n    selectPicture = async () =>{\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                this.setState({ accountImage: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    checkCurrentUser(){\r\n        if (this.props.account.accountId == this.props.userInfo.id) return true\r\n        return false\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountViewArea}>\r\n            <View style={styles.accountMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Chỉnh sửa thông tin nhân viên: \"}</Text>   \r\n            </View>\r\n            <View style={styles.accountArea}>\r\n                <View style={styles.accountContainer}>\r\n                    {/* <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đại diện: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text style={{color:'white'}}>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                    </View> */}\r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={styles.accountRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <TouchableOpacity onPress={() => this.selectPicture()}\r\n                            >\r\n                                <Image \r\n                                    style={styles.imagePreview}\r\n                                    source={{ uri: this.state.accountImage}}\r\n                                    >\r\n                                </Image>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Tên nhân viên:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên nhân viên'}\r\n                            name={\"accountName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountName}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountName}</Text>\r\n                        }\r\n                        \r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <Text style={styles.rowTextLong}>{this.state.accountPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ email:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ email của nhân viên'}\r\n                            name=\"accountEmail\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountEmail}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountEmail}</Text>\r\n                        }\r\n                    </View>\r\n                    {this.checkAdmin()?\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.day}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,this.getNumberOfDayInMonth(this.state.month.toString()),true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.month}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day: this.getNumberOfDayInMonth(itemValue)<this.state.day?'1':this.state.day,\r\n                                month:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,12,true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.year}\r\n                            style={[styles.accountTypeDropDown,{width:80}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                year:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1920,2020,false)}\r\n                        </Picker>\r\n                    </View>\r\n                    :\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Text style={styles.rowTextLong}>{this.getDob()}</Text>\r\n                    </View>\r\n                    }\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Giới tính:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.accountGender}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountGender:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Nam'} value={'1'} />\r\n                            <Picker.Item label={'Nữ'} value={'0'} />\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountGender=='1'?'Nam':'Nữ'}</Text>\r\n                        }\r\n                        \r\n                    </View>                   \r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Quận/huyện:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.districtSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.onDistrictChange(itemValue)}                    \r\n                            >\r\n                            {this.state.districtList?this.state.districtList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />))\r\n                            : null }\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Phường/xã:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.townSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                townSelected:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.state.townList?this.state.townList.map(town => (\r\n                            <Picker.Item label={town.townName} value={town.townCode} />\r\n                            )): null}\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ chi tiết:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ chi tiết: số nhà, đường, thôn, ..'}\r\n                            name=\"accountAddress\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountAddress}\r\n                            >                \r\n                        </TextInput>\r\n                    </View> \r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Vị trí nhân viên:</Text>\r\n                        <Text style={styles.rowTextLong}>{getRoleName(this.state.accountRole)}</Text>\r\n                    </View> \r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Trạng thái:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.accountActive}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountActive:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Đang hoạt động'} value={'1'} />\r\n                            <Picker.Item label={'Bị khóa'} value={'0'} />\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountActive=='1'?'Đang hoạt động':'Bị khóa'}</Text>\r\n                        }\r\n                    </View> \r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>  \r\n                <View style={styles.buttonArea}>\r\n                    {this.checkCurrentUser()?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.changePassword()}>\r\n                        <Text style={{color:'white'}}>Thay đổi mật khẩu</Text>\r\n                    </TouchableOpacity>\r\n                    :\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.resetPassword()}>\r\n                        <Text style={{color:'white'}}>Đặt lại mật khẩu</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.updateAccountInformation()}>\r\n                        <Text style={{color:'white'}}>Lưu thay đổi</Text>\r\n                    </TouchableOpacity>\r\n                </View>  \r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:50,\r\n        paddingBottom:50,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginBottom:10,\r\n    },\r\n    accountContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    accountRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        fontWeight:'bold'\r\n        \r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:30,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime,componentWidth} from './../Common/CommonFunction'\r\n// import DatePicker from 'react-native-date-picker'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',    \r\n            accountOldPassword: '',        \r\n            accountPassword: '',\r\n            accountRePassword: '',            \r\n            error: '',\r\n            errorList: ['',\r\n                    'Mật khẩu cũ phải có ít nhất 6 kí tự',\r\n                    'Mật khẩu mới phải có ít nhất 6 kí tự',\r\n                    'Xác nhận mới mật khẩu không trùng với mật khẩu '],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            error: '',\r\n        }));\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                accountName: this.props.account?this.props.account.accountName:'',\r\n                accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n                error: '',\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    \r\n    changePassword(){\r\n        if(this.checkValid()){\r\n            this.callApiChangePassword()\r\n        }\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n    \r\n    checkValid(){    \r\n        if (this.state.accountOldPassword == '' || this.state.accountOldPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));   \r\n        if (this.state.accountPassword == '' || this.state.accountPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.accountRePassword != this.state.accountPassword) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n\r\n    callApiChangePassword(){\r\n        console.log(this.props.userInfo.id)\r\n        let url = ''\r\n        if (this.checkAdmin()) url = getApiUrl()+'/users/admin/change-password/'+this.props.userInfo.id\r\n        else url = getApiUrl()+'/users/coordinators/change-password/'+this.props.userInfo.id\r\n        fetch(url, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            oldPassword: this.state.accountOldPassword,\r\n            newPassword: this.state.accountPassword,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? result.message == \"Thay đổi mật khẩu thành công!\"? success=true : null : null : null;\r\n                if (success)\r\n                this.props.changeShowView('AccountListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Thay đổi mật khẩu:\"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên người dùng:</Text>\r\n                        <Text style={styles.rowTextLong}>{this.state.accountName}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <Text style={styles.rowText}>{this.state.accountPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu cũ:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu cũ'}\r\n                            name=\"accountOldPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountOldPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu mới:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu mới'}\r\n                            name=\"accountPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Xác nhận mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Xác nhận lại mật khẩu'}\r\n                            name=\"accountRePassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountRePassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>           \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n            <TouchableOpacity style={styles.accountCreateConfirmButton} onPress={()=>this.changePassword()}>\r\n                    <Text style={{color:'white'}}>Đổi mật khẩu</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:50,\r\n        paddingBottom:50,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    accountCreateConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:30,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getAppointmentStateName, getStateColor, componentWidth} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class AppointmentListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n        };\r\n        this.onAppointmentPress = this.onAppointmentPress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n\r\n    onAppointmentPress(){\r\n        const appointment= { \r\n            \"appointmentId\": this.props.appointmentId,\r\n            \"appointmentCreatedTime\":this.props.appointmentCreatedTime,\r\n            \"customerName\":this.props.customerName,\r\n            \"customerPhoneNumber\":this.props.customerPhoneNumber,\r\n            \"customerDOB\":this.props.customerDOB,\r\n            \"appointmentMeetingTime\":this.props.appointmentMeetingTime,\r\n            \"appointmentStatus\":this.props.appointmentStatus,\r\n            }\r\n            \r\n        this.props.setSelectedAppointment?this.props.setSelectedAppointment(appointment):null\r\n        this.props.changeShowView?this.props.changeShowView('AppointmentView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.appointmentListItem}\r\n                onPress={() => this.onAppointmentPress()}\r\n                >                          \r\n                <View style={[styles.appointmentTextContainer,{\r\n                    marginTop:5,\r\n                }]}>                    \r\n                    <View>\r\n                    <Text style={{fontSize:17,color:'#25345D',fontWeight:'bold'}}>#{this.props.appointmentId}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={styles.appointmentTextContainer}>\r\n                    <View style={styles.appointmentListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>{this.props.customerName}</Text>\r\n                    </View>\r\n                    <View style={[styles.appointmentListSecondColumnContainer,{\r\n                        borderRadius:1,\r\n                        borderStyle: 'dashed',\r\n                    }]}>\r\n                    <Text style={{fontSize:17}}>{convertDateTimeToDate(this.props.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointmentCreatedTime)}</Text>                    \r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:15}}>Khung giờ hẹn: {convertDateTimeToTime(this.props.appointmentMeetingTime)}</Text>\r\n                    </View>\r\n                </View>     \r\n                <View style={[styles.appointmentTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.appointmentListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>Số điện thoại:  {this.props.customerPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentListSecondColumnContainer}>\r\n                    <Text style={{fontSize:17,color:'#0c59cf'}}>{getAppointmentStateName(this.props.appointmentStatus)}</Text>\r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:15}}>Ngày hẹn: {convertDateTimeToDate(this.props.appointmentMeetingTime)}</Text>\r\n                    </View>\r\n                    \r\n                </View>                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    appointmentListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    appointmentTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:3,\r\n        paddingTop:3,\r\n    },\r\n    appointmentListFirstColumnContainer:{\r\n        width:250,\r\n    },\r\n    appointmentListSecondColumnContainer:{\r\n        width:200,\r\n        marginLeft:20,\r\n        marginRight:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport {getApiUrl, componentWidth} from './../Common/CommonFunction'\r\nimport AppointmentListViewItem from './AppointmentListViewItem'\r\n\r\nexport default class AppointmentListView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            districtsList: this.props.districtList,\r\n            statusSelected: 'all',\r\n            districtSelected: 'all',\r\n            dataChanged: true,\r\n            testsList: this.props.testsList,\r\n            appointmentList: this.props.appointmentList,\r\n        };\r\n        this.getAppointmentShowList = this.getAppointmentShowList.bind(this)\r\n    }\r\n\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                appointmentList: this.props.appointmentList,\r\n                districtsList: this.props.districtList,\r\n                dataChanged: !this.state.dataChanged\r\n            }));\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    getAppointmentShowList(){\r\n        if (this.state.statusSelected=='all'){\r\n            if (this.state.districtSelected=='all'){\r\n                return this.state.appointmentList\r\n            }\r\n            else{\r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        else{\r\n            if (this.state.districtSelected=='all'){\r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].appointment_status === this.state.statusSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n            else{                \r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].appointment_status === this.state.statusSelected && this.state.appointmentList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        return this.state.appointmentList\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentListArea}>\r\n            <View style={styles.appointmentListTopMenuArea}>\r\n                <View style={styles.appointmentListTopMenuContainer}>\r\n                    <Text style={{fontWeight:'bold'}}>Trạng thái: </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.statusSelected}\r\n                        style={[styles.appointmentTypeDropdown,{width:360}]}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            statusSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged\r\n                        })}\r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        <Picker.Item label=\"Đơn đang đợi xử lý\" value=\"pending\" />\r\n                        <Picker.Item label=\"Đơn đã được chấp nhận\" value=\"accepted\" />\r\n                        <Picker.Item label=\"Đơn đã bị từ chối\" value=\"rejected\" />\r\n                        <Picker.Item label=\"Đơn đã bị hủy\" value=\"canceled\" />\r\n                    </Picker>                    \r\n                </View>\r\n                <View style={styles.appointmentListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getAppointmentShowList()?this.getAppointmentShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.appointmentListFlatListArea}>        \r\n                <FlatList style={styles.appointmentListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getAppointmentShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <AppointmentListViewItem\r\n                                    appointmentId={item.appointment_id}       \r\n                                    appointmentCreatedTime={item.appointment_createdTime}                             \r\n                                    customerName={item.appointment_customerName}\r\n                                    customerPhoneNumber={item.appointment_phoneNumber}\r\n                                    customerDOB={item.appointment_DOB}\r\n                                    appointmentMeetingTime={item.appointment_meetingTime}\r\n                                    appointmentStatus={item.appointment_status}        \r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedAppointment={this.props.setSelectedAppointment?this.props.setSelectedAppointment: null}                                                                 \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentListTopMenuArea: {\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n        paddingTop:10,\r\n    },\r\n    appointmentListTopMenuContainer: {\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n        paddingTop:10,\r\n        paddingBottom:10,\r\n    },\r\n    appointmentTypeDropdown:{\r\n        height: 35, \r\n        width: 300,\r\n        borderRadius:5,\r\n        marginLeft:27,\r\n    },\r\n    appointmentListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    appointmentListFlatList:{\r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, Image, Dimensions, TouchableOpacity } from 'react-native';\r\nimport {screenWidth} from './CommonFunction'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    \r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <View  style={styles.container}>\r\n            <View style={styles.alertContainer}>\r\n                <View style={styles.textContainer}>\r\n                    <Text style={{fontSize:25}}>{this.props.title?this.props.title:'Cập nhập thông tin'}</Text>\r\n                    <Text>{this.props.content?this.props.content:'Bạn có muốn cập nhật thông tin không ?'}</Text>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.props.onCancel?this.props.onCancel():null}>\r\n                        <Text style={{color:'white'}}>Hủy</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.props.onConfirm?this.props.onConfirm():null}>\r\n                        <Text style={{color:'white'}}>Xác nhận</Text>\r\n                    </TouchableOpacity> \r\n                </View>\r\n            </View>\r\n            \r\n\r\n        </View >\r\n    );\r\n  }\r\n}\r\n\r\nconst centerHeight=600\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: centerHeight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    alertContainer:{\r\n        height: 250,\r\n        width: 700,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 20,\r\n        paddingLeft: 60,\r\n        paddingRight: 60,\r\n        paddingBottom: 35,\r\n    },\r\n    textContainer:{\r\n        height: 90,\r\n        width: 700,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor:'white',\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        fontSize:17,\r\n        backgroundColor:''\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getApiUrl, getAppointmentStateName, componentWidth} from './../Common/CommonFunction'\r\nimport AlertScreen from './../Common/AlertScreen'\r\n\r\nexport default class AppointmentView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {     \r\n            \r\n        };\r\n        this.onAccept = this.onAccept.bind(this)\r\n        this.onReject = this.onReject.bind(this)\r\n        this.callApiAcceptAppointment = this.callApiAcceptAppointment.bind(this)\r\n        \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n\r\n            }));\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n    callApiAcceptAppointment(){\r\n        fetch(getApiUrl()+\"/appointments/accept/\"+this.props.appointment.appointmentId, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                status: 'accepted',\r\n                coordinatorID: this.props.userInfo.id,\r\n                note: 'ok',\r\n            }),\r\n            })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                // let success = false\r\n                // result ? result.message? null : success=true : null;\r\n                // if (success) \r\n                this.props.changeShowView('AppointmentListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    onAccept(){\r\n        this.callApiAcceptAppointment()\r\n    }\r\n\r\n    onReject(){\r\n        this.props.changeShowView('AppointmentRejectView')\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    return (\r\n        <View style={styles.appointmentViewArea}>\r\n            <View style={styles.appointmentTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Chi tiết đơn khám</Text>                \r\n            </View>\r\n            <View style={styles.appointmentArea}>\r\n                <View style={styles.appointmentContainer}>      \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Mã đơn xét khám: </Text> \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.appointmentId:''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentCreatedTime):''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ hẹn:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentMeetingTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentMeetingTime):''}</Text>\r\n                    </View>  \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.customerPhoneNumber:''}</Text>\r\n                    </View>                  \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Trạng thái: </Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?getAppointmentStateName(this.props.appointment.appointmentStatus):''}</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    {this.props.appointment.appointmentStatus =='pending'?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onReject()}>\r\n                        <Text style={{color:'white'}}>Từ chối</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>}\r\n                    {this.props.appointment.appointmentStatus =='pending'?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onAccept()}>\r\n                        <Text style={{color:'white'}}>Xác nhận</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>}\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    appointmentArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    appointmentContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    appointmentRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowFirstContainer:{\r\n        width:200,\r\n    },\r\n    rowSecondContainer:{\r\n        width:'100%',\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:17,\r\n        fontWeight:'bold',\r\n        backgroundColor:''\r\n    },\r\n    \r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        backgroundColor:''\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class AppointmentLostSampleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            reason: '',\r\n            error: '',\r\n            errorList: ['','Phải điền lý do từ chối'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.rejectAppointment = this.rejectAppointment.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    rejectAppointment(){\r\n        if(this.checkValid()){\r\n            this.callApiRejectAppointment()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.reason == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiRejectAppointment(){\r\n        fetch(getApiUrl()+\"/appointments/reject/\"+this.props.appointment.appointmentId, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                status: 'rejected',\r\n                coordinatorID: this.props.userInfo.id,\r\n                note: this.state.reason,\r\n            }),\r\n            })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                // let success = false\r\n                // result ? result.message? null : success=true : null;\r\n                // if (success) \r\n                this.props.changeShowView('AppointmentListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n    return (\r\n        <View style={styles.appointmentViewArea}>\r\n            <View style={styles.appointmentTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Từ chối đơn hẹn: </Text>                \r\n            </View>\r\n            <View style={styles.appointmentArea}>\r\n                <View style={styles.appointmentContainer}>   \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn hẹn: </Text>        \r\n                        <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.appointmentId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowTextLong,{width:300}]}>{this.props.appointment?this.props.appointment.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowText}>{'Lý do từ chối: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Điền lý do từ chối'}\r\n                            name={\"reason\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reason}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.appointmentConfirmButton} onPress={() => this.props.changeShowView('AppointmentView')}>\r\n                        <Text style={{color:'white'}}>Quay lại</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.appointmentConfirmButton} onPress={() => this.rejectAppointment()}>\r\n                        <Text style={{color:'white'}}>Từ chối đơn hẹn</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    appointmentArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    appointmentContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    appointmentRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n        fontWeight:'bold'\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        backgroundColor:''\r\n    },\r\n    appointmentTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    appointmentConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class ArticleListViewItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n        };\r\n        this.onArticlePress = this.onArticlePress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n    onArticlePress(){\r\n        const article= { \r\n            \"articleId\": this.props.articleId,\r\n            \"articleTitle\":this.props.articleTitle,\r\n            \"articleContent\":this.props.articleContent,\r\n            \"articleShortContent\":this.props.articleShortContent,\r\n            \"articleImageUrl\":this.props.articleImageUrl,\r\n            \"userId\":this.props.userId,\r\n            \"articleCreatedTime\":this.props.articleCreatedTime,\r\n            \"creatorName\": this.props.creatorName,\r\n            }\r\n        this.props.setSelectedArticle?this.props.setSelectedArticle(article):null\r\n        this.props.changeShowView?this.props.changeShowView('ArticleView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.articleListItem}\r\n                onPress={() => this.onArticlePress()}\r\n                >                                \r\n                <View style={styles.articleImageContainer}>\r\n                    <Image \r\n                        style={styles.articleImage}\r\n                        source={{uri:this.props.articleImageUrl}}>\r\n                    </Image>\r\n                </View>  \r\n                <View style={styles.articleTextContainer}>\r\n                    <View style={styles.articleTextContentContainer}>\r\n                        <View style={styles.articleTitleContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'Bold'}}>{this.props.articleTitle}</Text>\r\n                        </View>\r\n                        <View style={[styles.articleCreateTimeContainer,{\r\n                            borderRadius:1,\r\n                            borderStyle: 'dashed',\r\n                        }]}>\r\n                        <Text style={{fontSize:15}}>{convertDateTimeToDate(this.props.articleCreatedTime)+\"   \"+convertDateTimeToTime(this.props.articleCreatedTime)}</Text>                                   \r\n                        </View>\r\n                        <View style={styles.articleShortContentContainer}>\r\n                            <Text style={{fontSize:17, textAlign: 'justify'}}>{this.props.articleShortContent}</Text>        \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.articleTextCreatorNameContainer}>\r\n                        <View style={styles.articleCreatorNameContainer}>\r\n                            <Text style={{fontSize:17}}>{this.props.creatorName}</Text>\r\n                        </View>\r\n                    </View>\r\n                    \r\n                </View>     \r\n                                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    articleListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    articleImageContainer:{\r\n        margin:10,\r\n        height:200,\r\n        width:200,\r\n    },\r\n    articleImage:{\r\n        height:200,\r\n        width:200,\r\n    },\r\n    articleTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth-220,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        backgroundColor:'',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:5,\r\n        paddingTop:10,\r\n    },\r\n    articleTextContentContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth-250,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        backgroundColor:''\r\n    },\r\n    articleTextCreatorNameContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth-230,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        backgroundColor:'',\r\n        paddingRight:10,\r\n    },\r\n    articleTitleContainer:{\r\n        marginBottom:10,\r\n    },\r\n    articleCreateTimeContainer:{\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n        padding:2,\r\n        marginBottom:10\r\n    },\r\n    articleShortContentContainer:{\r\n    },\r\n    articleCreatorNameContainer:{\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, Alert} from 'react-native';\r\nimport {getApiUrl,componentWidth} from './../Common/CommonFunction'\r\nimport ArticleListViewItem from './ArticleListViewItem'\r\n\r\nexport default class ArticleListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            statusSelected: 'pending',\r\n            districtSelected: 'D0',\r\n            articleList: this.props.articleList,\r\n        };\r\n        this.onArticlePress = this.onArticlePress.bind(this)\r\n        this.onAddArticlePress = this.onAddArticlePress.bind(this)\r\n    }\r\n\r\n    \r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                articleList: this.props.articleList,\r\n            }));\r\n        }\r\n    }\r\n\r\n    onArticlePress (){\r\n        this.props.changeShowView ? this.props.changeShowView('ArticleView'): null\r\n    }\r\n\r\n\r\n    onAddArticlePress(){\r\n        this.props.changeShowView ? this.props.changeShowView('ArticleAddView'): null\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleListArea}>\r\n            <View style={styles.articleListTopMenuArea}>\r\n                <Text style={{fontSize:25,fontWeight:'bold'}}>Bài viết mới </Text>\r\n                <TouchableOpacity \r\n                    style={styles.createNewArticleButton}\r\n                    onPress={() => this.onAddArticlePress()}\r\n                    >\r\n                    <Text style={{color:'white'}}>Tạo bài viết mới</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.articleListFlatListArea}>        \r\n                <FlatList style={styles.articleListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.state.articleList}\r\n                    // extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <ArticleListViewItem\r\n                                    articleId={item.id}         \r\n                                    articleTitle={item.tittle}                            \r\n                                    articleShortContent={item.shortContent}    \r\n                                    articleContent={item.content}    \r\n                                    articleImageUrl={item.image}\r\n                                    userId={item.userID}\r\n                                    articleCreatedTime={item.createdTime}\r\n                                    creatorName={item.creatorName}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedArticle={this.props.setSelectedArticle?this.props.setSelectedArticle: null}\r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleListTopMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n    createNewArticleButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    articleListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    articleListFlatList:{\r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n    \r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image, Alert} from 'react-native';\r\nimport {getApiUrl, componentWidth} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n// import * as DocumentPicker from 'expo-document-picker';\r\n\r\nexport default class ArticleAddView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            imageResultUri: '',\r\n            articleTitle: '',\r\n            articleShortContent: '',\r\n            articleContent: '',\r\n            error: '',\r\n            errorList: ['','Phải điền tiêu đề bài viết','Phải điền nội dung ngắn ngọn bài viết', 'Phải điền nội dung bài viết','Bài viết chưa có ảnh min họa'],\r\n\r\n        };\r\n        this.selectPicture = this.selectPicture.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.createArticle = this.createArticle.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    createArticle(){\r\n        if(this.checkValid()){\r\n            this.callApiCreateArticle()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.articleTitle == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.articleShortContent == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.articleContent == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (this.state.imageResultUri == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiCreateArticle(){\r\n        fetch(getApiUrl()+'/articles/create', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            tittle: this.state.articleTitle,\r\n            shortContent:this.state.articleShortContent,\r\n            content: this.state.articleContent,\r\n            image: this.state.imageResultUri,\r\n            userID: this.props.userInfo.id\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.success? success=result.success : null : null;\r\n                if (success) \r\n                this.props.changeShowView('ArticleListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    selectPicture = async () =>{\r\n        // const result = await DocumentPicker.getDocumentAsync({copyToCacheDirectory:true})\r\n        // console.log(result)\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                this.setState({ imageResultUri: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleAddViewArea}>\r\n            <View style={styles.articleAddTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Thêm bài viết: </Text>                \r\n            </View>\r\n            <View style={styles.articleAddArea}>\r\n                <View style={styles.articleAddContainer}>                    \r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>Tiêu đề: </Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                        placeholder={'Nhập tiêu đề'}   \r\n                        name={\"articleTitle\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.articleTitle}  \r\n                        >           \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Nội dung\\nngắn gọn: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Nhập nội dung ngắn gọn'}\r\n                            name={\"articleShortContent\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.articleShortContent}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Nội dung\\nbài viết: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={12}\r\n                            placeholder={'Nhập nội dung '}\r\n                            name={\"articleContent\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.articleContent} \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đính kèm: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text style={{color:'white'}}>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                        {/* <Text style={[styles.rowText,{fontSize:15,width:600,paddingTop:3,marginLeft:20}]}>{' '+this.state.imageResultUri}</Text> */}\r\n                    </View>\r\n                    {this.state.imageResultUri?\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{' '}</Text>\r\n                        <Image \r\n                            style={styles.imagePreview}\r\n                            source={{ uri: this.state.imageResultUri}}\r\n                            >\r\n                        </Image>\r\n                    </View>\r\n                    :null\r\n                    }\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.articleAddConfirmButton} onPress={() => this.createArticle()}>\r\n                    <Text style={{color:'white'}}>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleAddViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleAddTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    articleAddArea:{\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    articleAddContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    articleAddRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:18,\r\n    },\r\n    articleTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    articleAddConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:500,\r\n        height:500,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\n\r\nexport default class ArticleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            imageUri: '',\r\n            imageType: '',\r\n            imageResultUri: '',\r\n        };\r\n        \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <View style={styles.articleViewArea}>\r\n            \r\n            <View style={styles.articleArea}>\r\n                <View style={styles.articleContainer}>      \r\n                    <View style={styles.articleRowContainer}>\r\n                        <Text style={{fontSize:25,fontWeight:'bold'}}>{this.props.article?this.props.article.articleTitle:''}</Text>                \r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{borderWidth:1,borderRadius:1,borderStyle: 'dashed',width:180}]}>\r\n                        <Text style={[styles.rowText,{flex:1,textAlign: 'center',}]}>{this.props.article?convertDateTimeToDate(this.props.article.articleCreatedTime)+\"   \"+convertDateTimeToTime(this.props.article.articleCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{justifyContent: 'center',}]}>\r\n                        <Image \r\n                            style={styles.rowImage}\r\n                            source={{ uri: this.props.article?this.props.article.articleImageUrl:'' }}\r\n                            >\r\n                            </Image>\r\n                    </View>\r\n                    <View style={styles.articleRowContainer}>\r\n                        <Text style={styles.rowText}>{this.props.article?this.props.article.articleContent:''}</Text>\r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{justifyContent: 'flex-end',}]}>\r\n                        <Text style={styles.rowText}>{this.props.article?this.props.article.creatorName:''}</Text>\r\n                    </View>   \r\n                                     \r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    articleArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    articleContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    articleRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        fontSize:18,\r\n        backgroundColor:'',\r\n        textAlign: 'justify'\r\n    },\r\n    articleTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowImage:{\r\n        width:400,\r\n        height:400,\r\n        backgroundColor:''\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,TextInput, Dimensions} from 'react-native';\r\nimport {getApiUrl,screenWidth} from './../Common/CommonFunction'\r\n\r\nimport PageFooter from './../PageFooter'\r\n\r\nexport default class Login extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            phoneNumber: '',\r\n            password:'',\r\n            error: ' ',\r\n            errorList: [' ','Phải điền số điện thoại', 'Phải điền mật khẩu']\r\n        };\r\n        this.callApiLogin = this.callApiLogin.bind(this)\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    login(){\r\n        if(this.checkValid()){\r\n            this.callApiLogin()\r\n        }    \r\n    }\r\n\r\n    \r\n    checkValid(){     \r\n        if (this.state.phoneNumber == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.password == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiLogin(){\r\n        fetch(getApiUrl()+\"/users/login\",{\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                phoneNumber: this.state.phoneNumber,\r\n                password: this.state.password,\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) this.props.loginSuccess(result.userInfo,result.token)\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <View style={{flex:1, width:screenWidth}}>\r\n            <View style={styles.loginViewArea}>\r\n                <View style={styles.titleContainer}>\r\n                    <Text style={{fontSize:23,fontWeight:'bold'}}>Đăng nhập</Text>\r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowText}>{'Số điện thoại'}</Text>\r\n                    <TextInput \r\n                        style={styles.rowTextInput}\r\n                        name={\"phoneNumber\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.phoneNumber}\r\n                        >                \r\n                    </TextInput>     \r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowText}>{'Mật khẩu'}</Text>\r\n                    <TextInput \r\n                        style={styles.rowTextInput}\r\n                        name={\"password\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.password}\r\n                        secureTextEntry={true}\r\n                        onSubmitEditing={() => this.login()}\r\n                        >                \r\n                    </TextInput>     \r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowTextError}>{this.state.error}</Text>                         \r\n                </View>\r\n                <TouchableOpacity style={styles.loginButton} onPress={() => this.login()}>\r\n                    <Text style={{color:'white'}}>Đăng nhập</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <PageFooter/>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    loginViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n        paddingTop:70,\r\n    },\r\n    titleContainer:{\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding:20,\r\n        marginBottom:20,\r\n\r\n    },\r\n    rowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width:'100%',\r\n        padding:20,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:130,\r\n        fontSize:18,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 400,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    loginButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:20,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime, getStateName, getStateColor,componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class RequestListPendingItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            \r\n        };\r\n        this.onRequestPress = this.onRequestPress.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    changeToRequestViewScreen(testList){\r\n        const request= { \r\n            \"requestId\": this.props.requestId,\r\n            \"requestCreatedTime\":this.props.requestCreatedTime,\r\n            \"customerName\":this.props.customerName,\r\n            \"customerPhoneNumber\":this.props.customerPhoneNumber,\r\n            \"customerDOB\":this.props.customerDOB,\r\n            \"requestAddress\":this.props.requestAddress,\r\n            \"requestDistrictName\":this.props.requestDistrictName,\r\n            \"requestTownName\": this.props.requestTownName,\r\n            \"requestMeetingTime\": this.props.requestMeetingTime,\r\n            \"nurseName\":this.props.nurseName,\r\n            \"nurseId\":this.props.nurseId,\r\n            \"coordinatorId\":this.props.coordinatorId,\r\n            \"coordinatorName\":this.props.coordinatorName,\r\n            \"lsSelectedTest\":this.props.lsSelectedTest,\r\n            \"requestAmount\":this.props.requestAmount,\r\n            \"requestStatus\":this.props.requestStatus,\r\n            \"testList\":testList,\r\n            \"requestTestVersion\":this.props.requestTestVersion,\r\n            }\r\n        this.props.setSelectedRequest?this.props.setSelectedRequest(request):null\r\n        this.props.changeShowView?this.props.changeShowView('RequestView'):null\r\n    }\r\n\r\n    onRequestPress(){        \r\n        if (this.checkVersion()) this.changeToRequestViewScreen(this.props.testList)\r\n    }\r\n\r\n    checkVersion(){\r\n        if(this.props.testVersion != this.props.requestTestVersion){\r\n            fetch(getApiUrl()+\"/tests/versions/list-all-test/\"+this.props.requestTestVersion,{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    let list = []\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    {\r\n                        this.changeToRequestViewScreen(result.lsTests)\r\n                        return false\r\n                    }\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )  \r\n        }\r\n        else return true;\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.requestListItem}\r\n                onPress={() => this.onRequestPress()}\r\n                >                                \r\n                <View style={[styles.requestListTextContainer,{\r\n                    marginTop:5,\r\n                }]}>                    \r\n                    <View>\r\n                    <Text style={{fontSize:17,color:'#25345D',fontWeight:'bold'}}>#{this.props.requestId}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={styles.requestListTextContainer}>\r\n                    <View style={styles.requestListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>{this.props.customerName}</Text>\r\n                    </View>\r\n                    <View style={[styles.requestListSecondColumnContainer,{\r\n                        borderRadius:1,\r\n                        borderStyle: 'dashed',\r\n                    }]}>\r\n                    <Text style={{fontSize:17}}>{convertDateTimeToDate(this.props.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.requestCreatedTime)}</Text>                    \r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:16}}>{this.props.requestAddress+', '+this.props.requestTownName+', '+this.props.requestDistrictName}</Text>\r\n                    </View>\r\n                </View>     \r\n                <View style={[styles.requestListTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.requestListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>Số điện thoại:  {this.props.customerPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.requestListSecondColumnContainer}>\r\n                    <Text style={{fontSize:17,color:'#0c59cf'}}>{getStateName(this.props.requestStatus)}</Text>\r\n                    </View>\r\n                    \r\n                </View>                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    requestListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    requestListTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:3,\r\n        paddingTop:3,\r\n    },\r\n    requestListFirstColumnContainer:{\r\n        width:250,\r\n    },\r\n    requestListSecondColumnContainer:{\r\n        width:230,\r\n        marginLeft:20,\r\n        marginRight:50,\r\n\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport RequestListViewItem from './RequestListViewItem'\r\nimport {getApiUrl,componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class RequestListView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            districtsList: this.props.districtList,\r\n            statusSelected: 'all',\r\n            districtSelected: 'all',\r\n            dataChanged: true,\r\n            testsList: this.props.testsList,\r\n            requestList: this.props.requestList,\r\n            requestShowList : this.props.requestList,\r\n            requestCount: this.props.requestList?this.props.requestList.length:'0',\r\n        };\r\n        this.getRequestShowList = this.getRequestShowList.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                requestList: this.props.requestList,\r\n                districtsList: this.props.districtList,\r\n                requestCount: this.props.requestList?this.props.requestList.length:'0', \r\n                dataChanged: !this.state.dataChanged\r\n            }));\r\n        }\r\n    }\r\n\r\n    \r\n    getRequestShowList(){\r\n        if (this.state.statusSelected=='all'){\r\n            if (this.state.districtSelected=='all'){\r\n                return this.state.requestList\r\n            }\r\n            else{\r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                \r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        else{\r\n            if (this.state.districtSelected=='all'){\r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestStatus === this.state.statusSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n            else{                \r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestStatus === this.state.statusSelected && this.state.requestList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        return this.state.requestList\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestListArea}>\r\n            <View style={styles.requestListTopMenuArea}>\r\n                <View style={styles.requestListTopMenuContainer}>\r\n                    <Text style={{fontWeight:'bold'}}>Trạng thái: </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.statusSelected}\r\n                        style={[styles.requestTypeDropdown,{width:360}]}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            statusSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}\r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        <Picker.Item label=\"Đang đợi y tá nhận đơn\" value=\"pending\" />\r\n                        <Picker.Item label=\"Đơn đã được y tá chấp nhận\" value=\"accepted\" />\r\n                        <Picker.Item label=\"Đơn đã được lấy mẫu\" value=\"transporting\" />\r\n                        <Picker.Item label=\"Đang đợi kết quả\" value=\"waitingforresult\" />\r\n                        <Picker.Item label=\"Đơn đã xong\" value=\"closed\" />\r\n                        <Picker.Item label=\"Y tá làm mất mẫu\" value=\"lostsample\" />\r\n                        <Picker.Item label=\"Điều phối viên là mất mẫu\" value=\"coordinatorlostsample\" />\r\n                        <Picker.Item label=\"Đơn đã hủy\" value=\"canceled\" />\r\n                        <Picker.Item label=\"Đã nhận đơn bị mất do điều phối viên\" value=\"reaccepted\" />\r\n                        <Picker.Item label=\"Đang vận chuyển đơn bị mất do điều phối viên\" value=\"retransporting\" />\r\n                        <Picker.Item label=\"Đang đợi lấy lại mẫu do điều phối viên làm mất\" value=\"relostsample\" />\r\n                    </Picker>\r\n                    <Text style={{marginLeft:200,fontWeight:'bold'}}>Quận/Huyện : </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.districtSelected}\r\n                        style={styles.requestTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            districtSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}                    \r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        {this.state.districtsList?this.state.districtsList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />\r\n                        )):null}\r\n                    </Picker>\r\n                </View>\r\n                <View style={styles.requestListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getRequestShowList()?this.getRequestShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.requestListFlatListArea}>\r\n                <FlatList style={styles.requestListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    // showsVerticalScrollIndicator={false}\r\n                    data={this.getRequestShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <RequestListViewItem\r\n                                    requestId={item.requestID}\r\n                                    requestCreatedTime={item.requestCreatedTime}\r\n                                    customerName={item.customerName}\r\n                                    customerPhoneNumber={item.customerPhoneNumber}\r\n                                    customerDOB={item.customerDOB}\r\n                                    requestAddress={item.requestAddress}\r\n                                    requestDistrictName={item.requestDistrictName}\r\n                                    requestTownName={item.requestTownName}\r\n                                    requestMeetingTime={item.requestMeetingTime}\r\n                                    nurseName={item.nurseName}\r\n                                    nurseId={item.nurseID}\r\n                                    coordinatorId={item.coordinatorID}\r\n                                    coordinatorName={item.coordinatorName}\r\n                                    lsSelectedTest={item.lsSelectedTest}\r\n                                    requestAmount={item.requestAmount}\r\n                                    requestStatus={item.requestStatus}\r\n                                    requestTestVersion={item.versionOfTest}\r\n                                    testVersion={this.props.testVersion}\r\n                                    testList={this.state.testsList} \r\n                                    token={this.props.token}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedRequest={this.props.setSelectedRequest?this.props.setSelectedRequest: null}         \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestListTopMenuArea: {\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n        paddingTop:10,\r\n    },\r\n    requestListTopMenuContainer: {\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:10,\r\n        paddingBottom:10,\r\n    },\r\n    requestTypeDropdown:{\r\n        height: 35, \r\n        width: 300,\r\n        borderRadius:5,\r\n        backgroundColor: 'white',\r\n        color:'black'\r\n    },\r\n    requestListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    requestListFlatList:{\r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n    \r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, Text, TextInput, ScrollView, TouchableOpacity} from 'react-native';\r\nimport {convertMoney} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class RequestTestViewItem extends Component {\r\n    \r\n    componentDidMount(){\r\n        // console.log(this.props.testID+' '+this.props.index+' '+this.props.countHide+' '+this.props.math+this.props.backgroundColor)\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <View style={[styles.testItem,{\r\n                backgroundColor:this.props.backgroundColor?this.props.backgroundColor:'white',    \r\n            }]}>\r\n                <View style={styles.testName}>\r\n                    <Text style={{fontSize:15,color:'#25345d'}} >{this.props.testName}</Text>\r\n                </View>\r\n                <View style={styles.testPrice}>\r\n                    <Text style={{fontSize:15,color:'#25345d'}}  >{convertMoney(this.props.testPrice)}</Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testItem:{\r\n        height:45,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        //borderWidth:1,\r\n        //borderColor:'#25345d',\r\n    },\r\n    testName:{\r\n        width: 500,\r\n        height:29,\r\n        paddingLeft:5,\r\n        paddingRight:5,\r\n        paddingTop:3\r\n    },\r\n    testPrice:{\r\n        width: 100,\r\n        height:15,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        marginBottom:2,\r\n        paddingRight:10\r\n    }\r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, Text, TextInput, ScrollView, TouchableOpacity, FlatList, Alert} from 'react-native';\r\nimport RequestTestViewItem from './RequestTestViewItem'\r\nimport {convertMoney} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class RequestTestCategoryItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={        \r\n            visible: false\r\n        }\r\n        this.isVisible = this.isVisible.bind(this);\r\n    }\r\n\r\n    isVisible(){\r\n        let result = false;\r\n        this.props.test.forEach(test => {\r\n            this.props.isSelected(test.testID) == true ? result=true : '';  \r\n        });\r\n        return result;\r\n    }\r\n\r\n    render(){\r\n        const testList = this.props.test;\r\n        let countHide = 0;\r\n        return(\r\n            <View>\r\n            {this.isVisible() ?\r\n            <View>\r\n                <View style={styles.testCategoryItem}  >\r\n                    <View style={styles.testCategoryNameContainer}>\r\n                        <Text style={{fontSize:17,color:''}} >{this.props.categoryName}</Text>\r\n                    \r\n                    </View>\r\n                </View>\r\n                <FlatList \r\n                    style ={styles.TestListAreaScrollView}                        \r\n                    showsVerticalScrollIndicator={false}\r\n                    scrollEnabled={false}\r\n                    data={testList}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item, index}) => {\r\n                            this.props.isSelected(item.testID) ?  null : countHide+=1 ;\r\n                            return ( \r\n                                <View>                                 \r\n                                { this.props.isSelected(item.testID) ?\r\n                                    // <View style={[styles.testItem,{\r\n                                    //     backgroundColor:(parseInt(index)-countHide) % 2 == 0 ? '#EEE': '#FFF',    \r\n                                    // }]}>\r\n                                    //     <View style={styles.testName}>\r\n                                    //         <Text style={{fontSize:15,color:'#25345d'}} >{item.testName}</Text>\r\n                                    //     </View>\r\n                                    //     <View style={styles.testPrice}>\r\n                                    //         <Text style={{fontSize:15,color:'#25345d'}}  >{convertMoney(item.price)}</Text>\r\n                                    //     </View>\r\n                                    // </View>\r\n\r\n                                    <RequestTestViewItem \r\n                                    testName={item.testName}\r\n                                    testPrice={item.price}\r\n                                    testID={item.testID}\r\n                                    // backgroundColor={(parseInt(index)-countHide) % 2 === 0 ? '#EEE': '#FFF'}\r\n                                    backgroundColor='white'\r\n                                    countHide={countHide}\r\n                                    index={index}\r\n                                    math={(parseInt(index)-countHide) % 2 }\r\n                                    /> \r\n                                    : null}    \r\n                                </View>                          \r\n                            );\r\n                        }}\r\n                />\r\n            </View> \r\n            : null }\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testCategoryItem:{\r\n        height:50,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n        borderColor:'#25345d',\r\n              \r\n    },\r\n    TestListAreaScrollView:{\r\n        width: '100%',\r\n        flex:1,\r\n        backgroundColor:'white',\r\n        borderRadius:10,\r\n    },\r\n    testCategoryNameContainer:{\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        height:35,\r\n        paddingLeft:5,\r\n        paddingRight:5,   \r\n    },\r\n    testItem:{\r\n        height:45,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        //borderWidth:1,\r\n        //borderColor:'#25345d',\r\n    },\r\n    testName:{\r\n        width: 500,\r\n        height:29,\r\n        paddingLeft:5,\r\n        paddingRight:5,\r\n        paddingTop:3\r\n    },\r\n    testPrice:{\r\n        width: 100,\r\n        height:15,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        marginBottom:2,\r\n        paddingRight:10\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, getStateName, componentWidth, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport AlertScreen from './../Common/AlertScreen'\r\nimport RequestTestCategoryItem from './RequestTestCategoryItem'\r\n\r\nexport default class RequestView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {        \r\n            testList: this.props.testList,\r\n            resultList: [],\r\n        };\r\n        this.isSelected = this.isSelected.bind(this)\r\n        this.getLeftButtonName = this.getLeftButtonName.bind(this)\r\n        this.getRightButtonName = this.getRightButtonName.bind(this)\r\n        this.onLeftButtonPress = this.onLeftButtonPress.bind(this)\r\n        this.onRightButtonPress = this.onRightButtonPress.bind(this)\r\n        this.callApiTakingSample = this.callApiTakingSample.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.request.requestStatus=='closed') this.callApiResultList()\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n        if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n            if(this.props.request.requestStatus=='closed') this.callApiResultList()\r\n        }\r\n    }\r\n\r\n    callApiResultList () {\r\n        fetch(getApiUrl()+\"/requests/detail/\"+this.props.request.requestId+\"/result\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                result ? result.message? null :\r\n                this.setState(previousState => ({\r\n                    resultList: result,\r\n                })) :null\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    \r\n    isSelected(id) {\r\n        const found = this.props.request?this.props.request.lsSelectedTest.findIndex(test => test == id) : -1;\r\n        let result = false;\r\n        found === -1 ? '' : result = true;\r\n        return result;\r\n    }\r\n\r\n    callApiTakingSample(){\r\n        fetch(getApiUrl()+\"/requests/update/\"+this.props.request.requestId, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    status: 'waitingforresult',\r\n                    userID: this.props.userInfo.id,\r\n                    note: 'Coordinator have take this request',\r\n                }),\r\n                })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                this.props.changeShowView('RequestListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n    \r\n    onTakingSample(){\r\n        this.callApiTakingSample()\r\n        \r\n    }\r\n\r\n    onLostSample(){\r\n        this.props.changeShowView('RequestLostSampleView')\r\n    }\r\n\r\n    onUpdateResult(){\r\n        this.props.changeShowView('RequestUpdateResultView')\r\n    }\r\n\r\n    getLeftButtonName(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                return '';\r\n                break;\r\n            case 'waitingforresult':\r\n                return 'Làm mất mẫu';\r\n                break;            \r\n            default: '';\r\n        }\r\n    }\r\n\r\n    getRightButtonName(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                return 'Xác nhận lấy mẫu';\r\n                break;\r\n            case 'waitingforresult':\r\n                return 'Cập nhật kết quả';\r\n                break;            \r\n            default: ''\r\n        }\r\n    }\r\n\r\n\r\n    onLeftButtonPress(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                \r\n                break;\r\n            case 'waitingforresult':\r\n                this.onLostSample();\r\n                break;\r\n        }\r\n    }\r\n\r\n    onRightButtonPress(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                this.onTakingSample();\r\n                break;\r\n            case 'waitingforresult':\r\n                this.onUpdateResult();\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Chi tiết đơn yêu cầu xét nghiệm</Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>      \r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestId:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                        \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerName:''}</Text>    \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Địa chỉ nhận đơn: </Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestAddress+', '+this.props.request.requestTownName+', '+this.props.request.requestDistrictName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Y tá nhận đơn: </Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.nurseName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Điều phối viên: </Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.coordinatorName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Trạng thái: </Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.request?getStateName(this.props.request.requestStatus):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <FlatList\r\n                                style={styles.rowFlatList}\r\n                                showsVerticalScrollIndicator={false}\r\n                                scrollEnabled={false}\r\n                                data={this.props.request?this.props.request.testList:[]}\r\n                                keyExtractor={(item, index) => index.toString()}\r\n                                renderItem={({ item }) => {\r\n                                    return (\r\n                                        <RequestTestCategoryItem\r\n                                            categoryName={item.testTypeName}\r\n                                            test={item.listTest}\r\n                                            isSelected={this.isSelected}\r\n                                        >\r\n                                        </RequestTestCategoryItem>\r\n                                    );\r\n                                }}\r\n                            >\r\n                        </FlatList>\r\n                    </View>\r\n                    {this.state.resultList.length==0?null:\r\n                    this.state.resultList.map(result => (                        \r\n                    <View style={styles.imagePreviewArea}>\r\n                        {/* <View style={styles.requestRowContainer}>\r\n                            <Text style={[styles.rowTextLong,{fontSize:15,width:600,paddingTop:3}]}>{' '+result.image}</Text>\r\n                        </View> */}\r\n                        <View style={styles.requestRowContainer}>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: result.image}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    ))\r\n                    }\r\n                </View>\r\n\r\n                <View style={styles.buttonArea}>\r\n                    {!this.getLeftButtonName(this.props.request?this.props.request.requestStatus:'') ==''?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onLeftButtonPress(this.props.request?this.props.request.requestStatus:'')}>\r\n                        <Text style={{color:'white'}}>{this.getLeftButtonName(this.props.request?this.props.request.requestStatus:'')}</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>\r\n                    }\r\n                    {!this.getRightButtonName(this.props.request?this.props.request.requestStatus:'')==''?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onRightButtonPress(this.props.request?this.props.request.requestStatus:'')}>\r\n                        <Text style={{color:'white'}}>{this.getRightButtonName(this.props.request?this.props.request.requestStatus:'')}</Text>\r\n                    </TouchableOpacity>  \r\n                    :<View/>\r\n                    }\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    requestArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:17,\r\n        fontWeight:'bold',\r\n        backgroundColor:''\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n    },\r\n    rowFlatList: {\r\n        width: '100%',\r\n        alignSelf: 'stretch',\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        // borderRadius: 10,\r\n        marginTop: 5,\r\n        backgroundColor:'gray'\r\n    },\r\n    rowImage:{\r\n        width:400,\r\n        height:400,\r\n        backgroundColor:'red'\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    imagePreview:{\r\n        height: 800,\r\n        width: 800,\r\n        aspectRatio: 10/10,\r\n        backgroundColor:''\r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class RequestLostSampleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            reason: '',\r\n            error: '',\r\n            errorList: ['','Phải điền lý do làm mất mẫu'],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.lostSample = this.lostSample.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    lostSample(){\r\n        if(this.checkValid()){\r\n            this.callApiLostSample()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.reason == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiLostSample(){\r\n        fetch(getApiUrl()+'/requests/update/'+this.props.request.requestId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            status: 'coordinatorlostsample',\r\n            userID: this.props.userInfo.id,\r\n            note: this.state.reason,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=true : null;\r\n                if (success) \r\n                this.props.changeShowView('RequestListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Báo mất mẫu xét nghiệm: </Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>   \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>        \r\n                        <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{'Lý do mất mẫu: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Điền lý do làm mất mẫu'}\r\n                            name={\"reason\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reason}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.requestConfirmButton} onPress={() => this.props.changeShowView('RequestView')}>\r\n                        <Text style={{color:'white'}}>Quay lại</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.requestConfirmButton} onPress={() => this.lostSample()}>\r\n                        <Text style={{color:'white'}}>Báo mất mẫu</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    requestArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:18,\r\n        fontWeight:'bold',\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n    },\r\n    requestTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    requestConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nexport default class RequestUpdateResultView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            // imageUriList: [{'image':'https://znews-photo.zadn.vn/w1024/Uploaded/jgtnrz/2020_03_23/Rebel_4.jpeg'}],\r\n            imageUriList: [],\r\n            requestTitle: '',\r\n            requestShortContent: '',\r\n            requestContent: '',\r\n            error: '',\r\n            errorList: ['','Bài viết chưa có ảnh min họa'],\r\n\r\n        };\r\n        this.selectPicture = this.selectPicture.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.completeUpdateResult = this.completeUpdateResult.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    completeUpdateResult(){\r\n        if(this.checkValid()){\r\n            this.callApiSetResultImage()\r\n            // this.callApiUpdateRequest()\r\n        }\r\n    }\r\n\r\n    checkValid(){  \r\n        if (this.state.imageUriList.length == 0) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiUpdateRequest(){\r\n        fetch(getApiUrl()+'/requests/update/'+this.props.request.requestId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            status: 'closed',\r\n            userID: this.props.userInfo.id,\r\n            note: 'Đã cập nhật kết quả',\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=true : null;\r\n                if (success) \r\n                this.props.changeShowView('RequestListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    selectPicture = async () =>{\r\n        // console.log(result)\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                // this.callApiSetResultImage(result.uri)\r\n                let tempList = this.state.imageUriList\r\n                tempList.push({'image':result.uri})\r\n                // console.log(tempList)\r\n                this.setState({ imageUriList: tempList });   \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    callApiSetResultImage(){\r\n        let imageList = []\r\n        let index = this.state.imageUriList.length - 1;\r\n        while (index >= 0) {\r\n            imageList.push(this.state.imageUriList[index].image)\r\n            index-=1\r\n        }\r\n        console.log(imageList)\r\n        fetch(getApiUrl()+'/requests/detail/results/add', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            listImage: imageList,\r\n            userID: this.props.userInfo.id,\r\n            requestID: this.props.request.requestId\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=true : null;   \r\n                if(success){\r\n                    this.callApiUpdateRequest()\r\n                }  \r\n                        \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestAddViewArea}>\r\n            <View style={styles.requestAddTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Thêm kết quả xét nghiệm: </Text>                \r\n            </View>\r\n            <View style={styles.requestAddArea}>\r\n                <View style={styles.requestAddContainer}>                    \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>        \r\n                        <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh kết quả: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    {this.state.imageUriList.length==0?null:\r\n                    this.state.imageUriList.map(imageUri => (                        \r\n                    <View style={styles.imagePreviewArea}>\r\n                        {/* <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Text style={[styles.rowTextLong,{fontSize:15,width:600,paddingTop:3}]}>{' '+imageUri.image}</Text>\r\n                        </View> */}\r\n                        <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: imageUri.image}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    ))\r\n                    }\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.requestAddConfirmButton} onPress={() => this.completeUpdateResult()}>\r\n                    <Text>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestAddViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestAddTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    requestAddArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestAddContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:18,\r\n        fontWeight:'bold'\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:18,\r\n    },\r\n    requestTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    requestAddConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    imagePreview:{\r\n        width:600,\r\n        height:600,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getAppointmentStateName, getStateColor, componentWidth} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            testPrice: this.props.testPrice,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                testPrice: this.props.testPrice\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.props.updatePrice?this.props.updatePrice(this.props.testId,value):null\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(        \r\n            <View style={styles.testListItem}>  \r\n                <View style={[styles.testTextContainer,{marginTop:5,}]}>  \r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Loại Test: </Text>\r\n                    </View>\r\n                    <View style={styles.testListSecondColumnContainer}>\r\n                        <Text style={{fontSize:17}}>{this.props.testTypeName}</Text>\r\n                    </View>\r\n                </View>                               \r\n                <View style={styles.testTextContainer}>           \r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Tên Test: </Text>\r\n                    </View>\r\n                    <View style={styles.testListSecondColumnContainer}>\r\n                        <Text style={{fontSize:17}}>{this.props.testName}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={[styles.testTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Giá tiền: </Text>\r\n                    </View>\r\n                    <TextInput style={styles.rowTextInput}\r\n                        placeholder={'nhập giá tiền (VNĐ)'}\r\n                        name={\"testPrice\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.testPrice.toString()}\r\n                        >   \r\n                    </TextInput>\r\n                </View>                     \r\n            </View>      \r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    testListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    testTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:20,\r\n        paddingRight:10,\r\n        paddingBottom:5,\r\n        paddingTop:5,\r\n    },\r\n    testListFirstColumnContainer:{\r\n        width:100,\r\n    },\r\n    testListSecondColumnContainer:{\r\n        width:500,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 100,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput} from 'react-native';\r\nimport TestListItem from './TestListItem'\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class TestUpdateView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            versionSelected:'2',\r\n            versionCreatedTime: null,\r\n            versionCreatorName: null,\r\n            testTypeSelected: 'none',\r\n            testTypeSelectedForCreate: 'none',\r\n            dataChanged: true,\r\n            testList: [],\r\n            testListApi: true,\r\n            testVersionApi: true,\r\n            testListTemp: [],\r\n            versionList: null,\r\n            testName: '',\r\n            testPrice: '',\r\n            newTestId: 1,\r\n            error: '',\r\n            errorList: ['','Phải chọn loại xét nghiệm','Phải điền tên xét nghiệm', 'Phải điền giá xét nghiệm'],\r\n        };\r\n        this.createTest = this.createTest.bind(this)\r\n        this.handleChange= this.handleChange.bind(this)\r\n        this.getTestList = this.getTestList.bind(this)\r\n        this.updatePrice = this.updatePrice.bind(this)\r\n        this.setSelectedVersion = this.setSelectedVersion.bind(this)\r\n        this.callApiUpdateVersion = this.callApiUpdateVersion.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.callApiGetVersionList()\r\n        // this.callApiGetTestList()\r\n    }\r\n\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                // testList: this.props.testList,\r\n                // testListTemp: this.props.testList,\r\n            }));\r\n        }\r\n    }\r\n\r\n    callApiGetVersionList(){\r\n        if(this.state.testVersionApi){\r\n            this.setState(previousState => ({\r\n                testVersionApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/tests/versions/list\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success){\r\n                        this.setState(previousState => ({\r\n                            versionList: result,\r\n                            versionSelected: result[0].versionID,\r\n                            versionCreatedTime: result[0].createdTime,\r\n                            versionCreatorName: result[0].creatorName,\r\n                            testVersionApi: true,\r\n                        }));\r\n                        this.callApiGetTestList()\r\n                    }\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )  \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    createTest(){\r\n        if(this.checkValid()){\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.testListTemp[index].testTypeID == this.state.testTypeSelectedForCreate) {\r\n                    let testList = this.state.testListTemp[index].listTest\r\n                    let newTest = {\r\n                        'testID':(\"new\"+this.state.newTestId),\r\n                        'testName':this.state.testName,                   \r\n                        'price':this.state.testPrice,\r\n                        'testTypeID': this.state.testTypeSelectedForCreate,\r\n                        'testTypeName': this.state.testListTemp[index].testTypeName,\r\n                        }\r\n                    testList.push(newTest)\r\n\r\n                    // let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                    // while(indexTest >= 0){\r\n                    //     var test = this.state.testListTemp[index].listTest[indexTest]\r\n                    //     test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                    //     result.push(test)\r\n                    //     indexTest -=1;\r\n                    // }\r\n                }\r\n                index -= 1;   \r\n            } \r\n        }    \r\n    }\r\n    \r\n    checkValid(){        \r\n        if (this.state.testTypeSelectedForCreate == 'none') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.testName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.testPrice == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiUpdateVersion  = async () => {\r\n        let result = []\r\n        let index = this.state.testListTemp.length - 1;\r\n        while (index >= 0) {\r\n            let indexTest = this.state.testListTemp[index].listTest.length -1\r\n            while(indexTest >= 0){     \r\n                var test = this.state.testListTemp[index].listTest[indexTest]           \r\n                result.push(test)\r\n                indexTest -=1;\r\n            }\r\n            index -= 1;\r\n        }        \r\n        console.log(result)\r\n        fetch(getApiUrl()+'/tests/versions/upgrade-version', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                creatorID: this.props.userInfo.id,\r\n                lsInputTest: result,\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                this.callApiGetVersionList()\r\n                // this.callApiGetTestList()\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    updatePrice(testId,newPrice){\r\n        let result = []\r\n        let index = this.state.testListTemp.length - 1;\r\n        while (index >= 0) {\r\n            var testType = this.state.testListTemp[index]\r\n            let testList = []\r\n            let indexTest = this.state.testListTemp[index].listTest.length -1\r\n            while(indexTest >= 0){\r\n                var test = this.state.testListTemp[index].listTest[indexTest]\r\n                if (test.testID == testId){\r\n                    test.price = newPrice\r\n                } \r\n                testList.push(test)               \r\n                indexTest -=1;\r\n            }\r\n            testType['listTest'] = testList;\r\n            result.push(testType)\r\n            index -= 1;            \r\n        }      \r\n        // console.log(this.state.testListTemp)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    setSelectedVersion(versionId){\r\n        let index = this.state.versionList.length -1\r\n        while(index >= 0){\r\n            var version = this.state.versionList[index]\r\n            if (version.versionID == versionId){\r\n                this.setState({\r\n                    versionSelected: versionId,\r\n                    versionCreatedTime: version.createdTime,\r\n                    versionCreatorName: version.creatorName,\r\n                })\r\n            }     \r\n            index -= 1;\r\n        }      \r\n        this.callApiGetTestList(versionId)\r\n        \r\n        \r\n    }\r\n\r\n    callApiGetTestList(version){\r\n        if(this.state.testListApi){\r\n            this.setState(previousState => ({\r\n                testListApi: false,\r\n            }));\r\n            let url = ''\r\n            if (version) url =  getApiUrl()+\"/tests/versions/list-all-test/\"+version\r\n            else url =  getApiUrl()+\"/tests/versions/lastest-version-test/\"\r\n            fetch(url,{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    let list = []\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    {\r\n                        this.setState(previousState => ({\r\n                            testList: result.lsTests ,\r\n                            testListTemp: result.lsTests ,\r\n                            testListApi: true,\r\n                        }));\r\n                    }\r\n                    else \r\n                    this.setState(previousState => ({\r\n                            testList: [],\r\n                            testListTemp: [],\r\n                            testListApi: true,\r\n                        }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )  \r\n        }\r\n\r\n    }\r\n\r\n    getTestList(){\r\n        if (this.state.testTypeSelected =='none'){\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                while(indexTest >= 0){\r\n                    var test = this.state.testListTemp[index].listTest[indexTest]\r\n                    test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                    result.push(test)\r\n                    indexTest -=1;\r\n                }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        else{\r\n            // console.log(this.state.testTypeSelected)\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n                if (this.state.testListTemp[index].testTypeID == this.state.testTypeSelected) {\r\n                    let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                    while(indexTest >= 0){\r\n                        var test = this.state.testListTemp[index].listTest[indexTest]\r\n                        test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                        result.push(test)\r\n                        indexTest -=1;\r\n                    }\r\n                }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        return this.state.testList\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        \r\n        <View style={styles.testUpdateViewArea}>\r\n            {this.state.testListApi?this.state.testVersionApi?\r\n            <View style={styles.testUpdateViewArea}>\r\n                <View style={styles.testUpdateMenuArea}>\r\n                    <Picker\r\n                        selectedValue={this.state.versionSelected}\r\n                        style={styles.versionDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setSelectedVersion(itemValue)}                    \r\n                        >\r\n                        {this.state.versionList?this.state.versionList.map(version => (\r\n                            <Picker.Item label={version.versionID} value={version.versionID} key={version.versionID}/>\r\n                        )):null}\r\n                    </Picker> \r\n                    <View style={{flexDirection: 'row',}}>\r\n                        <Text style={[styles.rowText,{width:89,fontWeight:'bold'}]}>{\"Cập nhật: \"}</Text>\r\n                        <Text style={[styles.rowText,{width:173}]}>{(this.state.versionCreatedTime?convertDateTimeToDate(this.state.versionCreatedTime)+\"   \"+convertDateTimeToTime(this.state.versionCreatedTime):'')}</Text>   \r\n                    </View>\r\n                    <View style={{flexDirection: 'row',}}>\r\n                        <Text style={[styles.rowText,{width:143,fontWeight:'bold'}]}>{\"Người cập nhật: \"}</Text>  \r\n                        <Text style={[styles.rowText,{width:200}]}>{(this.state.versionCreatorName?this.state.versionCreatorName:'')}</Text> \r\n                    </View>\r\n                    \r\n                    <TouchableOpacity style={styles.testUpdateConfirmButton} onPress={() => this.callApiUpdateVersion()}>\r\n                        <Text style={{color:'white'}}>Cập nhật</Text>\r\n                    </TouchableOpacity>  \r\n                </View>\r\n                \r\n                <View style={styles.testAddArea}>\r\n                    <View style={styles.testUpdateContainer}>\r\n                        <View style={styles.testUpdateRowContainer}>\r\n                            <Text style={[styles.rowText,{fontWeight:'bold'}]}>Loại test: </Text>\r\n                            <Picker\r\n                                selectedValue={this.state.testTypeSelectedForCreate}\r\n                                style={styles.testTypeDropDown}\r\n                                onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                    testTypeSelectedForCreate:itemValue,\r\n                                })}                    \r\n                                >\r\n                                <Picker.Item label=\"Chọn loại xét nghiệm\" value=\"none\" key='none'/>\r\n                                {this.state.testList?this.state.testList.map(testType => (\r\n                                    <Picker.Item label={testType.testTypeName} value={testType.testTypeID} key={testType.testTypeID}/>\r\n                                )):null}\r\n                            </Picker>\r\n                            <TouchableOpacity style={styles.createTestButton} onPress={() => this.createTest()}>\r\n                                <Text style={{color:'white'}}>Tạo bài test</Text>\r\n                            </TouchableOpacity>   \r\n                        </View>\r\n                        <View style={styles.testUpdateRowContainer}>\r\n                            <Text style={[styles.rowText,{fontWeight:'bold'}]}>Tên test:</Text>\r\n                            <TextInput style={styles.rowTextInput}\r\n                                placeholder={'Nhập tên bài test'}\r\n                                name={\"testName\"}\r\n                                onChange={this.handleChange}\r\n                                value={this.state.testName}\r\n                                >                \r\n                            </TextInput>\r\n                        </View>\r\n                        <View style={styles.testUpdateRowContainer}>\r\n                            <Text style={[styles.rowText,{fontWeight:'bold'}]}>Giá tiền:</Text>\r\n                            <TextInput style={styles.rowTextInput}\r\n                                placeholder={'Nhập giá tiền (VNĐ)'}\r\n                                name=\"testPrice\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.testPrice}\r\n                                >                \r\n                            </TextInput>\r\n                        </View>\r\n                        <View style={styles.testUpdateRowContainer}>\r\n                            <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                        </View>\r\n                    </View>    \r\n                </View>\r\n                <View style={styles.testUpdateMenuArea}>\r\n                    <Picker\r\n                        selectedValue={this.state.testTypeSelected}\r\n                        style={styles.testTypeDropDown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            testTypeSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}                    \r\n                        >\r\n                        <Picker.Item label=\"Chọn loại xét nghiệm\" value=\"none\" key='none'/>\r\n                        {this.state.testList?this.state.testList.map(testType => (\r\n                            <Picker.Item label={testType.testTypeName} value={testType.testTypeID} key={testType.testTypeID}/>\r\n                        )):null}\r\n                    </Picker>\r\n                    <Text style={[styles.rowText,{width:500}]}>Số lượng: {this.getTestList()?this.getTestList().length:'0'}</Text>\r\n                </View>\r\n                <View style={styles.testListFlatListArea}>        \r\n                    <FlatList style={styles.testListFlatList}\r\n                        contentContainerStyle={{\r\n                            alignItems: 'center',\r\n                            justifyContent: 'flex-start',\r\n                        }}\r\n                        showsVerticalScrollIndicator={false}\r\n                        data={this.getTestList()}\r\n                        extraData={this.state.dataChanged}\r\n                        keyExtractor={(item, index) => index.toString()}\r\n                        renderItem={({item}) => {\r\n                                return (\r\n                                    <View>                                \r\n                                    <TestListItem\r\n                                        testId={item.testID}       \r\n                                        testName={item.testName}                             \r\n                                        testPrice={item.price}\r\n                                        testTypeId={item.testTypeID}  \r\n                                        testTypeName={item.testTypeName}  \r\n                                        updatePrice={this.updatePrice}                                                                   \r\n                                    />   \r\n                                    </View>                             \r\n                                );\r\n                            }}\r\n                        >                   \r\n                    </FlatList>        \r\n                </View>\r\n                \r\n            </View>\r\n            :\r\n            <View style={{height:300,flexDirection: 'row',alignItems: 'center',justifyContent: 'center',}}>\r\n                <Text>Hệ thống đang chạy, vui lòng đợi ...</Text>\r\n            </View>\r\n            :\r\n            <View style={{height:300,flexDirection: 'row',alignItems: 'center',justifyContent: 'center',}}>\r\n                <Text>Hệ thống đang chạy, vui lòng đợi ...</Text>\r\n            </View>\r\n            }\r\n        </View>\r\n        \r\n        \r\n    );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    testUpdateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    testUpdateMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    versionDropdown:{\r\n        padding:3,\r\n        width: 200,\r\n        borderRadius:5,\r\n        marginRight:30,\r\n    },\r\n    testAddArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginBottom:10,\r\n    },\r\n    testUpdateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    testUpdateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        \r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    testTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    testUpdateConfirmButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:50,\r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    testListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    testListFlatList:{\r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, Image, ImageBackground, Dimensions } from 'react-native';\r\nimport {screenWidth} from './CommonFunction'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    \r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.headerContainer} \r\n            // source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.textArea}>\r\n                <Text>Hệ thống đang chạy, vui lòng đợi ...</Text>\r\n            </View>\r\n            \r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst centerHeight=600\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        height:centerHeight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    },\r\n    textArea:{\r\n        backgroundColor:''\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions} from 'react-native';\r\n\r\nimport PageHeader from './PageHeader'\r\nimport PageFooter from './PageFooter'\r\n\r\nimport AccountListView from './AccountManagement/AccountListView'\r\nimport AccountCreateView from './AccountManagement/AccountCreateView'\r\nimport AccountView from './AccountManagement/AccountView'\r\nimport AccountChangePasswordView from './AccountManagement/AccountChangePasswordView'\r\n\r\n\r\nimport AppointmentListView from './Appointment/AppointmentListView'\r\nimport AppointmentView from './Appointment/AppointmentView'\r\nimport AppointmentRejectView from './Appointment/AppointmentRejectView'\r\n\r\nimport ArticleListView from './Article/ArticleListView'\r\nimport ArticleAddView from './Article/ArticleAddView'\r\nimport ArticleView from './Article/ArticleView'\r\n\r\nimport LoginView from './Authentication/LoginView'\r\n\r\nimport RequestListView from './Request/RequestListView'\r\nimport RequestView from './Request/RequestView'\r\nimport RequestLostSampleView from './Request/RequestLostSampleView'\r\nimport RequestUpdateResultView from './Request/RequestUpdateResultView'\r\n\r\nimport TestUpdateView from './Test/TestUpdateView'\r\n\r\nimport AlertScreen from './Common/AlertScreen'\r\n\r\nimport {getApiUrl, screenWidth} from './Common/CommonFunction'\r\nimport LoadingView from './Common/LoadingView'\r\nimport userList  from './../Data/userList'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            //screen function\r\n            Button1Selected: true,\r\n            Button2Selected: false,\r\n            Button3Selected: false,\r\n            Button4Selected: false,\r\n            Button5Selected: false,\r\n            dataChanged: true,\r\n            showView: 'RequestListView',\r\n\r\n            //authentication\r\n            logIn: false,\r\n            userInfo: null,\r\n            // logIn: true,\r\n            // userInfo: userList[0],\r\n            token: '',\r\n            \r\n            //request\r\n            requestList: null,\r\n            requestListApi: true,\r\n            selectedRequest: null,\r\n\r\n            //appointment\r\n            appointmentList: null,\r\n            appointmentListApi: true,\r\n            selectedAppointment: null,\r\n\r\n            //article\r\n            articleList: null,\r\n            articleListApi: true,\r\n            selectedArticle : null,\r\n\r\n            //test\r\n            testList: [],\r\n            testListApi: true,\r\n            testVersion: '',\r\n\r\n            //account\r\n            userList: null,\r\n            userListApi: true,\r\n            selectedAccount: null,\r\n\r\n            //other data\r\n            districtList: null,\r\n\r\n        };\r\n        this.loginSuccess = this.loginSuccess.bind(this)\r\n        this.logOut = this.logOut.bind(this)\r\n        this.searchRequest = this.searchRequest.bind(this)\r\n        this.menuButtonPress = this.menuButtonPress.bind(this)\r\n        this.changeShowView = this.changeShowView.bind(this)\r\n        this.setSelectedArticle = this.setSelectedArticle.bind(this)\r\n        this.setSelectedRequest = this.setSelectedRequest.bind(this)\r\n        this.setSelectedAppointment = this.setSelectedAppointment.bind(this)\r\n        this.setSelectedAccount = this.setSelectedAccount.bind(this)\r\n        this.updateUserInfo = this.updateUserInfo.bind(this)\r\n        this.searchUser = this.searchUser.bind(this)\r\n        \r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        console.log(Dimensions.get('window').width)\r\n        // console.log(this.state.userInfo)\r\n        // this.callApiRequestList()\r\n        // this.callApiTestList()\r\n        // this.callApiArticleList()\r\n        // this.callApiUserList()\r\n        // this.callApiAppointmentList()\r\n        // this.callApiDistrictList()\r\n        // setInterval(()=>{\r\n        //     console.log('try again')\r\n        //     this.callApiRequestList()\r\n        //     this.callApiArticleList()\r\n        //     this.callApiUserList()\r\n        //     this.callApiAppointmentList()\r\n        // },5000)\r\n    }\r\n\r\n    changeShowView(newView){\r\n        if (newView=='RequestListView') this.menuButtonPress('1')\r\n        if (newView=='AppointmentListView') this.menuButtonPress('2')\r\n        if (newView=='ArticleListView') this.menuButtonPress('3')\r\n        if (newView=='AccountListView') this.menuButtonPress('5')\r\n        this.setState(previousState => ({ \r\n            showView: newView,\r\n        }))\r\n    }\r\n\r\n    setSelectedArticle(_article){        \r\n        this.setState(previousState => ({ \r\n            selectedArticle: _article,\r\n        }))\r\n    }\r\n\r\n    setSelectedRequest(_request){        \r\n        this.setState(previousState => ({ \r\n            selectedRequest: _request,\r\n        }))\r\n    }\r\n\r\n    setSelectedAppointment(_appointment){    \r\n        // console.log(_appointment)    \r\n        this.setState(previousState => ({ \r\n            selectedAppointment: _appointment,\r\n        }))\r\n    }\r\n\r\n    setSelectedAccount(_account){ \r\n        // console.log(_account)       \r\n        this.setState(previousState => ({ \r\n            selectedAccount: _account,\r\n        }))\r\n    }\r\n\r\n    updateUserInfo(_userInfo){\r\n        this.setState(previousState => ({ \r\n            userInfo: _userInfo,\r\n        }))\r\n    }\r\n\r\n    searchRequest(requestId){\r\n        console.log(requestId)\r\n        let request = null\r\n        let index = this.state.requestList.length - 1;\r\n        while (index >= 0) {\r\n            // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n            if (this.state.requestList[index].requestID == requestId) {\r\n                request = this.state.requestList[index]\r\n                console.log(request)\r\n                if(this.state.testVersion != request.versionOfTest){\r\n                    fetch(getApiUrl()+\"/tests/versions/list-all-test/\"+request.versionOfTest,{\r\n                        method: 'GET',\r\n                        headers: {\r\n                            Accept: 'application/json',\r\n                            'Content-Type': 'application/json',\r\n                            Authorization: 'Bearer '+this.state.token,\r\n                        }\r\n                    })\r\n                    .then(res => res.json())\r\n                    .then(\r\n                        (result) => {\r\n                            console.log(result)\r\n                            let success = false\r\n                            let list = []\r\n                            result ? result.message? null : success=true : null;\r\n                            if (success)\r\n                            {\r\n                                this.changeToRequestViewScreen(request,result.lsTests)\r\n                                return false\r\n                            }\r\n                        },            \r\n                        (error) => {\r\n                            console.log(error)\r\n                        }\r\n                    )  \r\n                }\r\n                else this.changeToRequestViewScreen(request,this.state.testList);\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    changeToRequestViewScreen(_request,testList){\r\n        const request= { \r\n            \"requestId\": _request.requestID,\r\n            \"requestCreatedTime\":_request.requestCreatedTime,\r\n            \"customerName\":_request.customerName,\r\n            \"customerPhoneNumber\":_request.customerPhoneNumber,\r\n            \"customerDOB\":_request.customerDOB,\r\n            \"requestAddress\":_request.requestAddress,\r\n            \"requestDistrictName\":_request.requestDistrictName,\r\n            \"requestTownName\": _request.requestTownName,\r\n            \"requestMeetingTime\": _request.requestMeetingTime,\r\n            \"nurseName\":_request.nurseName,\r\n            \"nurseID\":_request.nurseID,\r\n            \"coordinatorName\":_request.coordinatorName,\r\n            \"coordinatorId\":_request.coordinatorID,\r\n            \"lsSelectedTest\":_request.lsSelectedTest,\r\n            \"requestAmount\":_request.requestAmount,\r\n            \"requestStatus\":_request.requestStatus,\r\n            \"testList\":testList,\r\n            \"requestTestVersion\":_request.versionOfTest,\r\n            }\r\n        this.setSelectedRequest(request)\r\n        this.changeShowView('RequestView')\r\n    }\r\n\r\n    searchUser(userPhoneNumber){\r\n        console.log(userPhoneNumber)\r\n        let account = null\r\n        let index = this.state.userList.length - 1;\r\n        while (index >= 0) {\r\n            // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n            if (this.state.userList[index].phoneNumber == userPhoneNumber) {\r\n                account = this.state.userList[index]\r\n                console.log(account)\r\n                this.changeToAccountViewScreen(account);\r\n            }\r\n            index -= 1;\r\n        }   \r\n    }\r\n\r\n    changeToAccountViewScreen(_account){\r\n        const account= { \r\n            'accountId':_account.id, \r\n            'accountPhoneNumber':_account.phoneNumber,                      \r\n            'accountName':_account.name,\r\n            'accountDob':_account.dob,\r\n            'accountAddress':_account.address,\r\n            'accountPassword':_account.password,\r\n            'accountActive':_account.active,\r\n            'accountEmail':_account.email,\r\n            'accountRole':_account.role,\r\n            'accountGender':_account.gender,\r\n            'accountImageUrl':_account.image,\r\n            'accountTownCode':_account.townCode,\r\n            'accountDistrictCode':_account.districtCode,\r\n            }\r\n        this.setSelectedAccount(account)\r\n        this.changeShowView('AccountView')\r\n\r\n    }\r\n\r\n    loginSuccess(_userInfo,_token){\r\n        this.setState(previousState => ({ \r\n            logIn: true,\r\n            userInfo: _userInfo,\r\n            token: _token,\r\n        }))\r\n        setTimeout(() => {\r\n            this.callApiRequestList()\r\n            // this.callApiTestList()\r\n            // this.callApiArticleList()\r\n            // this.callApiUserList()\r\n            // this.callApiAppointmentList()\r\n            this.callApiDistrictList()\r\n        }, 10);\r\n    }\r\n\r\n    logOut(){\r\n        this.setState(previousState => ({ \r\n            logIn: false,\r\n            userInfo: null,\r\n            token: null,\r\n        }))\r\n    }\r\n\r\n    menuButtonPress(button){\r\n        if (button==\"1\") this.callApiRequestList()\r\n        if (button==\"2\") this.callApiAppointmentList()\r\n        if (button==\"3\") this.callApiArticleList()\r\n        if (button==\"5\") this.callApiUserList()\r\n        this.setState(previousState => ({ \r\n            Button1Selected: button==\"1\"?true:false,\r\n            Button2Selected: button==\"2\"?true:false,\r\n            Button3Selected: button==\"3\"?true:false,\r\n            Button4Selected: button==\"4\"?true:false,\r\n            Button5Selected: button==\"5\"?true:false,\r\n            showView:   button==\"1\"? 'RequestListView': \r\n                        button==\"2\"? 'AppointmentListView': \r\n                        button==\"3\"? 'ArticleListView':  \r\n                        button==\"4\"? 'TestUpdateView':  \r\n                        button==\"5\"? 'AccountListView': 'RequestListView'\r\n                        ,\r\n            dataChanged: !this.state.dataChanged,\r\n        }))\r\n    }\r\n\r\n\r\n    callApiRequestList= async () => {\r\n        if(this.state.requestListApi){\r\n            this.setState(previousState => ({\r\n                requestListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/requests/list-all-request\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        requestList: result,\r\n                        requestListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    callApiAppointmentList= async () =>  {\r\n        if(this.state.appointmentListApi){\r\n            this.setState(previousState => ({\r\n                appointmentListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/appointments/list\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        appointmentList: result,\r\n                        appointmentListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    callApiArticleList= async () =>  {\r\n        if(this.state.articleListApi){\r\n            this.setState(previousState => ({\r\n                articleListApi: true,\r\n            }));\r\n            fetch(getApiUrl()+\"/articles/list\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        articleList: result,\r\n                        articleListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    callApiUserList= async () =>  {\r\n        if(this.state.userListApi){\r\n            this.setState(previousState => ({\r\n                userListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/users/list-all-user\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        userList: result,\r\n                        userListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n    \r\n    callApiTestList = async () => {\r\n        if(this.state.testListApi){\r\n            this.setState(previousState => ({\r\n                testListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/tests/versions/lastest-version-test/\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        testList: result.lsTests,\r\n                        testVersion: result.versionID,\r\n                        testListApi: true,\r\n                    }));\r\n                },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )  \r\n        }\r\n    }\r\n\r\n    callApiDistrictList = async () => {\r\n        fetch(getApiUrl()+\"/management/districts/district-town-list\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    districtList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <View style={{flex:1}}>\r\n            <PageHeader userInfo={this.state.userInfo?this.state.userInfo:null} changeShowView={this.state.userInfo?this.changeShowView:null}  setSelectedAccount={this.state.userInfo?this.setSelectedAccount:null} logOut={this.state.userInfo?this.logOut:null} searchRequest={this.searchRequest}/>\r\n            { !this.state.logIn ?\r\n            <LoginView loginSuccess={this.loginSuccess}/>\r\n            // <AlertScreen/>\r\n            :\r\n            <View style={styles.listAreaContainer}>\r\n                <View style={styles.topMenu}>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? screenWidth/4 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button1Selected ? 1:0,\r\n                        backgroundColor: this.state.Button1Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('1')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Yêu cầu xét nghiệm</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? screenWidth/4 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button2Selected ? 1:0,\r\n                        backgroundColor: this.state.Button2Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('2')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Cuộc Hẹn</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? screenWidth/4 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button3Selected ? 1:0,\r\n                        backgroundColor: this.state.Button3Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('3')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Bài đăng</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? screenWidth/4 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button4Selected ? 1:0,\r\n                        backgroundColor: this.state.Button4Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('4')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Test</Text>\r\n                    </TouchableOpacity>\r\n                    {this.state.userInfo.role=='COORDINATOR'? null :\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? 0 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button5Selected ? 1:0,\r\n                        backgroundColor: this.state.Button5Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('5')}\r\n                        >\r\n                        <Text style={styles.topMenuText}>Quản lý tài khoản</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                </View>                \r\n                <View style={{width:'100%',flex:1,backgroundColor:''}}>\r\n                {\r\n                    this.state.showView == 'RequestListView'? this.state.requestListApi?\r\n                    <RequestListView requestList={this.state.requestList} testVersion={this.state.testVersion} changeShowView={this.changeShowView} setSelectedRequest={this.setSelectedRequest} districtList={this.state.districtList} token={this.state.token}/>: <LoadingView  />\r\n                    : this.state.showView == 'AppointmentListView'? this.state.appointmentListApi?\r\n                    <AppointmentListView appointmentList={this.state.appointmentList} changeShowView={this.changeShowView} setSelectedAppointment={this.setSelectedAppointment} districtList={this.state.districtList}/>: <LoadingView  />\r\n                    : this.state.showView == 'ArticleListView'? this.state.articleListApi?\r\n                    <ArticleListView  articleList={this.state.articleList} changeShowView={this.changeShowView} setSelectedArticle={this.setSelectedArticle}/>: <LoadingView  />\r\n                    : this.state.showView == 'TestUpdateView'?\r\n                    <TestUpdateView  testList={this.state.testList} userInfo={this.state.userInfo} token={this.state.token}/>\r\n                    : this.state.showView == 'AccountListView'? this.state.userListApi?\r\n                    <AccountListView userList={this.state.userList}  changeShowView={this.changeShowView} setSelectedAccount={this.setSelectedAccount} searchUser={this.searchUser}/>: <LoadingView  />\r\n                    // sub screen\r\n                    //request\r\n                    : this.state.showView == 'RequestView'?\r\n                    <RequestView  request={this.state.selectedRequest} testList={this.state.testList} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'RequestLostSampleView'?\r\n                    <RequestLostSampleView  request={this.state.selectedRequest} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'RequestUpdateResultView'?\r\n                    <RequestUpdateResultView  request={this.state.selectedRequest} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    //appointment\r\n                    : this.state.showView == 'AppointmentView'?\r\n                    <AppointmentView  appointment={this.state.selectedAppointment} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'AppointmentRejectView'?\r\n                    <AppointmentRejectView appointment={this.state.selectedAppointment} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    //article\r\n                    : this.state.showView == 'ArticleAddView'?\r\n                    <ArticleAddView   token={this.state.token}  userInfo={this.state.userInfo} changeShowView={this.changeShowView} />\r\n                    : this.state.showView == 'ArticleView'?\r\n                    <ArticleView  article={this.state.selectedArticle} />\r\n                    //account\r\n                    : this.state.showView == 'AccountCreateView'?\r\n                    <AccountCreateView  districtList={this.state.districtList} token={this.state.token}/>\r\n                    : this.state.showView == 'AccountView'?\r\n                    <AccountView  districtList={this.state.districtList}  account={this.state.selectedAccount} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo}/>\r\n                    : this.state.showView == 'AccountChangePasswordView'?\r\n                    <AccountChangePasswordView account={this.state.selectedAccount} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo} />\r\n                    : <View/>\r\n                    \r\n                }\r\n                </View>\r\n                <PageFooter/>\r\n            </View>\r\n            }\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst menuHeight= 50\r\n\r\nconst styles = StyleSheet.create({\r\n    listAreaContainer: {\r\n        flex: 1,\r\n        width: screenWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    topMenu:{\r\n        height: menuHeight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor:'white'\r\n    },\r\n    topMenuButton:{\r\n        width: screenWidth/parseFloat(5),\r\n        height: menuHeight,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    topMenuText:{\r\n        fontSize:18,\r\n    }\r\n\r\n});\r\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport ListScreen from './components/ListScreen'\n\nexport default function App() {\n  return (\n      <ListScreen/>\n    // <View style={styles.container}>\n    //   <Text>Open up App.js to start working on your app!</Text>\n    // </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/MedTestForCoordinator/expo-service-worker.js', { scope: '/MedTestForCoordinator/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}