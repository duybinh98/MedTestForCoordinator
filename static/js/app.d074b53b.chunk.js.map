{"version":3,"sources":["Data/requestList.js","Data/districtList.js","Data/appointmentList.js","Data/userList.js","components/PageHeader.js","components/Common/CommonFunction.js","components/AccountManagement/AccountListViewItem.js","components/AccountManagement/AccountListView.js","components/AccountManagement/AccountCreateView.js","components/AccountManagement/AccountView.js","components/AccountManagement/AccountChangePasswordView.js","components/Appointment/AppointmentListViewItem.js","components/Appointment/AppointmentListView.js","components/Appointment/AppointmentView.js","components/Appointment/AppointmentRejectView.js","components/Article/ArticleListViewItem.js","components/Article/ArticleListView.js","components/Article/ArticleAddView.js","components/Article/ArticleView.js","components/Authentication/LoginView.js","components/Request/RequestListViewItem.js","components/Request/RequestListView.js","components/Request/RequestTestViewItem.js","components/Request/RequestTestCategoryItem.js","components/Request/RequestView.js","components/Request/RequestLostSampleView.js","components/Request/RequestUpdateResultView.js","components/Test/TestListItem.js","components/Test/TestUpdateView.js","components/ListScreen.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","ListScreen","props","state","editProfile","bind","this","userInfo","account","id","phoneNumber","name","dob","address","password","active","email","role","gender","image","townCode","districtCode","changeShowView","setSelectedAccount","ImageBackground","style","styles","headerContainer","source","resizeMode","View","leftArea","titleContainer","Text","fontSize","fontWeight","color","hotlineContainer","middleArea","TextInput","searchInputContainer","placeholder","rightArea","Image","width","height","uri","TouchableOpacity","nameContainer","onPress","Component","StyleSheet","create","flexDirection","alignItems","justifyContent","backgroundColor","padding","borderWidth","marginTop","flex","borderRadius","paddingLeft","convertDateTimeToDate","inputString","substring","convertDateTimeToTime","convertDateToDateTime","inputDate","getRoleName","getStateName","status","getAppointmentStateName","AccountListViewItem","onAccountPress","accountId","accountPhoneNumber","accountName","accountDob","accountAddress","accountPassword","accountActive","accountEmail","accountRole","accountGender","accountImageUrl","accountTownCode","accountDistrictCode","accountListItem","accountNameContainer","accountPhoneContainer","accountRoleContainer","alignSelf","Dimensions","get","paddingBottom","margin","marginRight","AccountListScreen","Button1Selected","Button2Selected","Button3Selected","Button4Selected","districtsList","districtList","accountSelected","userList","dataChanged","menuButtonPress","getAccountShowList","result","index","length","push","button","setState","previousState","Button5Selected","prevProps","prevState","articleListArea","accountListTopMenuArea","accountListTopMenuContainer","topMenuTextInput","createNewAccountButton","topMenuButton","roleSelectedColor","topMenuText","articleListFlatListArea","articleListFlatListTitleArea","articleListFlatListTitleContainer","articleListTitleNameContainer","articleListTitleText","articleListTitlePhoneContainer","articleListTitleRoleContainer","FlatList","articleListFlatList","contentContainerStyle","showsVerticalScrollIndicator","data","extraData","keyExtractor","item","toString","renderItem","paddingTop","paddingRight","TestListView","accountRePassword","townList","listTown","districtSelected","townSelected","year","Date","getFullYear","month","getMonth","day","getDate","error","errorList","handleChange","onDistrictChange","createNumberPickerList","getNumberOfDayInMonth","createAccount","event","target","value","districtId","getFebDay","start","end","startToEnd","i","Picker","Item","label","parseInt","checkValid","callApiCreateAccount","fetch","getApiUrl","method","headers","Accept","Authorization","token","body","JSON","stringify","getDob","then","res","json","console","log","success","message","accountCreateViewArea","accountCreateMenuArea","rowText","accountCreateArea","accountCreateContainer","accountCreateRowContainer","rowTextInput","onChange","selectedValue","accountTypeDropDown","onValueChange","itemValue","itemIndex","secureTextEntry","map","district","districtName","town","townName","rowTextError","accountCreateConfirmButton","marginBottom","createTestButton","marginLeft","accountListFlatListArea","accountListFlatList","updateAccountInformation","resetPassword","checkCurrentUser","checkAdmin","changePassword","userProcessingID","callApiUpdateAccountInfo","updateUserInfo","rowTextLong","buttonArea","accountOldPassword","callApiChangePassword","url","oldPassword","newPassword","AppointmentListView","onAppointmentPress","appointment","appointmentId","appointmentCreatedTime","customerName","customerPhoneNumber","customerDOB","appointmentMeetingTime","appointmentStatus","setSelectedAppointment","appointmentListItem","appointmentTextContainer","appointmentListFirstColumnContainer","appointmentListSecondColumnContainer","borderStyle","statusSelected","testsList","appointmentList","getAppointmentShowList","requestDistrictID","appointment_status","appointmentListArea","appointmentListTopMenuArea","appointmentListTopMenuContainer","appointmentTypeDropdown","appointmentListFlatListArea","appointmentListFlatList","appointment_id","appointment_createdTime","appointment_customerName","appointment_phoneNumber","appointment_DOB","appointment_meetingTime","AppointmentView","onAccept","onReject","_status","coordinatorID","note","callApiAcceptAppointment","appointmentViewArea","appointmentTopMenuArea","appointmentArea","appointmentContainer","appointmentRowContainer","rowFirstContainer","rowSecondContainer","AppointmentLostSampleView","reason","rejectAppointment","callApiRejectAppointment","multiline","numberOfLines","appointmentConfirmButton","appointmentTypeDropDown","addImageButton","imagePreview","ArticleListViewItem","onArticlePress","article","articleId","articleTitle","articleContent","articleShortContent","articleImageUrl","userId","articleCreatedTime","creatorName","setSelectedArticle","articleListItem","articleImageContainer","articleImage","articleTextContainer","articleTextContentContainer","articleTitleContainer","articleCreateTimeContainer","articleShortContentContainer","textAlign","articleTextCreatorNameContainer","articleCreatorNameContainer","ArticleListScreen","articleList","articleListTopMenuArea","createNewArticleButton","tittle","shortContent","content","userID","createdTime","ArticleAddView","selectPicture","a","async","ImagePicker","cancelled","callApiUploadImage","imageResultUri","createArticle","callApiCreateArticle","_data","articleAddViewArea","articleAddTopMenuArea","articleAddArea","articleAddContainer","articleAddRowContainer","articleAddConfirmButton","articleTypeDropDown","ArticleView","imageUri","imageType","articleViewArea","articleArea","articleContainer","articleRowContainer","rowImage","articleTopMenuArea","Login","callApiLogin","loginSuccess","loginViewArea","rowContainer","loginButton","login","RequestListPendingItem","onRequestPress","request","requestId","requestCreatedTime","requestAddress","requestDistrictName","requestTownName","requestMeetingTime","nurseName","nurseID","lsSelectedTest","requestAmount","requestStatus","setSelectedRequest","requestListItem","requestListTextContainer","requestListFirstColumnContainer","requestListSecondColumnContainer","RequestListView","requestList","requestShowList","requestCount","getRequestShowList","requestListArea","requestListTopMenuArea","requestListTopMenuContainer","requestTypeDropdown","requestListFlatListArea","requestListFlatList","requestID","testList","RequestTestViewItem","testItem","testName","testPrice","_price","price","convertMoney","RequestTestCategoryItem","visible","isVisible","test","forEach","isSelected","testID","countHide","testCategoryItem","testCategoryNameContainer","categoryName","TestListAreaScrollView","scrollEnabled","math","borderColor","RequestView","getLeftButtonName","getRightButtonName","onLeftButtonPress","onRightButtonPress","findIndex","onLostSample","onTakingSample","onUpdateResult","requestViewArea","requestTopMenuArea","requestArea","requestContainer","requestRowContainer","rowFlatList","testTypeName","listTest","RequestLostSampleView","lostSample","callApiLostSample","requestConfirmButton","requestTypeDropDown","RequestUpdateResultView","imageUriList","requestTitle","requestShortContent","requestContent","completeUpdateResult","callApiUpdateRequest","callApiSetResultImage","tempList","setTimeout","requestAddViewArea","requestAddTopMenuArea","requestAddArea","requestAddContainer","requestAddConfirmButton","updatePrice","testId","testListItem","testTextContainer","testListFirstColumnContainer","testListSecondColumnContainer","TestUpdateView","callApiUpdateVersion","testListTemp","indexTest","creatorID","lsInputTest","callApiGetVersionList","versionSelected","versionCreatedTime","versionCreatorName","testTypeSelected","testTypeSelectedForCreate","versionList","newTestId","createTest","getTestList","setSelectedVersion","versionID","callApiGetTestList","testTypeID","newTest","newPrice","testType","versionId","version","lsTests","testUpdateViewArea","testUpdateMenuArea","versionDropdown","key","testUpdateConfirmButton","testUpdateArea","testUpdateContainer","testUpdateRowContainer","testTypeDropDown","testListFlatListArea","testListFlatList","testTypeId","callApiRequestList","callApiAppointmentList","callApiArticleList","articlesList","callApiUserList","callApiTestList","callApiDistrictList","showView","logIn","selectedRequest","selectedAppointment","selectedArticle","selectedAccount","newView","_article","_request","_appointment","_account","_userInfo","_token","WIDTH","listAreaContainer","topMenu","App","container","navigator","window","addEventListener","serviceWorker","register","scope","info","catch"],"mappings":"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","file":"static/js/app.d074b53b.chunk.js","sourcesContent":["var requestList = [\r\n    {\r\n        \"requestID\":\"1\",\r\n        \"customerID\":\"2\",\r\n        \"customerName\":\"Phạm Lê Quỳnh Lam\",\r\n        \"customerPhoneNumber\":\"0111111111\",\r\n        \"customerDOB\":\"1998-12-13T00:00:00.000+0000\",\r\n        \"requestAddress\":\"Số 123 ngõ 4 Phường Yên Phụ Quận Hai Bà Trưng\",\r\n        \"requestMeetingTime\":\"2020-03-15T21:04:27.000+0000\",\r\n        \"requestStatus\":\"closed\",\r\n        \"requestCreatedTime\":\"2020-03-23T10:17:18.000+0000\",\r\n        \"nurseID\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"nurseName\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"coordinatorID\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"coordinatorName\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"requestAmount\":\"700000\",\r\n        \"requestNote\":\"Customer số 1 đã huỷ\",\r\n        \"lsSelectedTest\":[\"1\",\"2\",\"3\",\"4\",\"5\"]\r\n    },\r\n    {\r\n        \"requestID\":\"2\",\r\n        \"customerID\":\"2\",\r\n        \"customerName\":\"Phạm Lê Quỳnh Lam\",\r\n        \"customerPhoneNumber\":\"0111111111\",\r\n        \"customerDOB\":\"1998-12-13T00:00:00.000+0000\",\r\n        \"requestAddress\":\"Số 123 ngõ 4 Phường Yên Phụ Quận Hai Bà Trưng\",\r\n        \"requestMeetingTime\":\"2020-03-15T21:04:27.000+0000\",\r\n        \"requestStatus\":\"closed\",\r\n        \"requestCreatedTime\":\"2020-03-23T10:17:18.000+0000\",\r\n        \"nurseID\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"nurseName\":\"NOT HAVE ANY NURSE YET!\",\r\n        \"coordinatorID\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"coordinatorName\":\"NOT HAVE ANY COORDINATOR YET!\",\r\n        \"requestAmount\":\"700000\",\r\n        \"requestNote\":\"Customer số 1 đã huỷ\",\r\n        \"lsSelectedTest\":[\"1\",\"2\",\"3\",\"4\",\"5\"]\r\n    },\r\n]\r\n\r\n\r\nmodule.exports = requestList;\r\n","var districtList = [\r\n                {\r\n                    \"districtCode\": \"D0\",\r\n                    \"districtName\": \"Default\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D1\",\r\n                    \"districtName\": \"Quận Ba Đình\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D10\",\r\n                    \"districtName\": \"Quận Bắc Từ Liêm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D11\",\r\n                    \"districtName\": \"Huyện Thanh Trì\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D12\",\r\n                    \"districtName\": \"Huyện Gia Lâm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D13\",\r\n                    \"districtName\": \"Huyện Đông Anh\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D14\",\r\n                    \"districtName\": \"Huyện Sóc Sơn\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D15\",\r\n                    \"districtName\": \"Quận Hà Đông\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D16\",\r\n                    \"districtName\": \"Thị xã Sơn Tây\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D17\",\r\n                    \"districtName\": \"Huyện Ba Vì\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D18\",\r\n                    \"districtName\": \"Huyện Phúc Thọ\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D19\",\r\n                    \"districtName\": \"Huyện Thạch Thất\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D2\",\r\n                    \"districtName\": \"Quận Hoàn Kiếm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D20\",\r\n                    \"districtName\": \"Huyện Quốc Oai\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D21\",\r\n                    \"districtName\": \"Huyện Chương Mỹ\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D22\",\r\n                    \"districtName\": \"Huyện Đan Phượng\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D23\",\r\n                    \"districtName\": \"Huyện Hoài Đức\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D24\",\r\n                    \"districtName\": \"Huyện Thanh Oai\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D25\",\r\n                    \"districtName\": \"Huyện Mỹ Đức\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D26\",\r\n                    \"districtName\": \"Huyện Ứng Hòa\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D27\",\r\n                    \"districtName\": \"Huyện Thường Tín\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D28\",\r\n                    \"districtName\": \"Huyện Phú Xuyên\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D29\",\r\n                    \"districtName\": \"Huyện Mê Linh\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D3\",\r\n                    \"districtName\": \"Quận Hai Bà Trưng\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D30\",\r\n                    \"districtName\": \"Quận Nam Từ Liêm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D31\",\r\n                    \"districtName\": \"Huyện Từ Liêm\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D4\",\r\n                    \"districtName\": \"Quận Đống Đa\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D5\",\r\n                    \"districtName\": \"Quận Tây Hồ\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D6\",\r\n                    \"districtName\": \"Quận Cầu Giấy\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D7\",\r\n                    \"districtName\": \"Quận Thanh Xuân\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D8\",\r\n                    \"districtName\": \"Quận Hoàng Mai\"\r\n                },\r\n                {\r\n                    \"districtCode\": \"D9\",\r\n                    \"districtName\": \"Quận Long Biên\"\r\n                }\r\n                ]\r\n\r\n\r\nmodule.exports = districtList;\r\n","var appointmentList = [\r\n    {\r\n        \"appointment_id\":3,\r\n        \"appointment_customerName\":\"Phạm Duy Bình\",\r\n        \"appointment_phoneNumber\":\"0222222222\",\r\n        \"appointment_DOB\":\"1998-02-15T00:00:00.000+0000\",\r\n        \"appointment_meetingTime\":\"2020-12-21T17:59:00.000+0000\",\r\n        \"appointment_status\":\"pending\",\r\n        \"appointment_note\":null,\r\n        \"appointment_createdTime\":\"2020-03-17T06:20:04.000+0000\"\r\n    },\r\n    {\r\n        \"appointment_id\":4,\r\n        \"appointment_customerName\":\"Phạm Duy Bình\",\r\n        \"appointment_phoneNumber\":\"0222222222\",\r\n        \"appointment_DOB\":\"1998-02-15T00:00:00.000+0000\",\r\n        \"appointment_meetingTime\":\"2020-12-21T17:59:00.000+0000\",\r\n        \"appointment_status\":\"accepted\",\r\n        \"appointment_note\":null,\r\n        \"appointment_createdTime\":\"2020-03-17T06:20:04.000+0000\"\r\n    }\r\n]\r\n\r\n\r\nmodule.exports = appointmentList;\r\n","var userList = [\r\n    {\r\n        \"id\":1,\r\n        \"phoneNumber\":\"0000000000\",\r\n        \"name\":\"Lam Phan\",\r\n        \"dob\":\"1970-01-01T00:00:00.000+0000\",\r\n        \"address\":\"Default-Address\",\r\n        \"password\":\"$2a$10$Rqs8uzm/mZzJHWABOeOi7OuqyPsptBgWNL5k7Cf9bDnWpRL4gSfbW\",\r\n        \"active\":1,\r\n        \"email\":\"medtest.default@gmail.com\",\r\n        \"role\":\"COORDINATOR\",\r\n        \"gender\":0,\r\n        \"image\":\"https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png\",\r\n        \"townCode\":\"T0\",\r\n        \"districtCode\":\"D0\"\r\n    },\r\n    {\r\n        \"id\":2,\r\n        \"phoneNumber\":\"0000000001\",\r\n        \"name\":\"DefaultCoordinator\",\r\n        \"dob\":\"1970-01-01T00:00:00.000+0000\",\r\n        \"address\":\"Default-Address\",\r\n        \"password\":\"$2a$10$Rqs8uzm/mZzJHWABOeOi7OuqyPsptBgWNL5k7Cf9bDnWpRL4gSfbW\",\r\n        \"active\":1,\r\n        \"email\":\"medtest.default@gmail.com\",\r\n        \"role\":\"ADMIN\",\r\n        \"gender\":0,\r\n        \"image\":\"https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png\",\r\n        \"townCode\":\"T0\",\r\n        \"districtCode\":\"D0\"\r\n    },\r\n]\r\n\r\n\r\nmodule.exports = userList;\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, ImageBackground, Picker, TouchableOpacity } from 'react-native';\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n        this.editProfile = this.editProfile.bind(this)\r\n    }\r\n\r\n    editProfile(){\r\n        if (this.props.userInfo){\r\n            const account= { \r\n            'accountId':this.props.userInfo.id, \r\n            'accountPhoneNumber':this.props.userInfo.phoneNumber,                      \r\n            'accountName':this.props.userInfo.name,\r\n            'accountDob':this.props.userInfo.dob,\r\n            'accountAddress':this.props.userInfo.address,\r\n            'accountPassword':this.props.userInfo.password,\r\n            'accountActive':this.props.userInfo.active,\r\n            'accountEmail':this.props.userInfo.email,\r\n            'accountRole':this.props.userInfo.role,\r\n            'accountGender':this.props.userInfo.gender,\r\n            'accountImageUrl':this.props.userInfo.image,\r\n            'accountTownCode':this.props.userInfo.townCode,\r\n            'accountDistrictCode':this.props.userInfo.districtCode,\r\n            }\r\n\r\n            this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n            this.props.changeShowView?this.props.setSelectedAccount(account):null\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.headerContainer} \r\n            source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.leftArea}>\r\n                <View style={styles.titleContainer}>\r\n                    <Text style={{fontSize:25, fontWeight:'bold',color:'white'}}>MedTest</Text>\r\n                </View>\r\n                <View style={styles.hotlineContainer}>\r\n                    <Text style={{fontSize:14}}>Hotline: 1900561252</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.middleArea}>\r\n                <TextInput style={styles.searchInputContainer}\r\n                placeholder={'Tìm xét nghiệm'}>                \r\n                </TextInput>\r\n            </View>\r\n            <View style={styles.rightArea}>\r\n                <View style={{}}>\r\n                    <Image \r\n                        style={{\r\n                            width:100,\r\n                            height:100,\r\n                        }}\r\n                        // source={{uri:'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png'}}>\r\n                        source={{uri:this.props.userInfo?this.props.userInfo.image:''}}>\r\n                    </Image>\r\n                </View>\r\n                <TouchableOpacity style={styles.nameContainer} onPress={() => this.editProfile()}>\r\n                    <Text style={{fontSize:14,color:'white'}}>{this.props.userInfo?this.props.userInfo.name:''}</Text>\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst headerHight=185\r\n\r\nconst styles = StyleSheet.create({\r\n  headerContainer: {\r\n    height:headerHight,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    // backgroundColor: '#3475b3',\r\n    \r\n  },\r\n  leftArea:{\r\n    height:headerHight,\r\n    width:200,\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',    \r\n    backgroundColor:'',\r\n    padding:20,\r\n  },\r\n  titleContainer:{\r\n    height:50,\r\n    width:100,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'center',\r\n    backgroundColor:''\r\n  },\r\n  hotlineContainer:{\r\n    height:35,\r\n    width:150,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor:'white',\r\n    borderWidth:1,\r\n    marginTop:10,\r\n  },\r\n  middleArea:{\r\n    height:headerHight,\r\n    flex:1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',    \r\n    padding:10,\r\n    backgroundColor:''\r\n  },\r\n  searchInputContainer:{\r\n    height:30,\r\n    width:800,\r\n    backgroundColor:'white',\r\n    borderWidth:1,\r\n    borderRadius:20,\r\n    paddingLeft:20,\r\n    marginTop:10,\r\n  },\r\n  rightArea:{\r\n    height:headerHight,\r\n    width:200,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',    \r\n    padding:10,\r\n    backgroundColor:'',\r\n  },\r\n  nameContainer:{\r\n    height:30,\r\n    width:140,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '',\r\n  }\r\n});\r\n","\r\nexport function convertDateTimeToDate(inputString){\r\n    if (inputString == null ) return ''\r\n    return inputString.substring(8,10)+'-'+inputString.substring(5,7)+'-'+inputString.substring(0,4);\r\n}\r\n\r\nexport function convertDateTimeToTime(inputString){\r\n    if (inputString == null ) return ''\r\n    return inputString.substring(11,13)+':'+inputString.substring(14,16);\r\n}\r\n\r\nexport function convertDateAndTimeToDateTime(inputDate,inputTime){\r\n    return inputDate.substring(6,10)+'-'+inputDate.substring(3,5)+'-'+inputDate.substring(0,2)+'T'+inputTime+':00.000+0000'\r\n}\r\n\r\nexport function convertDateToDateTime(inputDate){\r\n    return inputDate.substring(6,10)+'-'+inputDate.substring(3,5)+'-'+inputDate.substring(0,2)+'T00:00:00.000+0000'\r\n}\r\n\r\nexport function getApiUrl(){\r\n    // return \"http://192.168.1.17:8080\";\r\n    return \"https://medtest-backend.herokuapp.com\";\r\n}\r\n\r\nexport function getRoleName(role){\r\n    switch (role) {\r\n        case 'CUSTOMER':\r\n            return 'Khách hàng';\r\n            break;\r\n        case 'NURSE':\r\n            return 'Y tá';\r\n            break;\r\n        case 'COORDINATOR':\r\n            return 'Điều phối viên'\r\n            break;\r\n        case 'ADMIN':\r\n            return 'Quản trị hệ thống'\r\n            break;\r\n        }   \r\n    }\r\n\r\n\r\nexport function convertMoney(_price){\r\n    let price = _price.toString()\r\n    let index = price.length -1\r\n    let result = ''\r\n    while (index >= 3) {\r\n        // console.log(price+\": \"+price.substring(index-2,index+1)+', '+index)\r\n        result = '.'+price.substring(index-2,index+1)+result\r\n        index-=3\r\n    }\r\n    result = price.substring(0,index+1)+result\r\n    return result\r\n}\r\n\r\nexport function getStateName(status){\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'Đang đợi y tá nhận đơn';\r\n            break;\r\n        case 'coordinatorlostsample':\r\n            return 'Điều phối viên làm mất mẫu';\r\n            break;\r\n        case 'accepted':\r\n            return 'Đang đợi lấy mẫu';\r\n            break;\r\n        case 'transporting':\r\n            return 'Đang vận chuyển mẫu';\r\n            break;\r\n        case 'lostsample':\r\n            return 'Đang đợi lấy lại mẫu';\r\n            break;\r\n        case 'waitingforresult':\r\n            return 'Đang đợi kết quả';\r\n            break;\r\n        case 'closed':\r\n            return 'Đã xong';\r\n            break;\r\n        case 'canceled':\r\n            return 'Đã bị hủy';\r\n            break;\r\n        \r\n    } \r\n}\r\n\r\n\r\nexport function getAppointmentStateName(status){\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'Đơn đang đợi xử lý';\r\n            break;\r\n        case 'accepted':\r\n            return 'Đơn đã được chấp nhận';\r\n            break;\r\n        case 'rejected':\r\n            return 'Đơn đã bị từ chối';\r\n            break;\r\n        case 'canceled':\r\n            return 'Đơn đã bị hủy';\r\n            break;\r\n        \r\n        } \r\n    }\r\n\r\n\r\n\r\nexport function getStateColor(status){\r\n        switch (status) {\r\n        case 'pending':\r\n            return '#ffd66f';\r\n            break;\r\n        case 'coordinatorlostsample':\r\n            return '#ffd66f';\r\n            break;\r\n        case 'accepted':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'transporting':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'lostsample':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'waitingforresult':\r\n            return '#6398d6';\r\n            break;\r\n        case 'closed':\r\n            return '#000';\r\n            break;\r\n        \r\n        } \r\n    }","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getRoleName} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class AccountListViewItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            // appointment_date: convertDateTimeToDate(this.props.appoint_date),\r\n            // appointment_time: convertDateTimeToTime(this.props.appoint_date),\r\n        };\r\n        this.onAccountPress = this.onAccountPress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n\r\n    onAccountPress(){\r\n        const account= { \r\n            'accountId':this.props.accountId, \r\n            'accountPhoneNumber':this.props.accountPhoneNumber,                      \r\n            'accountName':this.props.accountName,\r\n            'accountDob':this.props.accountDob,\r\n            'accountAddress':this.props.accountAddress,\r\n            'accountPassword':this.props.accountPassword,\r\n            'accountActive':this.props.accountActive,\r\n            'accountEmail':this.props.accountEmail,\r\n            'accountRole':this.props.accountRole,\r\n            'accountGender':this.props.accountGender,\r\n            'accountImageUrl':this.props.accountImageUrl,\r\n            'accountTownCode':this.props.accountTownCode,\r\n            'accountDistrictCode':this.props.accountDistrictCode,\r\n            }\r\n        // console.log(account)\r\n        this.props.setSelectedAccount?this.props.setSelectedAccount(account):null\r\n        this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.accountListItem}\r\n                onPress={() => this.onAccountPress()}\r\n                >\r\n                <View style={styles.accountNameContainer}>                                       \r\n                <Text style={{fontSize:17}}>{this.props.accountName}</Text>\r\n                </View>\r\n                <View style={styles.accountPhoneContainer}>                                       \r\n                <Text style={{fontSize:17}}>{this.props.accountPhoneNumber}</Text>\r\n                </View>\r\n                <View style={styles.accountRoleContainer}>                                       \r\n                <Text style={{fontSize:17}}>{getRoleName(this.props.accountRole)}</Text>  \r\n                </View>\r\n                     \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingBottom:2,  \r\n    },\r\n    accountNameContainer:{\r\n        margin:10,\r\n        width:350,\r\n        alignItems: 'center',\r\n        marginRight:150,\r\n    },\r\n    accountPhoneContainer:{\r\n        margin:10,\r\n        width:200,\r\n        marginRight:100,\r\n        alignItems: 'center',\r\n    },\r\n    accountRoleContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n    },\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport AccountListViewItem from './AccountListViewItem'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class AccountListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            Button1Selected: true,\r\n            Button2Selected: false,\r\n            Button3Selected: false,\r\n            Button4Selected: false,\r\n            Button4Selected: false,\r\n            districtsList: districtList,\r\n            accountSelected: 'all',\r\n            userList: this.props.userList?this.props.userList:[],\r\n            dataChanged: true,\r\n        };\r\n        this.menuButtonPress = this.menuButtonPress.bind(this)\r\n        this.getAccountShowList = this.getAccountShowList.bind(this)\r\n    }\r\n\r\n\r\n    \r\n    getAccountShowList(){\r\n        \r\n        if (this.state.accountSelected=='all'){\r\n            return this.state.userList\r\n        }\r\n        else{\r\n            let result = []\r\n            let index = this.state.userList.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.userList[index].role === this.state.accountSelected) {\r\n                    result.push(this.state.userList[index]);\r\n                    }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        \r\n        return this.state.userList\r\n    }\r\n\r\n\r\n\r\n\r\n    menuButtonPress(button){\r\n        this.setState(previousState => ({ \r\n            Button1Selected: button==\"1\"?true:false,\r\n            Button2Selected: button==\"2\"?true:false,\r\n            Button3Selected: button==\"3\"?true:false,\r\n            Button4Selected: button==\"4\"?true:false,\r\n            Button5Selected: button==\"5\"?true:false,\r\n            accountSelected: button==\"1\"? 'all': button==\"2\"? 'COORDINATOR': button==\"3\"? 'NURSE' : button==\"4\"? 'CUSTOMER': 'ADMIN',\r\n            dataChanged: !this.state.dataChanged,\r\n        }))\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                userList: this.props.userList,\r\n                dataChanged: !this.state.dataChanged,\r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    // componentDidUpdate  (prevProps, prevState) {        \r\n    //      if (prevProps !== this.props) {\r\n    //         this.setState(previousState => ({ \r\n    //             userList: this.props.userList,\r\n    //         }));\r\n    //     }\r\n    // }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleListArea}>\r\n            <View style={styles.accountListTopMenuArea}>\r\n                <View style={styles.accountListTopMenuContainer}>\r\n                    <TextInput style={styles.topMenuTextInput}\r\n                    placeholder={'Tìm kiếm tài khoản theo số điện thoại'}>                \r\n                    </TextInput>\r\n                    <TouchableOpacity \r\n                        style={styles.createNewAccountButton} \r\n                        onPress={() => this.props.changeShowView ? this.props.changeShowView('AccountCreateView'): null}\r\n                        >\r\n                        <Text>Tạo tài khoản nhân viên</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={[styles.accountListTopMenuContainer,{\r\n                    justifyContent: 'flex-start',\r\n                    }]}>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button1Selected ? 1:0,\r\n                        backgroundColor: this.state.Button1Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('1')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Tất cả</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button2Selected ? 1:0,\r\n                        backgroundColor: this.state.Button2Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('2')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Điều phối viên</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button3Selected ? 1:0,\r\n                        backgroundColor: this.state.Button3Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('3')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Y tá</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button4Selected ? 1:0,\r\n                        backgroundColor: this.state.Button4Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('4')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Khách hàng</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button5Selected ? 1:0,\r\n                        backgroundColor: this.state.Button5Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('5')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Quản trị hệ thống</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={styles.accountListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getAccountShowList()?this.getAccountShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.articleListFlatListArea}>     \r\n                <View style={styles.articleListFlatListTitleArea}> \r\n                    <View style={styles.articleListFlatListTitleContainer}> \r\n                        <View style={styles.articleListTitleNameContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Tên người dùng</Text>\r\n                        </View>\r\n                        <View style={styles.articleListTitlePhoneContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Số điện thoại</Text>\r\n                        </View>\r\n                        <View style={styles.articleListTitleRoleContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Vị trí</Text>  \r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <FlatList style={styles.articleListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getAccountShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <AccountListViewItem\r\n                                    accountId={item.id}         \r\n                                    accountPhoneNumber={item.phoneNumber}                            \r\n                                    accountName={item.name}    \r\n                                    accountDob={item.dob}    \r\n                                    accountAddress={item.address}\r\n                                    accountPassword={item.password}\r\n                                    accountActive={item.active}\r\n                                    accountEmail={item.email}         \r\n                                    accountRole={item.role}                            \r\n                                    accountGender={item.gender}    \r\n                                    accountImageUrl={item.image}    \r\n                                    accountTownCode={item.townCode}\r\n                                    accountDistrictCode={item.districtCode}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedAccount={this.props.setSelectedAccount?this.props.setSelectedAccount: null}  \r\n                                                                                                    \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList> \r\n                       \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst roleSelectedColor = '#c0c0c0';\r\n\r\nconst roleSelectButtonHeight = 30;\r\n\r\nconst styles = StyleSheet.create({\r\n    articleListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountListTopMenuArea: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:40,\r\n        paddingTop:10,\r\n    },\r\n    accountListTopMenuContainer: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:10,\r\n        paddingLeft:190,\r\n        paddingRight:200,\r\n    },\r\n    topMenuTextInput:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:10,\r\n    },\r\n    topMenuButton:{\r\n        width: (Dimensions.get('window').width-400)/5,\r\n        height: roleSelectButtonHeight,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    createNewAccountButton:{\r\n        width: 240,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        // marginRight:200,\r\n    },\r\n    articleListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    articleListFlatListTitleArea:{\r\n        alignSelf: 'stretch',\r\n        width: \"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    articleListFlatListTitleContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',   \r\n        backgroundColor:'#c0c0c0',     \r\n    },\r\n    articleListTitleNameContainer:{\r\n        margin:10,\r\n        width:350,\r\n        alignItems: 'center',\r\n        marginRight:150,\r\n    },\r\n    articleListTitlePhoneContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n        marginRight:100,\r\n    },\r\n    articleListTitleRoleContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n    },\r\n    articleListTitleText:{\r\n        fontSize:17, \r\n        fontWeight:'bold'\r\n    },\r\n    articleListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n    },\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime} from './../Common/CommonFunction'\r\n// import DatePicker from 'react-native-date-picker'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',\r\n            accountEmail:'',\r\n            accountDob: '',\r\n            accountGender: '',\r\n            accountPassword: '',\r\n            accountRePassword: '',\r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountAddress: '',\r\n            accountRole: '',\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            day: new Date().getDate(),\r\n            error: '',\r\n            errorList: ['',\r\n                    'Tên chủ tài khoản không được bỏ trống',\r\n                    'Số điện thoại phải có mười số',\r\n                    'Địa chỉ email không được bỏ trống',\r\n                    'Mật khẩu phải có ít nhất 6 kí tự',\r\n                    'Xác nhận mật khẩu không trùng với mật khẩu ',\r\n                    'Địa chỉ không được bỏ trống'],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onDistrictChange = this.onDistrictChange.bind(this)\r\n        this.createNumberPickerList = this.createNumberPickerList.bind(this)\r\n        this.getNumberOfDayInMonth = this.getNumberOfDayInMonth.bind(this)\r\n        this.createAccount = this.createAccount.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            error: '',\r\n        }));\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                districtList: this.props.districtList?this.props.districtList:[],\r\n                townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n                districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n                townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n                error: '',\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onDistrictChange(districtId){\r\n        this.setState({\r\n            districtSelected:districtId,                  \r\n        })\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == districtId){\r\n                this.setState({\r\n                    townList:  this.state.districtList[index].listTown,\r\n                    townSelected: this.state.districtList[index].listTown[0]?this.state.districtList[index].listTown[0].townCode:'none'              \r\n                })\r\n                index = 0;\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    getFebDay(){        \r\n        const year = this.state.year\r\n        if (year % 400 == 0 ) return 29\r\n        if (year % 100 == 0 ) return 28\r\n        if (year % 4 == 0) return 29\r\n        return 28\r\n    }\r\n\r\n    getNumberOfDayInMonth(month){\r\n        switch (month) {\r\n            case '1':\r\n            case '3':\r\n            case '5':\r\n            case '7':\r\n            case '8':\r\n            case '10':\r\n            case '12':\r\n                return 31;\r\n                break;\r\n            case '4':\r\n            case '6':\r\n            case '9':\r\n            case '11':\r\n                return 30;\r\n                break;\r\n            case '2':\r\n                return this.getFebDay();\r\n                break;\r\n            \r\n        }   \r\n    }\r\n\r\n    createNumberPickerList(start,end,startToEnd){\r\n        let result = [];\r\n        if(startToEnd){\r\n            for (let i = start; i <= end; i++)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        else{\r\n            for (let i = end; i >= start; i--)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        return result\r\n    }\r\n\r\n    getDob(){\r\n        let result = ''\r\n        if(parseInt(this.state.month)<10)\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n        else\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n        return result\r\n    }\r\n\r\n    \r\n    createAccount(){\r\n        // console.log(this.state.accountRole)\r\n        if(this.checkValid()){\r\n            this.callApiCreateAccount()\r\n        }\r\n    }\r\n\r\n    \r\n    checkValid(){        \r\n        if (this.state.accountName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.accountPhoneNumber == '' ||  this.state.accountPhoneNumber.length<10) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        \r\n        if (this.state.accountEmail == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (this.state.accountPassword == '' || this.state.accountPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        if (this.state.accountRePassword != this.state.accountPassword) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[5]\r\n            }));\r\n        if (this.state.accountAddress == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[6]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n\r\n    callApiCreateAccount(){\r\n        fetch(getApiUrl()+'/users/create-employee', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            name: this.state.accountName,\r\n            phoneNumber: this.state.accountPhoneNumber,\r\n            email: this.state.accountEmail,\r\n            dob: convertDateToDateTime(this.getDob()),\r\n            gender: this.state.accountGender,\r\n            password: this.state.accountPassword,\r\n            districtCode: this.state.districtSelected,\r\n            townCode: this.state.townSelected,\r\n            address: this.state.accountAddress,\r\n            role: this.state.accountRole,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.props.changeShowView('AccountListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Tạo nhân viên mới: \"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên nhân viên:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên nhân viên'}\r\n                            name={\"accountName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountName}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập số điện thoại của nhân viên'}\r\n                            name=\"accountPhoneNumber\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPhoneNumber}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ email:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ email của nhân viên'}\r\n                            name=\"accountEmail\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountEmail}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.day}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,this.getNumberOfDayInMonth(this.state.month.toString()),true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.month}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day: this.getNumberOfDayInMonth(itemValue)<this.state.day?'1':this.state.day,\r\n                                month:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,12,true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.year}\r\n                            style={[styles.accountTypeDropDown,{width:80}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                year:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1920,new Date().getFullYear(),false)}\r\n                        </Picker>\r\n                        \r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Giới tính:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.accountGender}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountGender:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Nam'} value={'1'} />\r\n                            <Picker.Item label={'Nữ'} value={'0'} />\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu'}\r\n                            name=\"accountPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Xác nhận mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Xác nhận lại mật khẩu'}\r\n                            name=\"accountRePassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountRePassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>                    \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Quận/huyện:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.districtSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.onDistrictChange(itemValue)}                    \r\n                            >\r\n                            {this.state.districtList?this.state.districtList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />))\r\n                            : null }\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Phường/xã:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.townSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                townSelected:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.state.townList?this.state.townList.map(town => (\r\n                            <Picker.Item label={town.townName} value={town.townCode} />\r\n                            )): null}\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ chi tiết:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ chi tiết: số nhà, đường, thôn, ..'}\r\n                            name=\"accountAddress\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountAddress}\r\n                            >                \r\n                        </TextInput>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Vị trí nhân viên:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.accountRole}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountRole:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Y tá'} value={'NURSE'} />\r\n                            <Picker.Item label={'Điều phối viên'} value={'COORDINATOR'} />\r\n                            <Picker.Item label={'Quản trị hệ thống'} value={'ADMIN'} />\r\n                        </Picker>\r\n                        \r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n            <TouchableOpacity style={styles.accountCreateConfirmButton} onPress={()=>this.createAccount()}>\r\n                    <Text>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        \r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    accountCreateConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:30,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime} from './../Common/CommonFunction'\r\n// import DatePicker from 'react-native-date-picker'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',\r\n            accountEmail:'',\r\n            accountDob: '',\r\n            accountGender: '',\r\n            accountPassword: '',\r\n            accountRePassword: '',\r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountAddress: '',\r\n            accountRole: '',\r\n            accountActive: '',\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            day: new Date().getDate(),\r\n            error: '',\r\n            errorList: ['','Tên chủ tài khoản không được bỏ trống','Địa chỉ email không được bỏ trống', 'Địa chỉ không được bỏ trống'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onDistrictChange = this.onDistrictChange.bind(this)\r\n        this.createNumberPickerList = this.createNumberPickerList.bind(this)\r\n        this.getNumberOfDayInMonth = this.getNumberOfDayInMonth.bind(this)\r\n        this.updateAccountInformation = this.updateAccountInformation.bind(this)\r\n        this.resetPassword = this.resetPassword.bind(this)\r\n        this.checkCurrentUser = this.checkCurrentUser.bind(this)\r\n        this.checkAdmin = this.checkAdmin.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n        this.getDob = this.getDob.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log('')\r\n        this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            accountEmail: this.props.account?this.props.account.accountEmail:'',\r\n            accountDob: this.props.account?this.props.account.accountDob:'',\r\n            accountGender: this.props.account?this.props.account.accountGender:'',\r\n            accountRole: this.props.account?this.props.account.accountRole:'',\r\n            accountAddress: this.props.account?this.props.account.accountAddress:'',\r\n            accountActive: this.props.account?this.props.account.accountActive:'',\r\n            year: this.props.account?this.props.account.accountDob? this.props.account.accountDob.substring(0,4):'2020':'2020',\r\n            month: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(5,7)).toString():'2020':'2020',\r\n            day: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(8,10)).toString():'2020':'2020',\r\n            error: '',\r\n        }));\r\n    }\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n        if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            accountEmail: this.props.account?this.props.account.accountEmail:'',\r\n            accountDob: this.props.account?this.props.account.accountDob:'',\r\n            accountGender: this.props.account?this.props.account.accountGender:'',\r\n            accountRole: this.props.account?this.props.account.accountRole:'',\r\n            accountAddress: this.props.account?this.props.account.accountAddress:'',\r\n            accountActive: this.props.account?this.props.account.accountActive:'',\r\n            year: this.props.account?this.props.account.accountDob? this.props.account.accountDob.substring(0,4):'2020':'2020',\r\n            month: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(5,7)).toString():'2020':'2020',\r\n            day: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(8,10)).toString():'2020':'2020',\r\n            error: '',\r\n        }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onDistrictChange(districtId){\r\n        this.setState({\r\n            districtSelected:districtId,                  \r\n        })\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == districtId){\r\n                this.setState({\r\n                    townList:  this.state.districtList[index].listTown,\r\n                    townSelected: this.state.districtList[index].listTown[0]?this.state.districtList[index].listTown[0].townCode:'none'              \r\n                })\r\n                index = 0;\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    getFebDay(){        \r\n        const year = this.state.year\r\n        if (year % 400 == 0 ) return 29\r\n        if (year % 100 == 0 ) return 28\r\n        if (year % 4 == 0) return 29\r\n        return 28\r\n    }\r\n\r\n    getNumberOfDayInMonth(month){\r\n        switch (month) {\r\n            case '1':\r\n            case '3':\r\n            case '5':\r\n            case '7':\r\n            case '8':\r\n            case '10':\r\n            case '12':\r\n                return 31;\r\n                break;\r\n            case '4':\r\n            case '6':\r\n            case '9':\r\n            case '11':\r\n                return 30;\r\n                break;\r\n            case '2':\r\n                return this.getFebDay();\r\n                break;\r\n            \r\n        }   \r\n    }\r\n\r\n    createNumberPickerList(start,end,startToEnd){\r\n        let result = [];\r\n        if(startToEnd){\r\n            for (let i = start; i <= end; i++)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        else{\r\n            for (let i = end; i >= start; i--)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        return result\r\n    }\r\n\r\n\r\n    getDob(){\r\n        let result = ''\r\n        if(parseInt(this.state.month)<10)\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n        else\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n        return result\r\n    }\r\n    \r\n\r\n    resetPassword(){\r\n        console.log(this.props.account.accountId),\r\n        console.log(this.props.userInfo.id),\r\n        fetch(getApiUrl()+'/users/reset-password/'+this.props.account.accountId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n            \r\n        },\r\n        body: JSON.stringify({\r\n            userProcessingID: this.props.userInfo.id\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message?  success=true : null : null;\r\n                if (success)\r\n                    this.props.changeShowView('AccountListView')\r\n                \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    changePassword(){\r\n        this.props.changeShowView('AccountChangePasswordView')\r\n    }\r\n\r\n    updateAccountInformation(){\r\n        if(this.checkValid()){\r\n            this.callApiUpdateAccountInfo()\r\n        }\r\n    }\r\n\r\n    \r\n    checkValid(){        \r\n        if (this.state.accountName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.accountEmail == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.accountAddress == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n    callApiUpdateAccountInfo(){\r\n        fetch(getApiUrl()+'/users/update-user/'+this.props.account.accountId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            name: this.state.accountName,\r\n            dob: convertDateToDateTime(this.getDob()),\r\n            address: this.state.accountAddress,\r\n            active: this.state.accountActive,\r\n            email: this.state.accountEmail,\r\n            gender: this.state.accountGender,\r\n            townCode: this.state.townSelected,\r\n            districtCode: this.state.districtSelected\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) {\r\n                    if (this.checkCurrentUser()) this.props.updateUserInfo(result)\r\n                    this.props.changeShowView('AccountListView')\r\n                }\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    checkCurrentUser(){\r\n        if (this.props.account.accountId == this.props.userInfo.id) return true\r\n        return false\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Chỉnh sửa thông tin nhân viên: \"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Thay đổi mật khẩu:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên nhân viên'}\r\n                            name={\"accountName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountName}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountName}</Text>\r\n                        }\r\n                        \r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <Text style={styles.rowText}>{this.state.accountPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ email:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ email của nhân viên'}\r\n                            name=\"accountEmail\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountEmail}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountEmail}</Text>\r\n                        }\r\n                    </View>\r\n                    {this.checkAdmin()?\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.day}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,this.getNumberOfDayInMonth(this.state.month.toString()),true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.month}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day: this.getNumberOfDayInMonth(itemValue)<this.state.day?'1':this.state.day,\r\n                                month:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,12,true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.year}\r\n                            style={[styles.accountTypeDropDown,{width:80}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                year:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1920,2020,false)}\r\n                        </Picker>\r\n                    </View>\r\n                    :\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Text style={styles.rowTextLong}>{this.getDob()}</Text>\r\n                    </View>\r\n                    }\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Giới tính:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.accountGender}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountGender:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Nam'} value={'1'} />\r\n                            <Picker.Item label={'Nữ'} value={'0'} />\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountGender=='1'?'Nam':'Nữ'}</Text>\r\n                        }\r\n                        \r\n                    </View>                   \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Quận/huyện:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.districtSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.onDistrictChange(itemValue)}                    \r\n                            >\r\n                            {this.state.districtList?this.state.districtList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />))\r\n                            : null }\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Phường/xã:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.townSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                townSelected:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.state.townList?this.state.townList.map(town => (\r\n                            <Picker.Item label={town.townName} value={town.townCode} />\r\n                            )): null}\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ chi tiết:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ chi tiết: số nhà, đường, thôn, ..'}\r\n                            name=\"accountAddress\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountAddress}\r\n                            >                \r\n                        </TextInput>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Vị trí nhân viên:</Text>\r\n                        {/* <Picker\r\n                            selectedValue={this.state.accountRole}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountRole:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Y tá'} value={'NURSE'} />\r\n                            <Picker.Item label={'Điều phối viên'} value={'COORDINATOR'} />\r\n                            <Picker.Item label={'Quản trị hệ thống'} value={'ADMIN'} />\r\n                        </Picker> */}\r\n                        <Text style={styles.rowText}>{getRoleName(this.state.accountRole)}</Text>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Trạng thái:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.accountActive}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountActive:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Đang hoạt động'} value={'1'} />\r\n                            <Picker.Item label={'Bị khóa'} value={'0'} />\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountActive=='1'?'Đang hoạt động':'Bị khóa'}</Text>\r\n                        }\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>  \r\n                <View style={styles.buttonArea}>\r\n                    {this.checkCurrentUser()?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.changePassword()}>\r\n                        <Text>Thay đổi mật khẩu</Text>\r\n                    </TouchableOpacity>\r\n                    :\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.resetPassword()}>\r\n                        <Text>Đặt lại mật khẩu</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.updateAccountInformation()}>\r\n                        <Text>Lưu thay đổi</Text>\r\n                    </TouchableOpacity>\r\n                </View>  \r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        \r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:30,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime} from './../Common/CommonFunction'\r\n// import DatePicker from 'react-native-date-picker'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',    \r\n            accountOldPassword: '',        \r\n            accountPassword: '',\r\n            accountRePassword: '',            \r\n            error: '',\r\n            errorList: ['',\r\n                    'Mật khẩu cũ phải có ít nhất 6 kí tự',\r\n                    'Mật khẩu mới phải có ít nhất 6 kí tự',\r\n                    'Xác nhận mới mật khẩu không trùng với mật khẩu '],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            error: '',\r\n        }));\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                accountName: this.props.account?this.props.account.accountName:'',\r\n                accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n                error: '',\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    \r\n    changePassword(){\r\n        if(this.checkValid()){\r\n            this.callApiChangePassword()\r\n        }\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n    \r\n    checkValid(){    \r\n        if (this.state.accountOldPassword == '' || this.state.accountOldPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));   \r\n        if (this.state.accountPassword == '' || this.state.accountPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.accountRePassword != this.state.accountPassword) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n\r\n    callApiChangePassword(){\r\n        console.log(this.props.userInfo.id)\r\n        let url = ''\r\n        if (this.checkAdmin()) url = getApiUrl()+'/users/admin/change-password/'+this.props.userInfo.id\r\n        else url = getApiUrl()+'/users/coordinators/change-password/'+this.props.userInfo.id\r\n        fetch(url, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            oldPassword: this.state.accountOldPassword,\r\n            newPassword: this.state.accountPassword,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? result.message == \"Thay đổi mật khẩu thành công!\"? success=true : null : null : null;\r\n                if (success)\r\n                this.props.changeShowView('AccountListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Thay đổi mật khẩu:\"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên người dùng:</Text>\r\n                        <Text style={styles.rowTextLong}>{this.state.accountName}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <Text style={styles.rowText}>{this.state.accountPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu cũ:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu cũ'}\r\n                            name=\"accountOldPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountOldPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu mới:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu mới'}\r\n                            name=\"accountPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Xác nhận mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Xác nhận lại mật khẩu'}\r\n                            name=\"accountRePassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountRePassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>           \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n            <TouchableOpacity style={styles.accountCreateConfirmButton} onPress={()=>this.changePassword()}>\r\n                    <Text>Đổi mật khẩu</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    accountCreateConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:30,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getAppointmentStateName, getStateColor} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class AppointmentListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n        };\r\n        this.onAppointmentPress = this.onAppointmentPress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n\r\n    onAppointmentPress(){\r\n        const appointment= { \r\n            \"appointmentId\": this.props.appointmentId,\r\n            \"appointmentCreatedTime\":this.props.appointmentCreatedTime,\r\n            \"customerName\":this.props.customerName,\r\n            \"customerPhoneNumber\":this.props.customerPhoneNumber,\r\n            \"customerDOB\":this.props.customerDOB,\r\n            \"appointmentMeetingTime\":this.props.appointmentMeetingTime,\r\n            \"appointmentStatus\":this.props.appointmentStatus,\r\n            }\r\n            \r\n        this.props.setSelectedAppointment?this.props.setSelectedAppointment(appointment):null\r\n        this.props.changeShowView?this.props.changeShowView('AppointmentView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.appointmentListItem}\r\n                onPress={() => this.onAppointmentPress()}\r\n                >                          \r\n                <View style={[styles.appointmentTextContainer,{\r\n                    marginTop:5,\r\n                }]}>                    \r\n                    <View>\r\n                    <Text style={{fontSize:17}}>#{this.props.appointmentId}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={styles.appointmentTextContainer}>\r\n                    <View style={styles.appointmentListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>{this.props.customerName}</Text>\r\n                    </View>\r\n                    <View style={[styles.appointmentListSecondColumnContainer,{\r\n                        borderRadius:1,\r\n                        borderStyle: 'dashed',\r\n                    }]}>\r\n                    <Text style={{fontSize:17}}>{convertDateTimeToDate(this.props.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointmentCreatedTime)}</Text>                    \r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:15}}>Khung giờ hẹn: {convertDateTimeToTime(this.props.appointmentMeetingTime)}</Text>\r\n                    </View>\r\n                </View>     \r\n                <View style={[styles.appointmentTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.appointmentListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>Số điện thoại:  {this.props.customerPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentListSecondColumnContainer}>\r\n                    <Text style={{fontSize:17,color:'#0c59cf'}}>{getAppointmentStateName(this.props.appointmentStatus)}</Text>\r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:15}}>Ngày hẹn: {convertDateTimeToDate(this.props.appointmentMeetingTime)}</Text>\r\n                    </View>\r\n                    \r\n                </View>                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    appointmentListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    appointmentTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:3,\r\n        paddingTop:3,\r\n    },\r\n    appointmentListFirstColumnContainer:{\r\n        width:250,\r\n    },\r\n    appointmentListSecondColumnContainer:{\r\n        width:200,\r\n        marginLeft:20,\r\n        marginRight:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport AppointmentListViewItem from './AppointmentListViewItem'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\n\r\nexport default class AppointmentListView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            districtsList: this.props.districtList,\r\n            statusSelected: 'all',\r\n            districtSelected: 'all',\r\n            dataChanged: true,\r\n            testsList: this.props.testsList,\r\n            appointmentList: this.props.appointmentList,\r\n        };\r\n        this.getAppointmentShowList = this.getAppointmentShowList.bind(this)\r\n    }\r\n\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                appointmentList: this.props.appointmentList,\r\n                districtsList: this.props.districtList,\r\n                dataChanged: !this.state.dataChanged\r\n            }));\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    getAppointmentShowList(){\r\n        if (this.state.statusSelected=='all'){\r\n            if (this.state.districtSelected=='all'){\r\n                return this.state.appointmentList\r\n            }\r\n            else{\r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        else{\r\n            if (this.state.districtSelected=='all'){\r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].appointment_status === this.state.statusSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n            else{                \r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].appointment_status === this.state.statusSelected && this.state.appointmentList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        return this.state.appointmentList\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentListArea}>\r\n            <View style={styles.appointmentListTopMenuArea}>\r\n                <View style={styles.appointmentListTopMenuContainer}>\r\n                    <Text>Trạng thái: </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.statusSelected}\r\n                        style={styles.appointmentTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            statusSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged\r\n                        })}\r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        <Picker.Item label=\"Đơn đang đợi xử lý\" value=\"pending\" />\r\n                        <Picker.Item label=\"Đơn đã được chấp nhận\" value=\"accepted\" />\r\n                        <Picker.Item label=\"Đơn đã bị từ chối\" value=\"rejected\" />\r\n                        <Picker.Item label=\"Đơn đã bị hủy\" value=\"canceled\" />\r\n                    </Picker>                    \r\n                </View>\r\n                <View style={styles.appointmentListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getAppointmentShowList()?this.getAppointmentShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.appointmentListFlatListArea}>        \r\n                <FlatList style={styles.appointmentListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getAppointmentShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <AppointmentListViewItem\r\n                                    appointmentId={item.appointment_id}       \r\n                                    appointmentCreatedTime={item.appointment_createdTime}                             \r\n                                    customerName={item.appointment_customerName}\r\n                                    customerPhoneNumber={item.appointment_phoneNumber}\r\n                                    customerDOB={item.appointment_DOB}\r\n                                    appointmentMeetingTime={item.appointment_meetingTime}\r\n                                    appointmentStatus={item.appointment_status}        \r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedAppointment={this.props.setSelectedAppointment?this.props.setSelectedAppointment: null}                                                                 \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentListTopMenuArea: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n        paddingTop:10,\r\n    },\r\n    appointmentListTopMenuContainer: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n        padding:10,\r\n        paddingLeft:200,\r\n        paddingRight:200\r\n    },\r\n    appointmentTypeDropdown:{\r\n        height: 35, \r\n        width: 300,\r\n        borderRadius:5,\r\n        marginLeft:54,\r\n    },\r\n    appointmentListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    appointmentListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport {getApiUrl, getAppointmentStateName} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class AppointmentView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {        \r\n            \r\n        };\r\n        this.onAccept = this.onAccept.bind(this)\r\n        this.onReject = this.onReject.bind(this)\r\n        \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n    callApiAcceptAppointment(_status){\r\n        fetch(getApiUrl()+\"/appointments/accept/\"+this.props.appointment.appointmentId, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                status: _status,\r\n                coordinatorID: this.props.userInfo.id,\r\n                note: 'ok',\r\n            }),\r\n            })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                // let success = false\r\n                // result ? result.message? null : success=true : null;\r\n                // if (success) \r\n                this.props.changeShowView('AppointmentListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    onAccept(){\r\n        this.callApiAcceptAppointment()\r\n    }\r\n\r\n    onReject(){\r\n        this.props.changeShowView('AppointmentRejectView')\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentViewArea}>\r\n            <View style={styles.appointmentTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Chi tiết đơn khám</Text>                \r\n            </View>\r\n            <View style={styles.appointmentArea}>\r\n                <View style={styles.appointmentContainer}>      \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.appointment?this.props.appointment.appointmentId:''}</Text>                \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentCreatedTime):''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Giờ hẹn:</Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentMeetingTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentMeetingTime):''}</Text>            \r\n                        </View>\r\n                    </View>  \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.appointment?this.props.appointment.customerName:''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.appointment?this.props.appointment.customerPhoneNumber:''}</Text>            \r\n                        </View>\r\n                    </View>                  \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Trạng thái: </Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.appointment?getAppointmentStateName(this.props.appointment.appointmentStatus):''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    {this.props.appointment.appointmentStatus =='pending'?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onReject()}>\r\n                        <Text>Từ chối</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>}\r\n                    {this.props.appointment.appointmentStatus =='pending'?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onAccept()}>\r\n                        <Text>Xác nhận</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>}\r\n                </View>\r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:10,\r\n        marginBottom:-20,\r\n    },\r\n    appointmentArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    appointmentContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    appointmentRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowFirstContainer:{\r\n        width:200,\r\n    },\r\n    rowSecondContainer:{\r\n        width:'100%',\r\n    },\r\n    rowText:{\r\n        fontSize:18,\r\n        backgroundColor:''\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\n\r\nexport default class AppointmentLostSampleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            reason: '',\r\n            error: '',\r\n            errorList: ['','Phải điền lý do từ chối'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.rejectAppointment = this.rejectAppointment.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    rejectAppointment(){\r\n        if(this.checkValid()){\r\n            this.callApiRejectAppointment()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.reason == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiRejectAppointment(){\r\n        fetch(getApiUrl()+\"/appointments/cancel/\"+this.props.appointment.appointmentId, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                status: 'rejected',\r\n                coordinatorID: this.props.userInfo.id,\r\n                note: this.state.reason,\r\n            }),\r\n            })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                // let success = false\r\n                // result ? result.message? null : success=true : null;\r\n                // if (success) \r\n                this.props.changeShowView('AppointmentListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentViewArea}>\r\n            <View style={styles.appointmentTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Từ chối đơn hẹn: </Text>                \r\n            </View>\r\n            <View style={styles.appointmentArea}>\r\n                <View style={styles.appointmentContainer}>   \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn hẹn: </Text>        \r\n                        <Text style={styles.rowText}>{this.props.appointment?this.props.appointment.appointmentId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowText,{width:300}]}>{this.props.appointment?this.props.appointment.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.appointment?this.props.appointment.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowText}>{'Lý do từ chối: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Điền lý do từ chối'}\r\n                            name={\"reason\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reason}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.appointmentConfirmButton} onPress={() => this.rejectAppointment()}>\r\n                    <Text>Báo mất mẫu</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    appointmentArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    appointmentContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    appointmentRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n    },\r\n    appointmentTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    appointmentConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class ArticleListViewItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n        };\r\n        this.onArticlePress = this.onArticlePress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n    onArticlePress(){\r\n        const article= { \r\n            \"articleId\": this.props.articleId,\r\n            \"articleTitle\":this.props.articleTitle,\r\n            \"articleContent\":this.props.articleContent,\r\n            \"articleShortContent\":this.props.articleShortContent,\r\n            \"articleImageUrl\":this.props.articleImageUrl,\r\n            \"userId\":this.props.userId,\r\n            \"articleCreatedTime\":this.props.articleCreatedTime,\r\n            \"creatorName\": this.props.creatorName,\r\n            }\r\n        this.props.setSelectedArticle?this.props.setSelectedArticle(article):null\r\n        this.props.changeShowView?this.props.changeShowView('ArticleView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.articleListItem}\r\n                onPress={() => this.onArticlePress()}\r\n                >                                \r\n                <View style={styles.articleImageContainer}>\r\n                    <Image \r\n                        style={styles.articleImage}\r\n                        source={{uri:this.props.articleImageUrl}}>\r\n                    </Image>\r\n                </View>  \r\n                <View style={styles.articleTextContainer}>\r\n                    <View style={styles.articleTextContentContainer}>\r\n                        <View style={styles.articleTitleContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'Bold'}}>{this.props.articleTitle}</Text>\r\n                        </View>\r\n                        <View style={[styles.articleCreateTimeContainer,{\r\n                            borderRadius:1,\r\n                            borderStyle: 'dashed',\r\n                        }]}>\r\n                        <Text style={{fontSize:15}}>{convertDateTimeToDate(this.props.articleCreatedTime)+\"   \"+convertDateTimeToTime(this.props.articleCreatedTime)}</Text>                                   \r\n                        </View>\r\n                        <View style={styles.articleShortContentContainer}>\r\n                            <Text style={{fontSize:17, textAlign: 'justify'}}>{this.props.articleShortContent}</Text>        \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.articleTextCreatorNameContainer}>\r\n                        <View style={styles.articleCreatorNameContainer}>\r\n                            <Text style={{fontSize:17}}>{this.props.creatorName}</Text>\r\n                        </View>\r\n                    </View>\r\n                    \r\n                </View>     \r\n                                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    articleListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    articleImageContainer:{\r\n        margin:10,\r\n        height:200,\r\n        width:200,\r\n    },\r\n    articleImage:{\r\n        height:200,\r\n        width:200,\r\n    },\r\n    articleTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-620,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        backgroundColor:'',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:5,\r\n        paddingTop:10,\r\n    },\r\n    articleTextContentContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-650,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        backgroundColor:''\r\n    },\r\n    articleTextCreatorNameContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-630,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        backgroundColor:'',\r\n        paddingRight:10,\r\n    },\r\n    articleTitleContainer:{\r\n        marginBottom:10,\r\n    },\r\n    articleCreateTimeContainer:{\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n        padding:2,\r\n        marginBottom:10\r\n    },\r\n    articleShortContentContainer:{\r\n    },\r\n    articleCreatorNameContainer:{\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport ArticleListViewItem from './ArticleListViewItem'\r\n\r\nexport default class ArticleListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            statusSelected: 'pending',\r\n            districtSelected: 'D0',\r\n            articleList: this.props.articleList,\r\n        };\r\n        this.onArticlePress = this.onArticlePress.bind(this)\r\n    }\r\n\r\n    \r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                articleList: this.props.articleList,\r\n            }));\r\n        }\r\n    }\r\n\r\n    onArticlePress (){\r\n        this.props.changeShowView ? this.props.changeShowView('ArticleView'): null\r\n    }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleListArea}>\r\n            <View style={styles.articleListTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Bài viết mới </Text>\r\n                <TouchableOpacity \r\n                    style={styles.createNewArticleButton}\r\n                    onPress={() => this.props.changeShowView ? this.props.changeShowView('ArticleAddView'): null}\r\n                    >\r\n                    <Text>Tạo bài viết mới</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.articleListFlatListArea}>        \r\n                <FlatList style={styles.articleListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.state.articleList}\r\n                    // extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <ArticleListViewItem\r\n                                    articleId={item.id}         \r\n                                    articleTitle={item.tittle}                            \r\n                                    articleShortContent={item.shortContent}    \r\n                                    articleContent={item.content}    \r\n                                    articleImageUrl={item.image}\r\n                                    userId={item.userID}\r\n                                    articleCreatedTime={item.createdTime}\r\n                                    creatorName={item.creatorName}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedArticle={this.props.setSelectedArticle?this.props.setSelectedArticle: null}\r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleListTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n    },\r\n    createNewArticleButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginRight:200,\r\n    },\r\n    articleListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    articleListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n// import * as DocumentPicker from 'expo-document-picker';\r\n\r\nexport default class ArticleAddView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            imageResultUri: '',\r\n            articleTitle: '',\r\n            articleShortContent: '',\r\n            articleContent: '',\r\n            error: '',\r\n            errorList: ['','Phải điền tiêu đề bài viết','Phải điền nội dung ngắn ngọn bài viết', 'Phải điền nội dung bài viết','Bài viết chưa có ảnh min họa'],\r\n\r\n        };\r\n        this.selectPicture = this.selectPicture.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.createArticle = this.createArticle.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    createArticle(){\r\n        if(this.checkValid()){\r\n            this.callApiCreateArticle()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.articleTitle == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.articleShortContent == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.articleContent == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (this.state.imageResultUri == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiCreateArticle(){\r\n        fetch(getApiUrl()+'/articles/create', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            tittle: this.state.articleTitle,\r\n            shortContent:this.state.articleShortContent,\r\n            content: this.state.articleContent,\r\n            image: this.state.imageResultUri,\r\n            userID: this.props.userInfo.id\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.success? success=result.success : null : null;\r\n                if (success) \r\n                this.props.changeShowView('ArticleListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    selectPicture = async () =>{\r\n        // const result = await DocumentPicker.getDocumentAsync({copyToCacheDirectory:true})\r\n        // console.log(result)\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                this.setState({ imageResultUri: result.uri });\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleAddViewArea}>\r\n            <View style={styles.articleAddTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Thêm bài viết: </Text>                \r\n            </View>\r\n            <View style={styles.articleAddArea}>\r\n                <View style={styles.articleAddContainer}>                    \r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>Tiêu đề: </Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                        placeholder={'Nhập tiêu đề'}   \r\n                        name={\"articleTitle\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.articleTitle}  \r\n                        >           \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Nội dung\\nngắn gọn: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Nhập nội dung ngắn gọn'}\r\n                            name={\"articleShortContent\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.articleShortContent}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Nội dung\\nbài viết: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={12}\r\n                            placeholder={'Nhập nội dung '}\r\n                            name={\"articleContent\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.articleContent} \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đính kèm: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                        <Text style={[styles.rowText,{fontSize:15,width:600,paddingTop:3}]}>{' '+this.state.imageResultUri}</Text>\r\n                    </View>\r\n                    {this.state.imageResultUri?\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{' '}</Text>\r\n                        <Image \r\n                            style={styles.imagePreview}\r\n                            source={{ uri: this.state.imageResultUri}}\r\n                            >\r\n                        </Image>\r\n                    </View>\r\n                    :null\r\n                    }\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.articleAddConfirmButton} onPress={() => this.createArticle()}>\r\n                    <Text>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleAddViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleAddTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    articleAddArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    articleAddContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    articleAddRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:18,\r\n    },\r\n    articleTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    articleAddConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class ArticleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            imageUri: '',\r\n            imageType: '',\r\n            imageResultUri: '',\r\n        };\r\n        \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleViewArea}>\r\n            \r\n            <View style={styles.articleArea}>\r\n                <View style={styles.articleContainer}>      \r\n                    <View style={styles.articleRowContainer}>\r\n                        <Text style={{fontSize:25,fontWeight:'bold'}}>{this.props.article?this.props.article.articleTitle:''}</Text>                \r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{borderWidth:1,borderRadius:1,borderStyle: 'dashed',width:180}]}>\r\n                        <Text style={[styles.rowText,{flex:1,textAlign: 'center',}]}>{this.props.article?convertDateTimeToDate(this.props.article.articleCreatedTime)+\"   \"+convertDateTimeToTime(this.props.article.articleCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{justifyContent: 'center',}]}>\r\n                        <Image \r\n                            style={styles.rowImage}\r\n                            source={{ uri: this.props.article?this.props.article.articleImageUrl:'' }}\r\n                            >\r\n                            </Image>\r\n                    </View>\r\n                    <View style={styles.articleRowContainer}>\r\n                        <Text style={styles.rowText}>{this.props.article?this.props.article.articleContent:''}</Text>\r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{justifyContent: 'flex-end',}]}>\r\n                        <Text style={styles.rowText}>{this.props.article?this.props.article.creatorName:''}</Text>\r\n                    </View>   \r\n                                     \r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    articleArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    articleContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    articleRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        fontSize:18,\r\n        backgroundColor:'',\r\n        textAlign: 'justify'\r\n    },\r\n    articleTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowImage:{\r\n        width:400,\r\n        height:400,\r\n        backgroundColor:''\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,TextInput, Dimensions} from 'react-native';\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\n\r\nexport default class Login extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            phoneNumber: '',\r\n            password:'',\r\n            error: ' ',\r\n            errorList: [' ','Phải điền số điện thoại', 'Phải điền mật khẩu']\r\n        };\r\n        this.callApiLogin = this.callApiLogin.bind(this)\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    login(){\r\n        if(this.checkValid()){\r\n            this.callApiLogin()\r\n        }    \r\n    }\r\n\r\n    \r\n    checkValid(){     \r\n        if (this.state.phoneNumber == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.password == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiLogin(){\r\n        fetch(getApiUrl()+\"/users/login\",{\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                phoneNumber: this.state.phoneNumber,\r\n                password: this.state.password,\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) this.props.loginSuccess(result.userInfo,result.token)\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={{flex:1}}>\r\n            <View style={styles.loginViewArea}>\r\n                <View style={styles.titleContainer}>\r\n                    <Text style={{fontSize:23,fontWeight:'bold'}}>Đăng nhập</Text>\r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowText}>{'Số điện thoại'}</Text>\r\n                    <TextInput \r\n                        style={styles.rowTextInput}\r\n                        name={\"phoneNumber\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.phoneNumber}\r\n                        >                \r\n                    </TextInput>     \r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowText}>{'Mật khẩu'}</Text>\r\n                    <TextInput \r\n                        style={styles.rowTextInput}\r\n                        name={\"password\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.password}\r\n                        secureTextEntry={true}\r\n                        >                \r\n                    </TextInput>     \r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowTextError}>{this.state.error}</Text>                         \r\n                </View>\r\n                <TouchableOpacity style={styles.loginButton} onPress={() => this.login()}>\r\n                    <Text>Đăng nhập</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    loginViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n        paddingTop:70,\r\n    },\r\n    titleContainer:{\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding:20,\r\n        marginBottom:20,\r\n\r\n    },\r\n    rowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width:'100%',\r\n        padding:20,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:130,\r\n        fontSize:18,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 400,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    loginButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:20,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getStateName, getStateColor} from './../Common/CommonFunction'\r\n\r\nexport default class RequestListPendingItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            \r\n        };\r\n        this.onRequestPress = this.onRequestPress.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    onRequestPress(){\r\n        const request= { \r\n            \"requestId\": this.props.requestId,\r\n            \"requestCreatedTime\":this.props.requestCreatedTime,\r\n            \"customerName\":this.props.customerName,\r\n            \"customerPhoneNumber\":this.props.customerPhoneNumber,\r\n            \"customerDOB\":this.props.customerDOB,\r\n            \"requestAddress\":this.props.requestAddress,\r\n            \"requestDistrictName\":this.props.requestDistrictName,\r\n            \"requestTownName\": this.props.requestTownName,\r\n            \"requestMeetingTime\": this.props.requestMeetingTime,\r\n            \"nurseName\":this.props.nurseName,\r\n            \"nurseID\":this.props.nurseID,\r\n            \"lsSelectedTest\":this.props.lsSelectedTest,\r\n            \"requestAmount\":this.props.requestAmount,\r\n            \"requestStatus\":this.props.requestStatus,\r\n            }\r\n        this.props.setSelectedRequest?this.props.setSelectedRequest(request):null\r\n        this.props.changeShowView?this.props.changeShowView('RequestView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.requestListItem}\r\n                onPress={() => this.onRequestPress()}\r\n                >                                \r\n                <View style={[styles.requestListTextContainer,{\r\n                    marginTop:5,\r\n                }]}>                    \r\n                    <View>\r\n                    <Text style={{fontSize:17}}>#{this.props.requestId}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={styles.requestListTextContainer}>\r\n                    <View style={styles.requestListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>{this.props.customerName}</Text>\r\n                    </View>\r\n                    <View style={[styles.requestListSecondColumnContainer,{\r\n                        borderRadius:1,\r\n                        borderStyle: 'dashed',\r\n                    }]}>\r\n                    <Text style={{fontSize:17}}>{convertDateTimeToDate(this.props.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.requestCreatedTime)}</Text>                    \r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:16}}>{this.props.requestAddress+', '+this.props.requestTownName+', '+this.props.requestDistrictName}</Text>\r\n                    </View>\r\n                </View>     \r\n                <View style={[styles.requestListTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.requestListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>Số điện thoại:  {this.props.customerPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.requestListSecondColumnContainer}>\r\n                    <Text style={{fontSize:17,color:'#0c59cf'}}>{getStateName(this.props.requestStatus)}</Text>\r\n                    </View>\r\n                    \r\n                </View>                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    requestListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    requestListTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:3,\r\n        paddingTop:3,\r\n    },\r\n    requestListFirstColumnContainer:{\r\n        width:250,\r\n    },\r\n    requestListSecondColumnContainer:{\r\n        width:230,\r\n        marginLeft:20,\r\n        marginRight:50,\r\n\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport RequestListViewItem from './RequestListViewItem'\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\nimport requestList from './../../Data/requestList'\r\nimport districtList from './../../Data/districtList'\r\n\r\nexport default class RequestListView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            districtsList: this.props.districtList,\r\n            statusSelected: 'all',\r\n            districtSelected: 'all',\r\n            dataChanged: true,\r\n            testsList: this.props.testsList,\r\n            requestList: this.props.requestList,\r\n            requestShowList : this.props.requestList,\r\n            requestCount: this.props.requestList?this.props.requestList.length:'0',\r\n        };\r\n        this.getRequestShowList = this.getRequestShowList.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                requestList: this.props.requestList,\r\n                districtsList: this.props.districtList,\r\n                requestCount: this.props.requestList?this.props.requestList.length:'0', \r\n                dataChanged: !this.state.dataChanged\r\n            }));\r\n        }\r\n    }\r\n\r\n    \r\n    getRequestShowList(){\r\n        if (this.state.statusSelected=='all'){\r\n            if (this.state.districtSelected=='all'){\r\n                return this.state.requestList\r\n            }\r\n            else{\r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                \r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        else{\r\n            if (this.state.districtSelected=='all'){\r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestStatus === this.state.statusSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n            else{                \r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestStatus === this.state.statusSelected && this.state.requestList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        return this.state.requestList\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestListArea}>\r\n            <View style={styles.requestListTopMenuArea}>\r\n                <View style={styles.requestListTopMenuContainer}>\r\n                    <Text>Trạng thái: </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.statusSelected}\r\n                        style={styles.requestTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            statusSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}\r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        <Picker.Item label=\"Đang đợi y tá nhận đơn\" value=\"pending\" />\r\n                        <Picker.Item label=\"Đơn đã được y tá chấp nhận\" value=\"accepted\" />\r\n                        <Picker.Item label=\"Đơn đã được lấy mẫu\" value=\"transporting\" />\r\n                        <Picker.Item label=\"Đang đợi kết quả\" value=\"waitingforresult\" />\r\n                        <Picker.Item label=\"Đơn đã xong\" value=\"closed\" />\r\n                        <Picker.Item label=\"Y tá làm mất mẫu\" value=\"lostsample\" />\r\n                        <Picker.Item label=\"Điều phối viên là mất mẫu\" value=\"coordinatorlostsample\" />\r\n                        <Picker.Item label=\"Đơn đã hủy\" value=\"canceled\" />\r\n                    </Picker>\r\n                    <Text style={{marginLeft:200}}>Quận/Huyện : </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.districtSelected}\r\n                        style={styles.requestTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            districtSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}                    \r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        {this.state.districtsList?this.state.districtsList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />\r\n                        )):null}\r\n                    </Picker>\r\n                </View>\r\n                <View style={styles.requestListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getRequestShowList()?this.getRequestShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.requestListFlatListArea}>\r\n                <FlatList style={styles.requestListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getRequestShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <RequestListViewItem\r\n                                    requestId={item.requestID}\r\n                                    requestCreatedTime={item.requestCreatedTime}\r\n                                    customerName={item.customerName}\r\n                                    customerPhoneNumber={item.customerPhoneNumber}\r\n                                    customerDOB={item.customerDOB}\r\n                                    requestAddress={item.requestAddress}\r\n                                    requestDistrictName={item.requestDistrictName}\r\n                                    requestTownName={item.requestTownName}\r\n                                    requestMeetingTime={item.requestMeetingTime}\r\n                                    nurseName={item.nurseName}\r\n                                    nurseID={item.nurseID}\r\n                                    lsSelectedTest={item.lsSelectedTest}\r\n                                    requestAmount={item.requestAmount}\r\n                                    requestStatus={item.requestStatus}\r\n                                    testList={this.state.testsList} \r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedRequest={this.props.setSelectedRequest?this.props.setSelectedRequest: null}         \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestListTopMenuArea: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n        paddingTop:10,\r\n    },\r\n    requestListTopMenuContainer: {\r\n        alignSelf: 'stretch',\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:10,\r\n        paddingLeft:200,\r\n        paddingRight:200\r\n    },\r\n    requestTypeDropdown:{\r\n        height: 35, \r\n        width: 300,\r\n        borderRadius:5,\r\n    },\r\n    requestListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    requestListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, Text, TextInput, ScrollView, TouchableOpacity} from 'react-native';\r\nimport {convertMoney} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class RequestTestViewItem extends Component {\r\n    \r\n    componentDidMount(){\r\n        // console.log(this.props.testID+' '+this.props.index+' '+this.props.countHide+' '+this.props.math+this.props.backgroundColor)\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <View style={[styles.testItem,{\r\n                backgroundColor:this.props.backgroundColor?this.props.backgroundColor:'white',    \r\n            }]}>\r\n                <View style={styles.testName}>\r\n                    <Text style={{fontSize:15,color:'#25345d'}} >{this.props.testName}</Text>\r\n                </View>\r\n                <View style={styles.testPrice}>\r\n                    <Text style={{fontSize:15,color:'#25345d'}}  >{convertMoney(this.props.testPrice)}</Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testItem:{\r\n        height:45,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        //borderWidth:1,\r\n        //borderColor:'#25345d',\r\n    },\r\n    testName:{\r\n        width: 500,\r\n        height:29,\r\n        paddingLeft:5,\r\n        paddingRight:5,\r\n        paddingTop:3\r\n    },\r\n    testPrice:{\r\n        width: 100,\r\n        height:15,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        marginBottom:2,\r\n        paddingRight:10\r\n    }\r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, Text, TextInput, ScrollView, TouchableOpacity, FlatList, Alert} from 'react-native';\r\nimport RequestTestViewItem from './RequestTestViewItem'\r\nimport {convertMoney} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class RequestTestCategoryItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={        \r\n            visible: false\r\n        }\r\n        this.isVisible = this.isVisible.bind(this);\r\n    }\r\n\r\n    isVisible(){\r\n        let result = false;\r\n        this.props.test.forEach(test => {\r\n            this.props.isSelected(test.testID) == true ? result=true : '';  \r\n        });\r\n        return result;\r\n    }\r\n\r\n    render(){\r\n        const testList = this.props.test;\r\n        let countHide = 0;\r\n        return(\r\n            <View>\r\n            {this.isVisible() ?\r\n            <View>\r\n                <View style={styles.testCategoryItem}  >\r\n                    <View style={styles.testCategoryNameContainer}>\r\n                        <Text style={{fontSize:17,color:''}} >{this.props.categoryName}</Text>\r\n                    \r\n                    </View>\r\n                </View>\r\n                <FlatList \r\n                    style ={styles.TestListAreaScrollView}                        \r\n                    showsVerticalScrollIndicator={false}\r\n                    scrollEnabled={false}\r\n                    data={testList}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item, index}) => {\r\n                            this.props.isSelected(item.testID) ?  null : countHide+=1 ;\r\n                            return ( \r\n                                <View>                                 \r\n                                { this.props.isSelected(item.testID) ?\r\n                                    // <View style={[styles.testItem,{\r\n                                    //     backgroundColor:(parseInt(index)-countHide) % 2 == 0 ? '#EEE': '#FFF',    \r\n                                    // }]}>\r\n                                    //     <View style={styles.testName}>\r\n                                    //         <Text style={{fontSize:15,color:'#25345d'}} >{item.testName}</Text>\r\n                                    //     </View>\r\n                                    //     <View style={styles.testPrice}>\r\n                                    //         <Text style={{fontSize:15,color:'#25345d'}}  >{convertMoney(item.price)}</Text>\r\n                                    //     </View>\r\n                                    // </View>\r\n\r\n                                    <RequestTestViewItem \r\n                                    testName={item.testName}\r\n                                    testPrice={item.price}\r\n                                    testID={item.testID}\r\n                                    // backgroundColor={(parseInt(index)-countHide) % 2 === 0 ? '#EEE': '#FFF'}\r\n                                    backgroundColor='white'\r\n                                    countHide={countHide}\r\n                                    index={index}\r\n                                    math={(parseInt(index)-countHide) % 2 }\r\n                                    /> \r\n                                    : null}    \r\n                                </View>                          \r\n                            );\r\n                        }}\r\n                />\r\n            </View> \r\n            : null }\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testCategoryItem:{\r\n        height:50,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n        borderColor:'#25345d',\r\n              \r\n    },\r\n    TestListAreaScrollView:{\r\n        width: '100%',\r\n        flex:1,\r\n        backgroundColor:'white',\r\n        borderRadius:10,\r\n    },\r\n    testCategoryNameContainer:{\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        height:35,\r\n        paddingLeft:5,\r\n        paddingRight:5,   \r\n    },\r\n    testItem:{\r\n        height:45,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        //borderWidth:1,\r\n        //borderColor:'#25345d',\r\n    },\r\n    testName:{\r\n        width: 500,\r\n        height:29,\r\n        paddingLeft:5,\r\n        paddingRight:5,\r\n        paddingTop:3\r\n    },\r\n    testPrice:{\r\n        width: 100,\r\n        height:15,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        marginBottom:2,\r\n        paddingRight:10\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport {getApiUrl, getStateName} from './../Common/CommonFunction'\r\nimport RequestTestCategoryItem from './RequestTestCategoryItem'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class RequestView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {        \r\n            testList: this.props.testList,\r\n        };\r\n        this.isSelected = this.isSelected.bind(this)\r\n        this.getLeftButtonName = this.getLeftButtonName.bind(this)\r\n        this.getRightButtonName = this.getRightButtonName.bind(this)\r\n        this.onLeftButtonPress = this.onLeftButtonPress.bind(this)\r\n        this.onRightButtonPress = this.onRightButtonPress.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n    \r\n    isSelected(id) {\r\n        const found = this.props.request?this.props.request.lsSelectedTest.findIndex(test => test == id) : -1;\r\n        let result = false;\r\n        found === -1 ? '' : result = true;\r\n        return result;\r\n    }\r\n\r\n    \r\n    onTakingSample(){\r\n        fetch(getApiUrl()+\"/requests/update/\"+this.props.request.requestId, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    status: 'waitingforresult',\r\n                    userID: this.props.userInfo.id,\r\n                    note: 'Coordinator have take this request',\r\n                }),\r\n                })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                this.props.changeShowView('RequestListView')\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    onLostSample(){\r\n        this.props.changeShowView('RequestLostSampleView')\r\n    }\r\n\r\n    onUpdateResult(){\r\n        this.props.changeShowView('RequestUpdateResultView')\r\n    }\r\n\r\n    getLeftButtonName(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                return '';\r\n                break;\r\n            case 'waitingforresult':\r\n                return 'Làm mất mẫu';\r\n                break;            \r\n            default: '';\r\n        }\r\n    }\r\n\r\n    getRightButtonName(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                return 'Xác nhận lấy mẫu';\r\n                break;\r\n            case 'waitingforresult':\r\n                return 'Cập nhật kết quả';\r\n                break;            \r\n            default: ''\r\n        }\r\n    }\r\n\r\n\r\n    onLeftButtonPress(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                \r\n                break;\r\n            case 'waitingforresult':\r\n                this.onLostSample();\r\n                break;\r\n        }\r\n    }\r\n\r\n    onRightButtonPress(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n                this.onTakingSample();\r\n                break;\r\n            case 'waitingforresult':\r\n                this.onUpdateResult();\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Chi tiết đơn yêu cầu xét nghiệm</Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>      \r\n                    <View style={styles.requestRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.requestId:''}</Text>                \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.customerName:''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Địa chỉ nhận đơn: </Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.requestAddress+', '+this.props.request.requestTownName+', '+this.props.request.requestDistrictName:''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <View style={styles.rowFirstContainer}>\r\n                            <Text style={styles.rowText}>Trạng thái: </Text>                \r\n                        </View>\r\n                        <View style={styles.rowSecondContainer}>\r\n                            <Text style={styles.rowText}>{this.props.request?getStateName(this.props.request.requestStatus):''}</Text>            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <FlatList\r\n                                style={styles.rowFlatList}\r\n                                showsVerticalScrollIndicator={false}\r\n                                scrollEnabled={false}\r\n                                data={this.props.testList?this.props.testList:[]}\r\n                                keyExtractor={(item, index) => index.toString()}\r\n                                renderItem={({ item }) => {\r\n                                    return (\r\n                                        <RequestTestCategoryItem\r\n                                            categoryName={item.testTypeName}\r\n                                            test={item.listTest}\r\n                                            isSelected={this.isSelected}\r\n                                        >\r\n                                        </RequestTestCategoryItem>\r\n                                    );\r\n                                }}\r\n                            >\r\n                        </FlatList>\r\n                    </View>\r\n                    {/* <View style={[styles.requestRowContainer,{justifyContent: 'center',}]}>\r\n                        <Image \r\n                            style={styles.rowImage}\r\n                            source={{ uri: this.props.request?this.props.request.requestImageUrl:'' }}\r\n                            >\r\n                        </Image>\r\n                    </View>         */}\r\n                </View>\r\n\r\n                <View style={styles.buttonArea}>\r\n                    {!this.getLeftButtonName(this.props.request?this.props.request.requestStatus:'') ==''?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onLeftButtonPress(this.props.request?this.props.request.requestStatus:'')}>\r\n                        <Text>{this.getLeftButtonName(this.props.request?this.props.request.requestStatus:'')}</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>\r\n                    }\r\n                    {!this.getRightButtonName(this.props.request?this.props.request.requestStatus:'')==''?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onRightButtonPress(this.props.request?this.props.request.requestStatus:'')}>\r\n                        <Text>{this.getRightButtonName(this.props.request?this.props.request.requestStatus:'')}</Text>\r\n                    </TouchableOpacity>  \r\n                    :<View/>\r\n                    }\r\n                </View>\r\n\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:10,\r\n        marginBottom:-20,\r\n    },\r\n    requestArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowFirstContainer:{\r\n        width:200,\r\n    },\r\n    rowSecondContainer:{\r\n        width:'100%',\r\n    },\r\n    rowText:{\r\n        fontSize:18,\r\n        backgroundColor:''\r\n    },\r\n    rowFlatList: {\r\n        width: '100%',\r\n        alignSelf: 'stretch',\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        // borderRadius: 10,\r\n        marginTop: 5,\r\n        backgroundColor:'gray'\r\n    },\r\n    rowImage:{\r\n        width:400,\r\n        height:400,\r\n        backgroundColor:'red'\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\n\r\nexport default class RequestLostSampleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            reason: '',\r\n            error: '',\r\n            errorList: ['','Phải điền lý do làm mất mẫu'],\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.lostSample = this.lostSample.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    lostSample(){\r\n        if(this.checkValid()){\r\n            this.callApiLostSample()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.reason == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiLostSample(){\r\n        fetch(getApiUrl()+'/requests/update/'+this.props.request.requestId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            status: 'coordinatorlostsample',\r\n            userID: this.props.userInfo.id,\r\n            note: this.state.reason,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=result.success : null;\r\n                if (success) \r\n                this.props.changeShowView('RequestListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Báo mất mẫu xét nghiệm: </Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>   \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>        \r\n                        <Text style={styles.rowText}>{this.props.request?this.props.request.requestId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowText,{width:300}]}>{this.props.request?this.props.request.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{'Lý do mất mẫu: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Điền lý do làm mất mẫu'}\r\n                            name={\"reason\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reason}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.requestConfirmButton} onPress={() => this.lostSample()}>\r\n                    <Text>Báo mất mẫu</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    requestArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n    },\r\n    requestTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    requestConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nexport default class RequestUpdateResultView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            // imageUriList: [{'image':'https://znews-photo.zadn.vn/w1024/Uploaded/jgtnrz/2020_03_23/Rebel_4.jpeg'}],\r\n            imageUriList: [],\r\n            requestTitle: '',\r\n            requestShortContent: '',\r\n            requestContent: '',\r\n            error: '',\r\n            errorList: ['','Bài viết chưa có ảnh min họa'],\r\n\r\n        };\r\n        this.selectPicture = this.selectPicture.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.completeUpdateResult = this.completeUpdateResult.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    completeUpdateResult(){\r\n        if(this.checkValid()){\r\n            this.callApiUpdateRequest()\r\n        }\r\n    }\r\n\r\n    checkValid(){  \r\n        if (this.state.imageUriList.length == 0) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiUpdateRequest(){\r\n        fetch(getApiUrl()+'/requests/update/'+this.props.request.requestId, {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            status: 'closed',\r\n            userID: this.props.userInfo.id,\r\n            note: 'Đã cập nhật kết quả',\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=result.success : null;\r\n                if (success) \r\n                this.props.changeShowView('RequestListView')\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    selectPicture = async () =>{\r\n        // console.log(result)\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        fetch(getApiUrl()+'/uploadImage', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": _data.uri\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log('result:'+JSON.stringify(result))\r\n                this.callApiSetResultImage(result.uri)\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    callApiSetResultImage(imageUri){\r\n        fetch(getApiUrl()+'/requests/detail/results/add', {\r\n        method: 'POST',\r\n        headers: {      \r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            image: imageUri,\r\n            userID: this.props.userInfo.id,\r\n            requestID: this.props.request.requestId\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                let success = false\r\n                result ? result.message? null: success=true : null;   \r\n                if(success){\r\n                    let tempList = this.state.imageUriList\r\n                    tempList.push({'image':result.image})\r\n                    console.log(tempList)\r\n                    this.setState({ imageUriList: tempList });   \r\n                }  \r\n                setTimeout(() => {\r\n                    console.log(this.state.imageUriList)\r\n                }, 2000);\r\n                        \r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestAddViewArea}>\r\n            <View style={styles.requestAddTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Thêm kết quả xét nghiệm: </Text>                \r\n            </View>\r\n            <View style={styles.requestAddArea}>\r\n                <View style={styles.requestAddContainer}>                    \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>        \r\n                        <Text style={styles.rowText}>{this.props.request?this.props.request.requestId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowText,{width:300}]}>{this.props.request?this.props.request.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowText}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh kết quả: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        >\r\n                            <Text>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    {this.state.imageUriList.length==0?null:\r\n                    this.state.imageUriList.map(imageUri => (                        \r\n                    <View style={[{ alignSelf: 'stretch',flexDirection: 'column',alignItems: 'flex-start',justifyContent: 'flex-start',margin:0}]}>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{' '}</Text>\r\n                        <Text style={[styles.rowText,{fontSize:15,width:600,paddingTop:3}]}>{' '+imageUri.image}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{' '}</Text>\r\n                        <Image \r\n                            style={styles.imagePreview}\r\n                            source={{ uri: imageUri.image}}\r\n                            >\r\n                        </Image>\r\n                    </View>\r\n                    </View>\r\n                    ))\r\n                    }\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.requestAddConfirmButton} onPress={() => this.completeUpdateResult()}>\r\n                    <Text>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestAddViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestAddTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    requestAddArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestAddContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n    },\r\n    requestTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    requestAddConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'white',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getAppointmentStateName, getStateColor} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            testPrice: this.props.testPrice,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                testPrice: this.props.testPrice\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.props.updatePrice?this.props.updatePrice(this.props.testId,value):null\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(        \r\n            <View style={styles.testListItem}>  \r\n                <View style={[styles.testTextContainer,{marginTop:5,}]}>  \r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17}}>Loại Test: </Text>\r\n                    </View>\r\n                    <View style={styles.testListSecondColumnContainer}>\r\n                        <Text style={{fontSize:17}}>{this.props.testTypeName}</Text>\r\n                    </View>\r\n                </View>                               \r\n                <View style={styles.testTextContainer}>           \r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17}}>Tên Test: </Text>\r\n                    </View>\r\n                    <View style={styles.testListSecondColumnContainer}>\r\n                        <Text style={{fontSize:17}}>{this.props.testName}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={[styles.testTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17}}>Giá tiền: </Text>\r\n                    </View>\r\n                    <TextInput style={styles.rowTextInput}\r\n                        placeholder={'nhập giá tiền (VNĐ)'}\r\n                        name={\"testPrice\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.testPrice.toString()}\r\n                        >   \r\n                    </TextInput>\r\n                </View>                     \r\n            </View>      \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    testListItem:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    testTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: Dimensions.get('window').width-400,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:20,\r\n        paddingRight:10,\r\n        paddingBottom:5,\r\n        paddingTop:5,\r\n    },\r\n    testListFirstColumnContainer:{\r\n        width:100,\r\n    },\r\n    testListSecondColumnContainer:{\r\n        width:500,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 100,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput} from 'react-native';\r\nimport TestListItem from './TestListItem'\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport appointmentList from './../../Data/appointmentList'\r\nimport districtList from './../../Data/districtList'\r\nimport userList from './../../Data/userList'\r\n\r\nexport default class TestUpdateView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            versionSelected:'2',\r\n            versionCreatedTime: null,\r\n            versionCreatorName: null,\r\n            testTypeSelected: 'none',\r\n            testTypeSelectedForCreate: 'none',\r\n            dataChanged: true,\r\n            testList: [],\r\n            testListTemp: [],\r\n            versionList: null,\r\n            testName: '',\r\n            testPrice: '',\r\n            newTestId: 1,\r\n            error: '',\r\n            errorList: ['','Phải chọn loại xét nghiệm','Phải điền tên xét nghiệm', 'Phải điền giá xét nghiệm'],\r\n        };\r\n        this.createTest = this.createTest.bind(this)\r\n        this.handleChange= this.handleChange.bind(this)\r\n        this.getTestList = this.getTestList.bind(this)\r\n        this.updatePrice = this.updatePrice.bind(this)\r\n        this.setSelectedVersion = this.setSelectedVersion.bind(this)\r\n        this.callApiUpdateVersion = this.callApiUpdateVersion.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.callApiGetVersionList()\r\n        // this.callApiGetTestList()\r\n    }\r\n\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                // testList: this.props.testList,\r\n                // testListTemp: this.props.testList,\r\n            }));\r\n        }\r\n    }\r\n\r\n    callApiGetVersionList(){\r\n        fetch(getApiUrl()+\"/tests/versions/list\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success){\r\n                    this.setState(previousState => ({\r\n                        versionList: result,\r\n                        versionSelected: result[0].versionID,\r\n                        versionCreatedTime: result[0].createdTime,\r\n                        versionCreatorName: result[0].creatorName,\r\n                    }));\r\n                    this.callApiGetTestList()\r\n                }\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n\r\n    createTest(){\r\n        if(this.checkValid()){\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.testListTemp[index].testTypeID == this.state.testTypeSelectedForCreate) {\r\n                    let testList = this.state.testListTemp[index].listTest\r\n                    let newTest = {\r\n                        'testID':(\"new\"+this.state.newTestId),\r\n                        'testName':this.state.testName,                   \r\n                        'price':this.state.testPrice,\r\n                        'testTypeID': this.state.testTypeSelectedForCreate,\r\n                        'testTypeName': this.state.testListTemp[index].testTypeName,\r\n                        }\r\n                    testList.push(newTest)\r\n\r\n                    // let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                    // while(indexTest >= 0){\r\n                    //     var test = this.state.testListTemp[index].listTest[indexTest]\r\n                    //     test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                    //     result.push(test)\r\n                    //     indexTest -=1;\r\n                    // }\r\n                }\r\n                index -= 1;   \r\n            } \r\n        }    \r\n    }\r\n    \r\n    checkValid(){        \r\n        if (this.state.testTypeSelectedForCreate == 'none') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.testName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.testPrice == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiUpdateVersion  = async () => {\r\n        let result = []\r\n        let index = this.state.testListTemp.length - 1;\r\n        while (index >= 0) {\r\n            let indexTest = this.state.testListTemp[index].listTest.length -1\r\n            while(indexTest >= 0){     \r\n                var test = this.state.testListTemp[index].listTest[indexTest]           \r\n                result.push(test)\r\n                indexTest -=1;\r\n            }\r\n            index -= 1;\r\n        }        \r\n        console.log(result)\r\n        fetch(getApiUrl()+'/tests/versions/upgrade-version', {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer '+this.props.token,\r\n        },\r\n        body: JSON.stringify({\r\n            creatorID: this.props.userInfo.id,\r\n            lsInputTest: result,\r\n        }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log('result:'+JSON.stringify(result))\r\n                this.callApiGetVersionList()\r\n                // this.callApiGetTestList()\r\n            },\r\n            (error) => {\r\n                console.log('error:'+error)    \r\n            }\r\n        );\r\n    }\r\n\r\n    updatePrice(testId,newPrice){\r\n        let result = []\r\n        let index = this.state.testListTemp.length - 1;\r\n        while (index >= 0) {\r\n            var testType = this.state.testListTemp[index]\r\n            let testList = []\r\n            let indexTest = this.state.testListTemp[index].listTest.length -1\r\n            while(indexTest >= 0){\r\n                var test = this.state.testListTemp[index].listTest[indexTest]\r\n                if (test.testID == testId){\r\n                    test.price = newPrice\r\n                } \r\n                testList.push(test)               \r\n                indexTest -=1;\r\n            }\r\n            testType['listTest'] = testList;\r\n            result.push(testType)\r\n            index -= 1;            \r\n        }      \r\n        // console.log(this.state.testListTemp)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    setSelectedVersion(versionId){\r\n        let index = this.state.versionList.length -1\r\n        while(index >= 0){\r\n            var version = this.state.versionList[index]\r\n            if (version.versionID == versionId){\r\n                this.setState({\r\n                    versionSelected: versionId,\r\n                    versionCreatedTime: version.createdTime,\r\n                    versionCreatorName: version.creatorName,\r\n                })\r\n            }     \r\n            index -= 1;\r\n        }      \r\n        this.callApiGetTestList(versionId)\r\n        \r\n        \r\n    }\r\n\r\n    callApiGetTestList(version){\r\n        let url = ''\r\n        if (version) url =  getApiUrl()+\"/tests/versions/list-all-test/\"+version\r\n        else url =  getApiUrl()+\"/tests/versions/lastest-version-test/\"\r\n        fetch(url,{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                let list = []\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                {\r\n                    this.setState(previousState => ({\r\n                        testList: result.lsTests ,\r\n                        testListTemp: result.lsTests ,\r\n                    }));\r\n                }\r\n                else \r\n                this.setState(previousState => ({\r\n                        testList: [],\r\n                        testListTemp: [],\r\n                    }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n\r\n    }\r\n\r\n    getTestList(){\r\n        if (this.state.testTypeSelected =='none'){\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                while(indexTest >= 0){\r\n                    var test = this.state.testListTemp[index].listTest[indexTest]\r\n                    test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                    result.push(test)\r\n                    indexTest -=1;\r\n                }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        else{\r\n            // console.log(this.state.testTypeSelected)\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n                if (this.state.testListTemp[index].testTypeID == this.state.testTypeSelected) {\r\n                    let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                    while(indexTest >= 0){\r\n                        var test = this.state.testListTemp[index].listTest[indexTest]\r\n                        test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                        result.push(test)\r\n                        indexTest -=1;\r\n                    }\r\n                }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        return this.state.testList\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.testUpdateViewArea}>\r\n            <View style={styles.testUpdateMenuArea}>\r\n                <Picker\r\n                    selectedValue={this.state.versionSelected}\r\n                    style={styles.versionDropdown}\r\n                    onValueChange={(itemValue, itemIndex) => this.setSelectedVersion(itemValue)}                    \r\n                    >\r\n                    {this.state.versionList?this.state.versionList.map(version => (\r\n                        <Picker.Item label={version.versionID} value={version.versionID} key={version.versionID}/>\r\n                    )):null}\r\n                </Picker> \r\n                <Text style={[styles.rowText,{width:250}]}>{\"Cập nhật: \"+(this.state.versionCreatedTime?convertDateTimeToDate(this.state.versionCreatedTime)+\"   \"+convertDateTimeToTime(this.state.versionCreatedTime):'')}</Text>   \r\n                <Text style={[styles.rowText,{width:300}]}>{\"Người cập nhật: \"+(this.state.versionCreatorName?this.state.versionCreatorName:'')}</Text>  \r\n                <TouchableOpacity style={styles.testUpdateConfirmButton} onPress={() => this.callApiUpdateVersion()}>\r\n                    <Text>Cập nhật</Text>\r\n                </TouchableOpacity>  \r\n            </View>\r\n            \r\n            <View style={styles.testUpdateArea}>\r\n                <View style={styles.testUpdateContainer}>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={styles.rowText}>Loại test: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.testTypeSelectedForCreate}\r\n                            style={styles.testTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                testTypeSelectedForCreate:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label=\"Chọn loại xét nghiệm\" value=\"none\" key='none'/>\r\n                            {this.state.testList?this.state.testList.map(testType => (\r\n                                <Picker.Item label={testType.testTypeName} value={testType.testTypeID} key={testType.testTypeID}/>\r\n                            )):null}\r\n                        </Picker>\r\n                        <TouchableOpacity style={styles.createTestButton} onPress={() => this.createTest()}>\r\n                            <Text>Tạo bài test</Text>\r\n                        </TouchableOpacity>   \r\n                    </View>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên test:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên bài test'}\r\n                            name={\"testName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.testName}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={styles.rowText}>Giá tiền:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập giá tiền (VNĐ)'}\r\n                            name=\"testPrice\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.testPrice}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.testUpdateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n\r\n            <View style={styles.testUpdateMenuArea}>\r\n                <Picker\r\n                    selectedValue={this.state.testTypeSelected}\r\n                    style={styles.testTypeDropDown}\r\n                    onValueChange={(itemValue, itemIndex) => this.setState({\r\n                        testTypeSelected:itemValue,\r\n                        dataChanged: !this.state.dataChanged,\r\n                    })}                    \r\n                    >\r\n                    <Picker.Item label=\"Chọn loại xét nghiệm\" value=\"none\" key='none'/>\r\n                    {this.state.testList?this.state.testList.map(testType => (\r\n                        <Picker.Item label={testType.testTypeName} value={testType.testTypeID} key={testType.testTypeID}/>\r\n                    )):null}\r\n                </Picker>\r\n                \r\n                <Text style={[styles.rowText,{width:500}]}>Số lượng: {this.getTestList()?this.getTestList().length:'0'}</Text>\r\n                \r\n            </View>\r\n\r\n            <View style={styles.testListFlatListArea}>        \r\n                <FlatList style={styles.testListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getTestList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <TestListItem\r\n                                    testId={item.testID}       \r\n                                    testName={item.testName}                             \r\n                                    testPrice={item.price}\r\n                                    testTypeId={item.testTypeID}  \r\n                                    testTypeName={item.testTypeName}  \r\n                                    updatePrice={this.updatePrice}                                                                   \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testUpdateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    testUpdateMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    versionDropdown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 200,\r\n        borderRadius:5,\r\n        marginRight:30,\r\n    },\r\n    testUpdateArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n        marginBottom:10,\r\n    },\r\n    testUpdateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    testUpdateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        \r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    testTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    testUpdateConfirmButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:50,\r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    testListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    testListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions} from 'react-native';\r\n\r\nimport PageHeader from './PageHeader'\r\n\r\nimport AccountListView from './AccountManagement/AccountListView'\r\nimport AccountCreateView from './AccountManagement/AccountCreateView'\r\nimport AccountView from './AccountManagement/AccountView'\r\nimport AccountChangePasswordView from './AccountManagement/AccountChangePasswordView'\r\n\r\n\r\nimport AppointmentListView from './Appointment/AppointmentListView'\r\nimport AppointmentView from './Appointment/AppointmentView'\r\nimport AppointmentRejectView from './Appointment/AppointmentRejectView'\r\n\r\nimport ArticleListView from './Article/ArticleListView'\r\nimport ArticleAddView from './Article/ArticleAddView'\r\nimport ArticleView from './Article/ArticleView'\r\n\r\nimport LoginView from './Authentication/LoginView'\r\n\r\nimport RequestListView from './Request/RequestListView'\r\nimport RequestView from './Request/RequestView'\r\nimport RequestLostSampleView from './Request/RequestLostSampleView'\r\nimport RequestUpdateResultView from './Request/RequestUpdateResultView'\r\n\r\nimport TestUpdateView from './Test/TestUpdateView'\r\n\r\nimport {getApiUrl} from './Common/CommonFunction'\r\nimport userList  from './../Data/userList'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            //screen function\r\n            Button1Selected: true,\r\n            Button2Selected: false,\r\n            Button3Selected: false,\r\n            Button4Selected: false,\r\n            Button5Selected: false,\r\n            dataChanged: true,\r\n            showView: 'RequestListView',\r\n\r\n            //authentication\r\n            logIn: false,\r\n            userInfo: null,\r\n            // logIn: false,\r\n            // userInfo: null,\r\n            token: '',\r\n            \r\n            //request\r\n            requestList: null,\r\n            selectedRequest: null,\r\n\r\n            //appointment\r\n            appointmentList: null,\r\n            selectedAppointment: null,\r\n\r\n            //article\r\n            articlesList: null,\r\n            selectedArticle : null,\r\n\r\n            //test\r\n            testList: [],\r\n\r\n            //account\r\n            userList: null,\r\n            selectedAccount: null,\r\n\r\n            //other data\r\n            districtList: null,\r\n\r\n        };\r\n        this.loginSuccess = this.loginSuccess.bind(this)\r\n        this.menuButtonPress = this.menuButtonPress.bind(this)\r\n        this.changeShowView = this.changeShowView.bind(this)\r\n        this.setSelectedArticle = this.setSelectedArticle.bind(this)\r\n        this.setSelectedRequest = this.setSelectedRequest.bind(this)\r\n        this.setSelectedAppointment = this.setSelectedAppointment.bind(this)\r\n        this.setSelectedAccount = this.setSelectedAccount.bind(this)\r\n        this.updateUserInfo = this.updateUserInfo.bind(this)\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        // console.log(this.state.userInfo)\r\n        // this.callApiRequestList()\r\n        // this.callApiTestList()\r\n        // this.callApiArticleList()\r\n        // this.callApiUserList()\r\n        // this.callApiAppointmentList()\r\n        // this.callApiDistrictList()\r\n        // setInterval(()=>{\r\n        //     console.log('try again')\r\n        //     this.callApiRequestList()\r\n        //     this.callApiArticleList()\r\n        //     this.callApiUserList()\r\n        //     this.callApiAppointmentList()\r\n        // },5000)\r\n    }\r\n\r\n    changeShowView(newView){\r\n        if (newView=='RequestListView') this.menuButtonPress('1')\r\n        if (newView=='AppointmentListView') this.menuButtonPress('2')\r\n        if (newView=='ArticleListView') this.menuButtonPress('3')\r\n        if (newView=='AccountListView') this.menuButtonPress('5')\r\n        this.setState(previousState => ({ \r\n            showView: newView,\r\n        }))\r\n    }\r\n\r\n    setSelectedArticle(_article){        \r\n        this.setState(previousState => ({ \r\n            selectedArticle: _article,\r\n        }))\r\n    }\r\n\r\n    setSelectedRequest(_request){        \r\n        this.setState(previousState => ({ \r\n            selectedRequest: _request,\r\n        }))\r\n    }\r\n\r\n    setSelectedAppointment(_appointment){    \r\n        // console.log(_appointment)    \r\n        this.setState(previousState => ({ \r\n            selectedAppointment: _appointment,\r\n        }))\r\n    }\r\n\r\n    setSelectedAccount(_account){ \r\n        // console.log(_account)       \r\n        this.setState(previousState => ({ \r\n            selectedAccount: _account,\r\n        }))\r\n    }\r\n\r\n    updateUserInfo(_userInfo){\r\n        this.setState(previousState => ({ \r\n            userInfo: _userInfo,\r\n        }))\r\n    }\r\n\r\n    loginSuccess(_userInfo,_token){\r\n        this.setState(previousState => ({ \r\n            logIn: true,\r\n            userInfo: _userInfo,\r\n            token: _token,\r\n        }))\r\n        setTimeout(() => {\r\n            this.callApiRequestList()\r\n            this.callApiTestList()\r\n            this.callApiArticleList()\r\n            this.callApiUserList()\r\n            this.callApiAppointmentList()\r\n            this.callApiDistrictList()\r\n        }, 10);\r\n\r\n    }\r\n\r\n    menuButtonPress(button){\r\n        if (button==\"1\") this.callApiRequestList()\r\n        if (button==\"2\") this.callApiAppointmentList()\r\n        if (button==\"3\") this.callApiArticleList()\r\n        if (button==\"5\") this.callApiUserList()\r\n        this.setState(previousState => ({ \r\n            Button1Selected: button==\"1\"?true:false,\r\n            Button2Selected: button==\"2\"?true:false,\r\n            Button3Selected: button==\"3\"?true:false,\r\n            Button4Selected: button==\"4\"?true:false,\r\n            Button5Selected: button==\"5\"?true:false,\r\n            showView:   button==\"1\"? 'RequestListView': \r\n                        button==\"2\"? 'AppointmentListView': \r\n                        button==\"3\"? 'ArticleListView':  \r\n                        button==\"4\"? 'TestUpdateView':  \r\n                        button==\"5\"? 'AccountListView': 'RequestListView'\r\n                        ,\r\n            dataChanged: !this.state.dataChanged,\r\n        }))\r\n    }\r\n\r\n\r\n    callApiRequestList= async () => {\r\n        fetch(getApiUrl()+\"/requests/list-all-request\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.state.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    requestList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    callApiAppointmentList= async () =>  {\r\n        fetch(getApiUrl()+\"/appointments/list\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.state.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    appointmentList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    callApiArticleList= async () =>  {\r\n        fetch(getApiUrl()+\"/articles/list\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    articlesList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    callApiUserList= async () =>  {\r\n        fetch(getApiUrl()+\"/users/list-all-user\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.state.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    userList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n    \r\n    callApiTestList = async () => {\r\n        fetch(getApiUrl()+\"/test-types/type-test\")\r\n        // fetch(getApiUrl()+\"/tests/versions/lastest-version-test/\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    testList: result,\r\n                }));\r\n            },\r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    callApiDistrictList = async () => {\r\n        fetch(getApiUrl()+\"/management/districts/district-town-list\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    districtList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={{flex:1}}>\r\n            <PageHeader userInfo={this.state.userInfo?this.state.userInfo:null} changeShowView={this.state.userInfo?this.changeShowView:null}  setSelectedAccount={this.state.userInfo?this.setSelectedAccount:null}/>\r\n            { !this.state.logIn ?\r\n            <LoginView loginSuccess={this.loginSuccess}/>\r\n            :\r\n            <View style={styles.listAreaContainer}>\r\n                <View style={styles.topMenu}>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/5 ,\r\n                        borderWidth: this.state.Button1Selected ? 1:0,\r\n                        backgroundColor: this.state.Button1Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('1')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Yêu cầu xét nghiệm</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/5 ,\r\n                        borderWidth: this.state.Button2Selected ? 1:0,\r\n                        backgroundColor: this.state.Button2Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('2')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Cuộc Hẹn</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/5 ,\r\n                        borderWidth: this.state.Button3Selected ? 1:0,\r\n                        backgroundColor: this.state.Button3Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('3')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Bài đăng</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? WIDTH/4 : WIDTH/5 ,\r\n                        borderWidth: this.state.Button4Selected ? 1:0,\r\n                        backgroundColor: this.state.Button4Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('4')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Test</Text>\r\n                    </TouchableOpacity>\r\n                    {this.state.userInfo.role=='COORDINATOR'? null :\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? 0 : WIDTH/5 ,\r\n                        borderWidth: this.state.Button5Selected ? 1:0,\r\n                        backgroundColor: this.state.Button5Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('5')}\r\n                        >\r\n                        <Text style={styles.topMenuText}>Quản lý tài khoản</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                </View>                \r\n                <View style={{width:'100%',flex:1,backgroundColor:''}}>\r\n                {\r\n                    this.state.showView == 'RequestListView'? \r\n                    <RequestListView requestList={this.state.requestList} changeShowView={this.changeShowView} setSelectedRequest={this.setSelectedRequest} districtList={this.state.districtList} />                    \r\n                    // <ArticleAddView  />\r\n                    : this.state.showView == 'AppointmentListView'? \r\n                    <AppointmentListView appointmentList={this.state.appointmentList} changeShowView={this.changeShowView} setSelectedAppointment={this.setSelectedAppointment} districtList={this.state.districtList}/>\r\n                    : this.state.showView == 'ArticleListView'?\r\n                    <ArticleListView  articleList={this.state.articlesList} changeShowView={this.changeShowView} setSelectedArticle={this.setSelectedArticle}/>\r\n                    : this.state.showView == 'TestUpdateView'?\r\n                    <TestUpdateView  testList={this.state.testList} userInfo={this.state.userInfo} token={this.state.token}/>\r\n                    : this.state.showView == 'AccountListView'?\r\n                    <AccountListView userList={this.state.userList}  changeShowView={this.changeShowView} setSelectedAccount={this.setSelectedAccount}/>\r\n                    // sub screen\r\n                    //request\r\n                    : this.state.showView == 'RequestView'?\r\n                    <RequestView  request={this.state.selectedRequest} testList={this.state.testList} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'RequestLostSampleView'?\r\n                    <RequestLostSampleView  request={this.state.selectedRequest} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'RequestUpdateResultView'?\r\n                    <RequestUpdateResultView  request={this.state.selectedRequest} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    //appointment\r\n                    : this.state.showView == 'AppointmentView'?\r\n                    <AppointmentView  appointment={this.state.selectedAppointment} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    : this.state.showView == 'AppointmentRejectView'?\r\n                    <AppointmentRejectView appointment={this.state.selectedAppointment} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token}/>\r\n                    //article\r\n                    : this.state.showView == 'ArticleAddView'?\r\n                    <ArticleAddView   token={this.state.token}  userInfo={this.state.userInfo} changeShowView={this.changeShowView} />\r\n                    : this.state.showView == 'ArticleView'?\r\n                    <ArticleView  article={this.state.selectedArticle} />\r\n                    //account\r\n                    : this.state.showView == 'AccountCreateView'?\r\n                    <AccountCreateView  districtList={this.state.districtList} token={this.state.token}/>\r\n                    : this.state.showView == 'AccountView'?\r\n                    <AccountView  districtList={this.state.districtList}  account={this.state.selectedAccount} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo}/>\r\n                    : this.state.showView == 'AccountChangePasswordView'?\r\n                    <AccountChangePasswordView account={this.state.selectedAccount} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo} />\r\n                    : <View/>\r\n                    \r\n                }\r\n                </View>\r\n            </View>\r\n            }\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst menuHeight= 50\r\n\r\nconst styles = StyleSheet.create({\r\n    listAreaContainer: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    topMenu:{\r\n        height: menuHeight,\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor:'white'\r\n    },\r\n    topMenuButton:{\r\n        width: Dimensions.get('window').width/3,\r\n        height: menuHeight,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    topMenuText:{\r\n        fontSize:18,\r\n    }\r\n\r\n});\r\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport ListScreen from './components/ListScreen'\n\nexport default function App() {\n  return (\n      <ListScreen/>\n    // <View style={styles.container}>\n    //   <Text>Open up App.js to start working on your app!</Text>\n    // </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/MedTestForCoordinator/expo-service-worker.js', { scope: '/MedTestForCoordinator/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}