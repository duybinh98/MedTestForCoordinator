{"version":3,"sources":["Data/Group 1.png","Data/ABClinic.jpg","Data/userList.js","Data/icon-camera-512.png","components/Common/CommonFunction.js","components/PageHeader.js","components/PageFooter.js","components/AccountManagement/AccountListViewItem.js","components/AccountManagement/AccountListView.js","components/AccountManagement/AccountCreateView.js","components/AccountManagement/AccountView.js","components/AccountManagement/AccountChangePasswordView.js","components/Appointment/AppointmentListViewItem.js","components/Appointment/AppointmentListView.js","components/Common/AlertScreen.js","components/Appointment/AppointmentView.js","components/Appointment/AppointmentRejectView.js","components/Article/ArticleListViewItem.js","components/Article/ArticleListView.js","components/Article/ArticleAddView.js","components/Article/ArticleView.js","components/Authentication/LoginView.js","components/Request/RequestListViewItem.js","components/Request/RequestListView.js","components/Request/RequestTestViewItem.js","components/Request/RequestTestCategoryItem.js","components/Request/RequestView.js","components/Request/RequestResultView.js","components/Request/RequestLostSampleView.js","components/Request/RequestUpdateResultView.js","components/Test/TestListItem.js","components/Test/TestUpdateView.js","components/Common/LoadingView.js","components/ListScreen.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","convertDateTimeToDate","inputString","substring","convertDateTimeToTime","convertDateToDateTime","inputDate","screenWidth","Dimensions","get","width","getRoleName","role","convertMoney","_price","price","toString","index","length","result","getStateName","status","getAppointmentStateName","ListScreen","props","state","requestId","errorMessage","editProfile","bind","logOut","searchRequest","handleChange","this","userInfo","account","id","phoneNumber","name","dob","address","password","active","email","gender","image","townCode","districtCode","changeShowView","setSelectedAccount","setState","setTimeout","event","target","value","ImageBackground","style","styles","headerContainer","resizeMode","View","leftArea","Image","imageIcon","source","require","leftContainer","titleContainer","Text","fontSize","fontWeight","color","hotlineContainer","middleArea","TextInput","searchInputContainer","placeholder","onChange","onSubmitEditing","padding","rightArea","rightContainer","TouchableOpacity","onPress","height","uri","nameContainer","Component","StyleSheet","create","flexDirection","alignItems","justifyContent","backgroundColor","paddingLeft","marginBottom","borderWidth","marginTop","borderRadius","headerHight","footerContainer","textContainer","middleContainer","paddingRight","alignSelf","AccountListViewItem","onAccountPress","accountId","accountPhoneNumber","accountName","accountDob","accountAddress","accountPassword","accountActive","accountEmail","accountRole","accountGender","accountImageUrl","accountTownCode","accountDistrictCode","accountListItem","accountNameContainer","accountPhoneContainer","accountRoleContainer","paddingBottom","margin","marginRight","AccountListScreen","Button1Selected","Button2Selected","Button3Selected","Button4Selected","accountSelected","inputPhoneNumber","isSearch","userList","dataChanged","menuButtonPress","getAccountShowList","searchUser","push","button","previousState","Button5Selected","prevProps","prevState","articleListArea","accountListTopMenuArea","accountListTopMenuContainer","topMenuTextInput","createNewAccountButton","topMenuButton","roleSelectedColor","topMenuText","articleListFlatListArea","articleListFlatListTitleArea","articleListFlatListTitleContainer","articleListTitleNameContainer","articleListTitleText","articleListTitlePhoneContainer","articleListTitleRoleContainer","FlatList","articleListFlatList","contentContainerStyle","showsVerticalScrollIndicator","data","extraData","keyExtractor","item","renderItem","accountRowContainer","rowTextError","flex","paddingTop","componentWidth","TestListView","selectPicture","a","async","ImagePicker","cancelled","callApiUploadImage","accountRePassword","districtList","townList","listTown","districtSelected","townSelected","year","Date","getFullYear","month","getMonth","day","getDate","accountImage","error","errorList","uploadImageApi","createAccountApi","onDistrictChange","createNumberPickerList","getNumberOfDayInMonth","createAccount","districtId","getFebDay","start","end","startToEnd","i","Picker","Item","label","parseInt","checkValid","callApiCreateAccount","test","fetch","getApiUrl","method","headers","Accept","Authorization","token","body","JSON","stringify","getDob","then","res","json","success","message","changeToAccountViewScreen","_data","accountCreateViewArea","accountCreateMenuArea","rowText","accountCreateArea","accountCreateContainer","imagePreviewArea","accountCreateRowContainer","disabled","imagePreview","rowTextInput","selectedValue","accountTypeDropDown","onValueChange","itemValue","itemIndex","secureTextEntry","map","district","districtName","town","townName","accountCreateConfirmButton","createTestButton","marginLeft","accountListFlatListArea","accountListFlatList","addImageButton","updateInfoApi","resetPasswordApi","updateAccountInformation","resetPassword","checkCurrentUser","checkAdmin","changePassword","getDistrictName","getTownName","userProcessingID","callApiUpdateAccountInfo","checkHavingAnyChange","updateUserInfo","indexTown","accountViewArea","accountMenuArea","accountArea","accountContainer","rowTextLong","middleSpace","buttonArea","accountOldPassword","changePasswordApi","callApiChangePassword","url","oldPassword","newPassword","AppointmentListView","onAppointmentPress","appointment","appointmentId","appointmentCreatedTime","customerName","customerPhoneNumber","customerDOB","appointmentMeetingTime","appointmentStatus","setSelectedAppointment","appointmentListItem","appointmentTextContainer","appointmentListFirstColumnContainer","appointmentListSecondColumnContainer","borderStyle","districtsList","statusSelected","testsList","appointmentList","getAppointmentShowList","requestDistrictID","appointment_status","appointmentListArea","appointmentListTopMenuArea","appointmentListTopMenuContainer","appointmentTypeDropdown","appointmentListFlatListArea","appointmentListFlatList","appointment_id","appointment_createdTime","appointment_customerName","appointment_phoneNumber","appointment_DOB","appointment_meetingTime","appointmentListAlertContainer","container","alertContainer","title","content","onCancel","onConfirm","AppointmentView","acceptAppointmentApi","onAccept","onReject","callApiAcceptAppointment","coordinatorID","note","callApiDetail","appointmentViewArea","appointmentTopMenuArea","appointmentArea","appointmentContainer","appointmentRowContainer","rowError","rowFirstContainer","rowSecondContainer","AppointmentLostSampleView","reason","rejectAppointmentApi","rejectAppointment","callApiRejectAppointment","multiline","numberOfLines","appointmentConfirmButton","appointmentTypeDropDown","ArticleListViewItem","onArticlePress","article","articleId","articleTitle","articleContent","articleShortContent","articleImageUrl","userId","articleCreatedTime","creatorName","setSelectedArticle","articleListItem","articleImageContainer","articleImage","articleTextContainer","articleTextContentContainer","articleTitleContainer","articleCreateTimeContainer","articleShortContentContainer","textAlign","articleTextCreatorNameContainer","articleCreatorNameContainer","ArticleListScreen","articleList","onAddArticlePress","articleListTopMenuArea","createNewArticleButton","tittle","shortContent","userID","createdTime","ArticleAddView","imageResultUri","createArticleApi","createArticle","callApiCreateArticle","articleAddViewArea","articleAddTopMenuArea","articleAddArea","articleAddContainer","articleAddRowContainer","articleAddConfirmButton","articleTypeDropDown","ArticleView","imageUri","imageType","deleteArticleApi","onDelete","callApiDeleteArticle","articleViewArea","articleArea","articleContainer","articleRowContainer","rowImage","articleTopMenuArea","Login","loginApi","callApiLogin","isNaN","loginSuccess","Crypto","SHA256","hashedPassword","loginViewArea","rowContainer","login","loginButton","RequestListPendingItem","onRequestPress","testList","request","requestCreatedTime","requestAddress","requestDistrictName","requestTownName","requestMeetingTime","nurseName","nurseId","coordinatorId","coordinatorName","lsSelectedTest","requestAmount","requestStatus","requestUpdatedTime","requestTestVersion","setSelectedRequest","checkVersion","changeToRequestViewScreen","testVersion","lsTests","requestListItem","requestListTextContainer","requestListFirstColumnContainer","requestListSecondColumnContainer","RequestListView","requestList","requestShowList","requestCount","getRequestShowList","requestListArea","requestListTopMenuArea","requestListTopMenuContainer","requestTypeDropdown","requestListFlatListArea","requestListFlatList","requestID","nurseID","versionOfTest","requestListAlertContainer","RequestTestViewItem","testItem","testName","testPrice","RequestTestCategoryItem","visible","isVisible","forEach","isSelected","testID","countHide","testCategoryItem","testCategoryNameContainer","categoryName","TestListAreaScrollView","scrollEnabled","math","borderColor","RequestView","resultList","takingSampleApi","nurseDetailApi","coordinatorDetailApi","getLeftButtonName","getRightButtonName","onLeftButtonPress","onRightButtonPress","callApiTakingSample","callApiNurseDetail","callApiCoordinatorDetail","findIndex","onLostSample","onTakingSample","onUpdateResult","onViewResult","requestViewArea","requestTopMenuArea","requestArea","requestContainer","requestRowContainer","rowFlatList","testTypeName","listTest","aspectRatio","callApiResultList","RequestLostSampleView","lostSampleApi","lostSample","callApiLostSample","requestConfirmButton","requestTypeDropDown","RequestUpdateResultView","imageUriList","requestTitle","requestShortContent","requestContent","setResultImpageApi","updateRequestApi","completeUpdateResult","tempList","callApiSetResultImage","imageList","listImage","callApiUpdateRequest","requestAddViewArea","requestAddTopMenuArea","requestAddArea","requestAddContainer","requestAddConfirmButton","alert","updatePrice","testId","testListItem","testTextContainer","testListFirstColumnContainer","testListSecondColumnContainer","TestUpdateView","versionSelected","versionCreatedTime","versionCreatorName","testTypeSelected","testTypeSelectedForCreate","testListApi","testVersionApi","testListTemp","versionList","newTestId","updateVersionError","updateVersionApi","haveNewTest","createTest","getTestList","setSelectedVersion","callApiUpdateVersion","callApiGetVersionList","versionID","callApiGetTestList","testTypeID","newTest","_newTestId","indexTest","creatorID","lsInputTest","newPrice","testType","versionId","version","temp","testUpdateViewArea","testUpdateMenuArea","versionDropdown","key","testUpdateConfirmButton","testAddArea","testUpdateContainer","testUpdateRowContainer","testTypeDropDown","testListFlatListArea","testListFlatList","testTypeId","textArea","callApiRequestList","requestListApi","callApiAppointmentList","appointmentListApi","callApiArticleList","articleListApi","callApiUserList","userListApi","callApiTestList","callApiDistrictList","showView","logIn","selectedRequest","selectedAppointment","selectedArticle","testListScreenTrigger","selectedAccount","newView","_article","_request","_appointment","_account","_userInfo","userPhoneNumber","_token","listAreaContainer","topMenu","parseFloat","App","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","console"],"mappings":"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","file":"static/js/app.621aacba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Group 1.656244df.png\";","module.exports = __webpack_public_path__ + \"static/media/ABClinic.013acc21.jpg\";","var userList = [\r\n    {\r\n        \"id\":1,\r\n        \"phoneNumber\":\"0987654321\",\r\n        \"name\":\"ADMIN\",\r\n        \"dob\":\"1970-01-01T00:00:00.000+0000\",\r\n        \"address\":\"Default-Address\",\r\n        \"password\":\"$2a$10$Rqs8uzm/mZzJHWABOeOi7OuqyPsptBgWNL5k7Cf9bDnWpRL4gSfbW\",\r\n        \"active\":1,\r\n        \"email\":\"medtest.default@gmail.com\",\r\n        \"role\":\"ADMIN\",\r\n        \"gender\":1,\r\n        \"image\":\"https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png\",\r\n        \"townCode\":\"T0\",\r\n        \"districtCode\":\"D0\"\r\n    },\r\n    {\r\n        \"id\":2,\r\n        \"phoneNumber\":\"0000000001\",\r\n        \"name\":\"DefaultCoordinator\",\r\n        \"dob\":\"1970-01-01T00:00:00.000+0000\",\r\n        \"address\":\"Default-Address\",\r\n        \"password\":\"$2a$10$Rqs8uzm/mZzJHWABOeOi7OuqyPsptBgWNL5k7Cf9bDnWpRL4gSfbW\",\r\n        \"active\":1,\r\n        \"email\":\"medtest.default@gmail.com\",\r\n        \"role\":\"ADMIN\",\r\n        \"gender\":0,\r\n        \"image\":\"https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png\",\r\n        \"townCode\":\"T0\",\r\n        \"districtCode\":\"D0\"\r\n    },\r\n]\r\n\r\n\r\nmodule.exports = userList;\r\n","module.exports = __webpack_public_path__ + \"static/media/icon-camera-512.c2063f5a.png\";","import {Dimensions} from 'react-native';\r\n\r\nexport function convertDateTimeToDate(inputString){\r\n    if (inputString == null ) return ''\r\n    return inputString.substring(8,10)+'-'+inputString.substring(5,7)+'-'+inputString.substring(0,4);\r\n}\r\n\r\nexport function convertDateTimeToTime(inputString){\r\n    if (inputString == null ) return ''\r\n    return inputString.substring(11,13)+':'+inputString.substring(14,16);\r\n}\r\n\r\nexport function convertDateAndTimeToDateTime(inputDate,inputTime){\r\n    return inputDate.substring(6,10)+'-'+inputDate.substring(3,5)+'-'+inputDate.substring(0,2)+'T'+inputTime+':00.000+0000'\r\n}\r\n\r\nexport function convertDateToDateTime(inputDate){\r\n    return inputDate.substring(6,10)+'-'+inputDate.substring(3,5)+'-'+inputDate.substring(0,2)+'T00:00:00.000+0000'\r\n}\r\n\r\nexport function getApiUrl(){\r\n    // return \"http://192.168.1.17:8080\";\r\n    return \"https://medtest-backend.herokuapp.com\";\r\n}\r\n\r\nexport const componentWidth = 1100\r\n\r\nexport const screenWidth =  Dimensions.get('window').width<1201?1200:\r\n                            // Dimensions.get('window').width<1269?1268:\r\n                            // Dimensions.get('window').width<1350?1349:\r\n                            // Dimensions.get('window').width<1367?1366:\r\n                            // Dimensions.get('window').width<1537?1536:\r\n                            // Dimensions.get('window').width<1921?1920:\r\n                            Dimensions.get('window').width\r\n\r\nexport function getRoleName(role){\r\n    switch (role) {\r\n        case 'CUSTOMER':\r\n            return 'Khách hàng';\r\n            break;\r\n        case 'NURSE':\r\n            return 'Y tá';\r\n            break;\r\n        case 'COORDINATOR':\r\n            return 'Điều phối viên'\r\n            break;\r\n        case 'ADMIN':\r\n            return 'Quản trị hệ thống'\r\n            break;\r\n        }   \r\n    }\r\n\r\n\r\nexport function convertMoney(_price){\r\n    let price = _price.toString()\r\n    let index = price.length -1\r\n    let result = ''\r\n    while (index >= 3) {\r\n        // console.log(price+\": \"+price.substring(index-2,index+1)+', '+index)\r\n        result = '.'+price.substring(index-2,index+1)+result\r\n        index-=3\r\n    }\r\n    result = price.substring(0,index+1)+result\r\n    return result\r\n}\r\n\r\nexport function getStateName(status){\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'Đang đợi y tá nhận đơn';\r\n            break;\r\n        case 'coordinatorlostsample':\r\n            return 'Điều phối viên làm mất mẫu';\r\n            break;\r\n        case 'accepted':\r\n            return 'Đang đợi lấy mẫu';\r\n            break;\r\n        case 'transporting':\r\n            return 'Đang vận chuyển mẫu';\r\n            break;\r\n        case 'lostsample':\r\n            return 'Đang đợi lấy lại mẫu';\r\n            break;\r\n        case 'waitingforresult':\r\n            return 'Đang đợi kết quả';\r\n            break;\r\n        case 'closed':\r\n            return 'Đã xong';\r\n            break;\r\n        case 'canceled':\r\n            return 'Đã bị hủy';\r\n            break;\r\n        case 'reaccepted':\r\n            return 'Đã nhận đơn bị mất do điều phối viên';\r\n            break;\r\n        case 'retransporting':\r\n            return 'Đang vận chuyển đơn bị mất do điều phối viên';\r\n            break;\r\n        case 'relostsample':\r\n            return 'Đang đợi lấy lại mẫu do điều phối viên làm mất';\r\n            break;\r\n        \r\n    } \r\n}\r\n\r\n\r\nexport function getAppointmentStateName(status){\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'Đơn đang đợi xử lý';\r\n            break;\r\n        case 'accepted':\r\n            return 'Đơn đã được chấp nhận';\r\n            break;\r\n        case 'rejected':\r\n            return 'Đơn đã bị từ chối';\r\n            break;\r\n        case 'canceled':\r\n            return 'Đơn đã bị hủy';\r\n            break;\r\n        \r\n        } \r\n    }\r\n\r\n\r\n\r\nexport function getStateColor(status){\r\n        switch (status) {\r\n        case 'pending':\r\n            return '#ffd66f';\r\n            break;\r\n        case 'coordinatorlostsample':\r\n            return '#ffd66f';\r\n            break;\r\n        case 'accepted':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'transporting':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'lostsample':\r\n            return '#a4d57b';\r\n            break;\r\n        case 'waitingforresult':\r\n            return '#6398d6';\r\n            break;\r\n        case 'closed':\r\n            return '#000';\r\n            break;\r\n        \r\n        } \r\n    }","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, ImageBackground, Picker, TouchableOpacity, Dimensions } from 'react-native';\r\nimport {screenWidth} from './Common/CommonFunction'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            requestId: '',\r\n            errorMessage: '',\r\n        }\r\n        this.editProfile = this.editProfile.bind(this)\r\n        this.logOut = this.logOut.bind(this)\r\n        this.searchRequest = this.searchRequest.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    editProfile(){\r\n        if (this.props.userInfo){\r\n            const account= { \r\n            'accountId':this.props.userInfo.id, \r\n            'accountPhoneNumber':this.props.userInfo.phoneNumber,                      \r\n            'accountName':this.props.userInfo.name,\r\n            'accountDob':this.props.userInfo.dob,\r\n            'accountAddress':this.props.userInfo.address,\r\n            'accountPassword':this.props.userInfo.password,\r\n            'accountActive':this.props.userInfo.active,\r\n            'accountEmail':this.props.userInfo.email,\r\n            'accountRole':this.props.userInfo.role,\r\n            'accountGender':this.props.userInfo.gender,\r\n            'accountImageUrl':this.props.userInfo.image,\r\n            'accountTownCode':this.props.userInfo.townCode,\r\n            'accountDistrictCode':this.props.userInfo.districtCode,\r\n            }\r\n            this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n            this.props.changeShowView?this.props.setSelectedAccount(account):null\r\n        }\r\n    }\r\n\r\n    logOut(){\r\n        this.props.changeShowView?this.props.logOut():null\r\n    }\r\n\r\n    searchRequest(){\r\n        let result = this.props.userInfo?this.props.searchRequest(this.state.requestId):''\r\n        this.setState({\r\n            errorMessage: result,\r\n            requestId: ''\r\n            });\r\n        setTimeout(() => {\r\n            this.setState({errorMessage: ''});\r\n        }, 2500);\r\n    }\r\n\r\n    \r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.headerContainer} \r\n            // source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.leftArea}>\r\n                <Image \r\n                    style={styles.imageIcon}\r\n                    source={require('./../Data/Group 1.png')}>\r\n                </Image>\r\n                <View style={styles.leftContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:25, fontWeight:'bold',color:'white'}}>MedTest</Text>\r\n                    </View>\r\n                    <View style={styles.hotlineContainer}>\r\n                        <Text style={{fontSize:14}}>Hotline: 0961591593</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.middleArea}>\r\n                {this.props.userInfo?\r\n                <View>\r\n                <TextInput style={styles.searchInputContainer}\r\n                placeholder={'Tìm xét nghiệm'}\r\n                name=\"requestId\"\r\n                onChange={this.handleChange}\r\n                value={this.state.requestId}\r\n                onSubmitEditing={() => this.searchRequest()}\r\n                >                \r\n                </TextInput>\r\n                <Text style={{color:'white',padding:7}}>{this.state.errorMessage}</Text>\r\n                </View>\r\n                :<View/>\r\n                }\r\n            </View>\r\n            <View style={styles.rightArea}>\r\n                {this.props.userInfo?\r\n                <View style={styles.rightContainer}>\r\n                    <TouchableOpacity style={{}} onPress={() => this.editProfile()}>\r\n                        <Image \r\n                            style={{\r\n                                width:100,\r\n                                height:100,\r\n                            }}\r\n                            source={{uri:this.props.userInfo?this.props.userInfo.image:''}}>\r\n                            \r\n                        </Image>\r\n                    </TouchableOpacity>\r\n                    <View style={styles.nameContainer} >\r\n                        <Text style={{fontSize:14,color:'white'}}>{this.props.userInfo?this.props.userInfo.name:''}</Text>\r\n                    </View>\r\n                    <TouchableOpacity style={styles.nameContainer} onPress={() => this.logOut()}>\r\n                        <Text style={{fontSize:14,color:'white'}}>{this.props.userInfo?'Đăng xuất':''} </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                :null}\r\n            </View>\r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst headerHight=185\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        height:headerHight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#25345D',\r\n\r\n    },\r\n    leftArea:{\r\n        height:headerHight,\r\n        width:300,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        padding:20,\r\n        \r\n    },\r\n    imageIcon:{\r\n        width:100,\r\n        height:100,\r\n        // marginTop:5\r\n    },\r\n    leftContainer:{\r\n        height:headerHight,\r\n        width:180,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',    \r\n        backgroundColor:'',\r\n        paddingLeft:20,\r\n\r\n    },\r\n    titleContainer:{\r\n        width:100,\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        backgroundColor:'',\r\n        marginBottom:10,\r\n    },\r\n    hotlineContainer:{\r\n        height:35,\r\n        width:150,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        marginTop:10,\r\n    },\r\n    middleArea:{\r\n        height:headerHight,\r\n        // flex:1,\r\n        width: screenWidth-600,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:''\r\n    },\r\n    searchInputContainer:{\r\n        height:30,\r\n        width:screenWidth>1500?800:screenWidth-700,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:25,\r\n    },\r\n    rightArea:{\r\n        height:headerHight,\r\n        width:300,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:'',\r\n    },\r\n    rightContainer:{\r\n        height:headerHight-10,\r\n        width:200,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',    \r\n        padding:0,\r\n        backgroundColor:'',\r\n    },\r\n    nameContainer:{\r\n        height:30,\r\n        width:140,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, ImageBackground, Picker, TouchableOpacity, Dimensions } from 'react-native';\r\nimport {screenWidth} from './Common/CommonFunction'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.footerContainer} \r\n            // source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.leftArea}>                \r\n                <View style={styles.leftContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>TRỤ SỞ HÀ NỘI</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>159 B Lê Thanh Nghị, Hai Bà Trưng, Hà Nội</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.middleArea}>\r\n                <View style={styles.middleContainer}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>CHỊU TRÁCH NHIỆM QUẢN LÝ NỘI DUNG</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Bác sĩ Nguyễn Trần Kiên</Text>\r\n                    </View>\r\n                    <View style={[styles.titleContainer,{marginTop:15}]}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>HỢP TÁC TRUYỀN THÔNG</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Liên hệ: 096 159 1593</Text>\r\n                    </View>\r\n                    <View style={[styles.titleContainer,{marginTop:15}]}>\r\n                        <Text style={{fontSize:13, fontWeight:'bold',color:'white'}}>LIÊN HỆ QUẢNG CÁO</Text>\r\n                    </View>\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>medtest.default@gmail.com</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.rightArea}>\r\n                \r\n                <View style={styles.rightContainer}>\r\n                    <Image \r\n                        style={styles.imageIcon}\r\n                        source={require('./../Data/ABClinic.jpg')}>\r\n                    </Image>\r\n                    {/* <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:14, fontWeight:'',color:'white'}}>© Copyright 2007 - 2020 – </Text>\r\n                        <Text style={{fontSize:14, fontWeight:'bold',color:'white'}}>CÔNG TY CỔ PHẦN VCCORP</Text>\r\n                    </View> */}\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>159 B Lê Thanh Nghị, Hai Bà Trưng, Hà Nội</Text>\r\n                    </View>\r\n                    {/* <View style={styles.textContainer}>\r\n                        <Text style={{fontSize:10,color:'white'}}>Update: 13/05/2020 03:30</Text>\r\n                    </View> */}\r\n                </View>\r\n                \r\n            </View>\r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst footerHeight=200\r\n\r\nconst styles = StyleSheet.create({\r\n    footerContainer: {\r\n        height:footerHeight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#25345D',\r\n    },\r\n    leftArea:{\r\n        height:footerHeight,\r\n        width:500,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        padding:20,\r\n    },\r\n    leftContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        paddingLeft:100,\r\n        paddingRight:50,\r\n\r\n    },\r\n    middleArea:{\r\n        height:footerHeight,\r\n        width: 500,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        padding:20,\r\n        backgroundColor:''\r\n    },\r\n    middleContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',    \r\n        backgroundColor:'',\r\n        paddingLeft:100,\r\n        paddingRight:100,\r\n    },\r\n    searchInputContainer:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:25,\r\n    },\r\n    rightArea:{\r\n        height:footerHeight,\r\n        width:500,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-start',    \r\n        padding:10,\r\n        backgroundColor:'',\r\n    },\r\n    rightContainer:{\r\n        height:'100%',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start', \r\n        paddingLeft:50,\r\n        paddingRight:100,\r\n        backgroundColor:'',\r\n    },\r\n    nameContainer:{\r\n        height:30,\r\n        width:140,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    },\r\n    imageIcon:{\r\n        width:50,\r\n        height:50,\r\n        marginTop:5\r\n    },\r\n    titleContainer:{\r\n        height:20,\r\n        width:'100%',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        backgroundColor:''\r\n    },\r\n    textContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        marginTop:8,\r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getRoleName, componentWidth} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class AccountListViewItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            // appointment_date: convertDateTimeToDate(this.props.appoint_date),\r\n            // appointment_time: convertDateTimeToTime(this.props.appoint_date),\r\n        };\r\n        this.onAccountPress = this.onAccountPress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n\r\n    onAccountPress(){\r\n        const account= { \r\n            'accountId':this.props.accountId, \r\n            'accountPhoneNumber':this.props.accountPhoneNumber,                      \r\n            'accountName':this.props.accountName,\r\n            'accountDob':this.props.accountDob,\r\n            'accountAddress':this.props.accountAddress,\r\n            'accountPassword':this.props.accountPassword,\r\n            'accountActive':this.props.accountActive,\r\n            'accountEmail':this.props.accountEmail,\r\n            'accountRole':this.props.accountRole,\r\n            'accountGender':this.props.accountGender,\r\n            'accountImageUrl':this.props.accountImageUrl,\r\n            'accountTownCode':this.props.accountTownCode,\r\n            'accountDistrictCode':this.props.accountDistrictCode,\r\n            }\r\n        // console.log(account)\r\n        this.props.setSelectedAccount?this.props.setSelectedAccount(account):null\r\n        this.props.changeShowView?this.props.changeShowView('AccountView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.accountListItem}\r\n                onPress={() => this.onAccountPress()}\r\n                >\r\n                <View style={styles.accountNameContainer}>                                       \r\n                <Text style={{fontSize:17}}>{this.props.accountName}</Text>\r\n                </View>\r\n                <View style={styles.accountPhoneContainer}>                                       \r\n                <Text style={{fontSize:17}}>{this.props.accountPhoneNumber}</Text>\r\n                </View>\r\n                <View style={styles.accountRoleContainer}>                                       \r\n                <Text style={{fontSize:17}}>{getRoleName(this.props.accountRole)}</Text>  \r\n                </View>\r\n                     \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    accountListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingBottom:2,  \r\n    },\r\n    accountNameContainer:{\r\n        margin:10,\r\n        width:350,\r\n        alignItems: 'center',\r\n        marginRight:150,\r\n    },\r\n    accountPhoneContainer:{\r\n        margin:10,\r\n        width:200,\r\n        marginRight:100,\r\n        alignItems: 'center',\r\n    },\r\n    accountRoleContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n    },\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput} from 'react-native';\r\nimport {getApiUrl, componentWidth} from './../Common/CommonFunction'\r\nimport AccountListViewItem from './AccountListViewItem'\r\n\r\nexport default class AccountListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            Button1Selected: true,\r\n            Button2Selected: false,\r\n            Button3Selected: false,\r\n            Button4Selected: false,\r\n            Button4Selected: false,\r\n            accountSelected: 'all',\r\n            inputPhoneNumber: '',\r\n            isSearch: false,\r\n            userList: this.props.userList?this.props.userList:[],\r\n            dataChanged: true,\r\n        };\r\n        this.menuButtonPress = this.menuButtonPress.bind(this)\r\n        this.getAccountShowList = this.getAccountShowList.bind(this)\r\n        this.searchUser = this.searchUser.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    // componentDidUpdate  (prevProps, prevState) {        \r\n    //      if (prevProps !== this.props) {\r\n    //         this.setState(previousState => ({ \r\n    //             userList: this.props.userList,\r\n    //         }));\r\n    //     }\r\n    // }\r\n    \r\n    getAccountShowList(){\r\n        if (this.state.isSearch){\r\n            let result = []\r\n            let index = this.state.userList.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.userList[index].phoneNumber === this.state.inputPhoneNumber && \r\n                    (this.state.accountSelected=='all' || this.state.userList[index].role === this.state.accountSelected ) ) {\r\n                        result.push(this.state.userList[index]);\r\n                    }\r\n                index -= 1;\r\n            }\r\n            return result;\r\n        }\r\n        if (this.state.accountSelected=='all'){\r\n            return this.state.userList\r\n        }\r\n        else{\r\n            let result = []\r\n            let index = this.state.userList.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.userList[index].role === this.state.accountSelected) {\r\n                    result.push(this.state.userList[index]);\r\n                    }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        return this.state.userList\r\n    }\r\n\r\n\r\n\r\n\r\n    menuButtonPress(button){\r\n        this.setState(previousState => ({ \r\n            Button1Selected: button==\"1\"?true:false,\r\n            Button2Selected: button==\"2\"?true:false,\r\n            Button3Selected: button==\"3\"?true:false,\r\n            Button4Selected: button==\"4\"?true:false,\r\n            Button5Selected: button==\"5\"?true:false,\r\n            accountSelected: button==\"1\"? 'all': button==\"2\"? 'COORDINATOR': button==\"3\"? 'NURSE' : button==\"4\"? 'CUSTOMER': 'ADMIN',\r\n            dataChanged: !this.state.dataChanged,\r\n            isSearch: false,\r\n            inputPhoneNumber: '',\r\n        }))\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                userList: this.props.userList,\r\n                dataChanged: !this.state.dataChanged,\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    searchUser(){\r\n        // this.props.searchUser?this.props.searchUser(this.state.inputPhoneNumber):null\r\n        this.setState(previousState => ({ \r\n            dataChanged: !this.state.dataChanged,\r\n            isSearch: true,\r\n        }))\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleListArea}>\r\n            <View style={styles.accountListTopMenuArea}>\r\n                <View style={styles.accountListTopMenuContainer}>\r\n                    <TextInput style={styles.topMenuTextInput}\r\n                    placeholder={'Tìm kiếm tài khoản theo số điện thoại'}\r\n                    name=\"inputPhoneNumber\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.inputPhoneNumber}\r\n                    onSubmitEditing={() => this.searchUser()}\r\n                    >                \r\n                    </TextInput>\r\n                    <TouchableOpacity \r\n                        style={styles.createNewAccountButton} \r\n                        onPress={() => this.props.changeShowView ? this.props.changeShowView('AccountCreateView'): null}\r\n                        >\r\n                        <Text style={{color:'white'}}>Tạo tài khoản nhân viên</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={[styles.accountListTopMenuContainer,{\r\n                    }]}>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button1Selected ? 1:0,\r\n                        backgroundColor: this.state.Button1Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('1')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Tất cả</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button2Selected ? 1:0,\r\n                        backgroundColor: this.state.Button2Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('2')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Điều phối viên</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button3Selected ? 1:0,\r\n                        backgroundColor: this.state.Button3Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('3')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Y tá</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button4Selected ? 1:0,\r\n                        backgroundColor: this.state.Button4Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('4')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Khách hàng</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        borderWidth: this.state.Button5Selected ? 1:0,\r\n                        backgroundColor: this.state.Button5Selected ? roleSelectedColor : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('5')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Quản trị hệ thống</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={styles.accountListTopMenuContainer}>\r\n                    <Text >Số lượng: {this.getAccountShowList()?this.getAccountShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.articleListFlatListArea}>     \r\n                <View style={styles.articleListFlatListTitleArea}> \r\n                    <View style={styles.articleListFlatListTitleContainer}> \r\n                        <View style={styles.articleListTitleNameContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Tên người dùng</Text>\r\n                        </View>\r\n                        <View style={styles.articleListTitlePhoneContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Số điện thoại</Text>\r\n                        </View>\r\n                        <View style={styles.articleListTitleRoleContainer}>                                       \r\n                        <Text style={styles.articleListTitleText}>Vị trí</Text>  \r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <FlatList style={styles.articleListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getAccountShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <AccountListViewItem\r\n                                    accountId={item.id}         \r\n                                    accountPhoneNumber={item.phoneNumber}                            \r\n                                    accountName={item.name}    \r\n                                    accountDob={item.dob}    \r\n                                    accountAddress={item.address}\r\n                                    accountPassword={item.password}\r\n                                    accountActive={item.active}\r\n                                    accountEmail={item.email}         \r\n                                    accountRole={item.role}                            \r\n                                    accountGender={item.gender}    \r\n                                    accountImageUrl={item.image}    \r\n                                    accountTownCode={item.townCode}\r\n                                    accountDistrictCode={item.districtCode}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedAccount={this.props.setSelectedAccount?this.props.setSelectedAccount: null}  \r\n                                                                                                    \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList> \r\n                <View style={styles.accountRowContainer}>\r\n                    <Text style={styles.rowTextError}>{this.getAccountShowList().length==0?'Không có tài khoản nào':''}</Text>                        \r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst roleSelectedColor = '#c0c0c0';\r\n\r\nconst roleSelectButtonHeight = 30;\r\n\r\nconst styles = StyleSheet.create({\r\n    articleListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountListTopMenuArea: {\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:40,\r\n        paddingTop:10,\r\n    },\r\n    accountListTopMenuContainer: {\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:10,\r\n        paddingBottom:10,\r\n    },\r\n    topMenuTextInput:{\r\n        height:30,\r\n        width:800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:20,\r\n        paddingLeft:20,\r\n        marginTop:10,\r\n    },\r\n    topMenuButton:{\r\n        width: componentWidth/5,\r\n        height: roleSelectButtonHeight,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    createNewAccountButton:{\r\n        width: 240,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        // marginRight:200,\r\n    },\r\n    articleListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    articleListFlatListTitleArea:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    articleListFlatListTitleContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',   \r\n        backgroundColor:'#c0c0c0',     \r\n    },\r\n    articleListTitleNameContainer:{\r\n        margin:10,\r\n        width:350,\r\n        alignItems: 'center',\r\n        marginRight:150,\r\n    },\r\n    articleListTitlePhoneContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n        marginRight:100,\r\n    },\r\n    articleListTitleRoleContainer:{\r\n        margin:10,\r\n        width:200,\r\n        alignItems: 'center',\r\n    },\r\n    articleListTitleText:{\r\n        fontSize:17, \r\n        fontWeight:'bold'\r\n    },\r\n    articleListFlatList:{\r\n        width: componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n    },\r\n    accountRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:40,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker, ImageBackground} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime, componentWidth} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',\r\n            accountEmail:'',\r\n            accountDob: '',\r\n            accountGender: '1',\r\n            accountPassword: '',\r\n            accountRePassword: '',\r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountAddress: '',\r\n            accountRole: 'NURSE',\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            day: new Date().getDate(),\r\n            accountImage: 'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            error: '',\r\n            errorList: ['',\r\n                    'Tên chủ tài khoản không được bỏ trống',\r\n                    'Số điện thoại phải có mười số',\r\n                    'Địa chỉ email không được bỏ trống',\r\n                    'Địa chỉ email không đúng',\r\n                    'Mật khẩu phải có ít nhất 6 kí tự',\r\n                    'Xác nhận mật khẩu không trùng với mật khẩu ',\r\n                    'Địa chỉ không được bỏ trống'],\r\n            uploadImageApi: true,\r\n            createAccountApi: true,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onDistrictChange = this.onDistrictChange.bind(this)\r\n        this.createNumberPickerList = this.createNumberPickerList.bind(this)\r\n        this.getNumberOfDayInMonth = this.getNumberOfDayInMonth.bind(this)\r\n        this.createAccount = this.createAccount.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountImage: 'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            error: '',\r\n        }));\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                districtList: this.props.districtList?this.props.districtList:[],\r\n                townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n                districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n                townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n                accountImage: 'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n                error: '',\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onDistrictChange(districtId){\r\n        this.setState({\r\n            districtSelected:districtId,                  \r\n        })\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == districtId){\r\n                this.setState({\r\n                    townList:  this.state.districtList[index].listTown,\r\n                    townSelected: this.state.districtList[index].listTown[0]?this.state.districtList[index].listTown[0].townCode:'none'              \r\n                })\r\n                index = 0;\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    getFebDay(){        \r\n        const year = this.state.year\r\n        if (year % 400 == 0 ) return 29\r\n        if (year % 100 == 0 ) return 28\r\n        if (year % 4 == 0) return 29\r\n        return 28\r\n    }\r\n\r\n    getNumberOfDayInMonth(month){\r\n        switch (month) {\r\n            case '1':\r\n            case '3':\r\n            case '5':\r\n            case '7':\r\n            case '8':\r\n            case '10':\r\n            case '12':\r\n                return 31;\r\n                break;\r\n            case '4':\r\n            case '6':\r\n            case '9':\r\n            case '11':\r\n                return 30;\r\n                break;\r\n            case '2':\r\n                return this.getFebDay();\r\n                break;\r\n            \r\n        }   \r\n    }\r\n\r\n    createNumberPickerList(start,end,startToEnd){\r\n        let result = [];\r\n        if(startToEnd){\r\n            for (let i = start; i <= end; i++)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        else{\r\n            for (let i = end; i >= start; i--)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        return result\r\n    }\r\n\r\n    getDob(){\r\n        let result = ''\r\n        if(parseInt(this.state.month)<10)\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n        else\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n        return result\r\n    }\r\n    \r\n    createAccount(){\r\n        // console.log(this.state.accountRole)\r\n        if(this.checkValid()){\r\n            this.callApiCreateAccount()\r\n            // console.log(this.state.accountGender)\r\n        }\r\n    }\r\n    \r\n    checkValid(){\r\n        if (this.state.accountName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.accountPhoneNumber == '' ||  this.state.accountPhoneNumber.length!=10) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.accountEmail == '')\r\n            return this.setState(previousState => ({\r\n                error: this.state.errorList[3]\r\n            }));\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (!reg.test(this.state.accountEmail))\r\n            return this.setState(previousState => ({\r\n                error: this.state.errorList[4]\r\n            }));\r\n        if (this.state.accountPassword == '' || this.state.accountPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[5]\r\n            }));\r\n        if (this.state.accountRePassword != this.state.accountPassword) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[6]\r\n            }));\r\n        if (this.state.accountAddress == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[7]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n\r\n    callApiCreateAccount(){\r\n        if(this.state.createAccountApi){\r\n            this.setState({createAccountApi:false})\r\n            fetch(getApiUrl()+'/users/create-employee', {\r\n            method: 'POST',\r\n            headers: {      \r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.accountName,\r\n                phoneNumber: this.state.accountPhoneNumber,\r\n                email: this.state.accountEmail,\r\n                dob: convertDateToDateTime(this.getDob()),\r\n                gender: this.state.accountGender,\r\n                password: this.state.accountPassword,\r\n                districtCode: this.state.districtSelected,\r\n                townCode: this.state.townSelected,\r\n                address: this.state.accountAddress,\r\n                role: this.state.accountRole,\r\n                image: this.state.accountImage\r\n            }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({createAccountApi:true})\r\n                    // console.log(JSON.stringify(result))\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success){\r\n                        this.props.changeToAccountViewScreen(result)\r\n                    }\r\n                    else{\r\n                        this.setState({error:result.message})\r\n                    }\r\n                    \r\n                },\r\n                (error) => {\r\n                    this.setState({createAccountApi:true})\r\n                    // console.log('error:'+error)    \r\n                }\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    selectPicture = async () =>{\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        // console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        if(this.state.uploadImageApi){\r\n            this.setState({uploadImageApi:false})\r\n            fetch(getApiUrl()+'/uploadImage', {\r\n            method: 'POST',\r\n            headers: {      \r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                \"file\": _data.uri\r\n            }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({uploadImageApi:true})\r\n                    // console.log('result:'+JSON.stringify(result))\r\n                    this.setState({ accountImage: result.uri });\r\n                },\r\n                (error) => {\r\n                    this.setState({uploadImageApi:true})\r\n                    // console.log('error:'+error)\r\n                }\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Tạo nhân viên mới: \"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={styles.accountCreateRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <TouchableOpacity onPress={() => this.selectPicture()} disabled={!this.state.uploadImageApi}\r\n                            >\r\n                                <ImageBackground\r\n                                    style={styles.imagePreview}\r\n                                    source={{ uri: this.state.accountImage}}\r\n                                    >\r\n                                    <Image \r\n                                        style={{width:50,height:50}}\r\n                                        source={require('./../../Data/icon-camera-512.png')}>\r\n                                    </Image>\r\n                                </ImageBackground>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên nhân viên:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên nhân viên'}\r\n                            name={\"accountName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountName}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập số điện thoại của nhân viên'}\r\n                            name=\"accountPhoneNumber\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPhoneNumber}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ email:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ email của nhân viên'}\r\n                            name=\"accountEmail\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountEmail}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                        <Picker\r\n                            selectedValue={this.state.day}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,this.getNumberOfDayInMonth(this.state.month.toString()),true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.month}\r\n                            style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                day: this.getNumberOfDayInMonth(itemValue)<this.state.day?'1':this.state.day,\r\n                                month:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1,12,true)}\r\n                        </Picker>\r\n                        <Picker\r\n                            selectedValue={this.state.year}\r\n                            style={[styles.accountTypeDropDown,{width:80}]}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                year:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.createNumberPickerList(1920,new Date().getFullYear(),false)}\r\n                        </Picker>\r\n                        \r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Giới tính:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.accountGender}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountGender:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Nam'} value={'1'} />\r\n                            <Picker.Item label={'Nữ'} value={'0'} />\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu'}\r\n                            name=\"accountPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Xác nhận mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Xác nhận lại mật khẩu'}\r\n                            name=\"accountRePassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountRePassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>                    \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Quận/huyện:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.districtSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.onDistrictChange(itemValue)}                    \r\n                            >\r\n                            {this.state.districtList?this.state.districtList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />))\r\n                            : null }\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Phường/xã:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.townSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                townSelected:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.state.townList?this.state.townList.map(town => (\r\n                            <Picker.Item label={town.townName} value={town.townCode} />\r\n                            )): null}\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ chi tiết:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ chi tiết: số nhà, đường, thôn, ..'}\r\n                            name=\"accountAddress\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountAddress}\r\n                            >                \r\n                        </TextInput>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Vị trí nhân viên:</Text>\r\n                        <Picker\r\n                            selectedValue={this.state.accountRole}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountRole:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Y tá'} value={'NURSE'} />\r\n                            <Picker.Item label={'Điều phối viên'} value={'COORDINATOR'} />\r\n                            <Picker.Item label={'Quản trị hệ thống'} value={'ADMIN'} />\r\n                        </Picker>\r\n                    </View> \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n            <TouchableOpacity style={styles.accountCreateConfirmButton} onPress={()=>this.createAccount()} disabled={!this.state.createAccountApi}>\r\n                    <Text style={{color:'white'}}>Tạo tài khoản nhân viên</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:50,\r\n        paddingBottom:50,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        fontWeight:'bold'\r\n        \r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    accountCreateConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:30,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        \r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:'',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n\r\n    },\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker, ImageBackground} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime, componentWidth} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',\r\n            accountEmail:'',\r\n            accountDob: '',\r\n            accountGender: '',\r\n            accountPassword: '',\r\n            accountRePassword: '',\r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountAddress: '',\r\n            accountRole: '',\r\n            accountActive: '',\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            day: new Date().getDate(),\r\n            accountImage: 'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            error: '',\r\n            errorList: ['',\r\n                        'Tên chủ tài khoản không được bỏ trống',\r\n                        'Địa chỉ email không được bỏ trống',\r\n                        'Địa chỉ email không đúng',\r\n                        'Địa chỉ không được bỏ trống',\r\n                        'Thông tin không có sự thay đổi',\r\n                        ],\r\n            updateInfoApi: true,\r\n            uploadImageApi: true,\r\n            resetPasswordApi: true,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.onDistrictChange = this.onDistrictChange.bind(this)\r\n        this.createNumberPickerList = this.createNumberPickerList.bind(this)\r\n        this.getNumberOfDayInMonth = this.getNumberOfDayInMonth.bind(this)\r\n        this.updateAccountInformation = this.updateAccountInformation.bind(this)\r\n        this.resetPassword = this.resetPassword.bind(this)\r\n        this.checkCurrentUser = this.checkCurrentUser.bind(this)\r\n        this.checkAdmin = this.checkAdmin.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n        this.getDob = this.getDob.bind(this)\r\n        this.getDistrictName = this.getDistrictName.bind(this)\r\n        this.getTownName = this.getTownName.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.account?this.props.account.accountDistrictCode:this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.account?this.props.account.accountTownCode:this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            accountEmail: this.props.account?this.props.account.accountEmail:'',\r\n            //accountDob currently useless\r\n            accountDob: this.props.account?this.props.account.accountDob:'',\r\n            accountGender: this.props.account?this.props.account.accountGender:'',\r\n            accountRole: this.props.account?this.props.account.accountRole:'',\r\n            accountAddress: this.props.account?this.props.account.accountAddress:'',\r\n            accountActive: this.props.account?this.props.account.accountActive:'',\r\n            accountImage: this.props.account?this.props.account.accountImageUrl:'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            year: this.props.account?this.props.account.accountDob? this.props.account.accountDob.substring(0,4):'2020':'2020',\r\n            month: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(5,7)).toString():'2020':'2020',\r\n            day: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(8,10)).toString():'2020':'2020',\r\n            error: '',\r\n        }));\r\n        this.onDistrictChange(this.props.account?this.props.account.accountDistrictCode:this.props.districtList?this.props.districtList[0].districtCode:'none')\r\n    }\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n        if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n            districtList: this.props.districtList?this.props.districtList:[],\r\n            townList: this.props.districtList?this.props.districtList[0].listTown:[],\r\n            districtSelected: this.props.account?this.props.account.accountDistrictCode:this.props.districtList?this.props.districtList[0].districtCode:'none',\r\n            townSelected: this.props.account?this.props.account.accountTownCode:this.props.districtList?this.props.districtList[0].listTown[0]?this.props.districtList[0].listTown[0].townCode:'none':'none',\r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            accountEmail: this.props.account?this.props.account.accountEmail:'',\r\n            accountDob: this.props.account?this.props.account.accountDob:'',\r\n            accountGender: this.props.account?this.props.account.accountGender:'',\r\n            accountRole: this.props.account?this.props.account.accountRole:'',\r\n            accountAddress: this.props.account?this.props.account.accountAddress:'',\r\n            accountActive: this.props.account?this.props.account.accountActive:'',\r\n            accountImage: this.props.account?this.props.account.accountImageUrl:'https://www.kindpng.com/picc/m/10-104902_simple-user-icon-user-icon-white-png-transparent.png',\r\n            year: this.props.account?this.props.account.accountDob? this.props.account.accountDob.substring(0,4):'2020':'2020',\r\n            month: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(5,7)).toString():'2020':'2020',\r\n            day: this.props.account?this.props.account.accountDob? parseInt(this.props.account.accountDob.substring(8,10)).toString():'2020':'2020',\r\n            error: '',\r\n        }));\r\n        this.onDistrictChange(this.props.account?this.props.account.accountDistrictCode:this.props.districtList?this.props.districtList[0].districtCode:'none')\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onDistrictChange(districtId){\r\n        this.setState({\r\n            districtSelected:districtId,                  \r\n        })\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == districtId){\r\n                this.setState({\r\n                    townList:  this.state.districtList[index].listTown,\r\n                    townSelected: this.state.districtList[index].listTown[0]?this.state.districtList[index].listTown[0].townCode:'none'              \r\n                })\r\n                index = 0;\r\n            }\r\n            index -= 1;\r\n        }        \r\n    }\r\n\r\n    getFebDay(){        \r\n        const year = this.state.year\r\n        if (year % 400 == 0 ) return 29\r\n        if (year % 100 == 0 ) return 28\r\n        if (year % 4 == 0) return 29\r\n        return 28\r\n    }\r\n\r\n    getNumberOfDayInMonth(month){\r\n        switch (month) {\r\n            case '1':\r\n            case '3':\r\n            case '5':\r\n            case '7':\r\n            case '8':\r\n            case '10':\r\n            case '12':\r\n                return 31;\r\n                break;\r\n            case '4':\r\n            case '6':\r\n            case '9':\r\n            case '11':\r\n                return 30;\r\n                break;\r\n            case '2':\r\n                return this.getFebDay();\r\n                break;\r\n            \r\n        }   \r\n    }\r\n\r\n    createNumberPickerList(start,end,startToEnd){\r\n        let result = [];\r\n        if(startToEnd){\r\n            for (let i = start; i <= end; i++)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        else{\r\n            for (let i = end; i >= start; i--)  (\r\n                result.push(<Picker.Item label={i.toString()} value={i.toString()} />)\r\n            )  \r\n        }\r\n        return result\r\n    }\r\n\r\n    getDob(){\r\n        let result = ''\r\n        if(parseInt(this.state.month)<10)\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/0'+this.state.month+'/'+this.state.year\r\n        else\r\n            if(parseInt(this.state.day)<10) return result = '0'+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n            else result = ''+this.state.day+'/'+this.state.month+'/'+this.state.year\r\n        return result\r\n    }\r\n\r\n    resetPassword(){\r\n        if(this.state.resetPasswordApi){\r\n            this.setState({resetPasswordApi:false})\r\n            fetch(getApiUrl()+'/users/reset-password/'+this.props.account.accountId, {\r\n                method: 'POST',\r\n                headers: {      \r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                    \r\n                },\r\n                body: JSON.stringify({\r\n                    userProcessingID: this.props.userInfo.id\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({resetPasswordApi:true})\r\n                    // console.log('result:'+JSON.stringify(result))\r\n                    let success = false\r\n                    result ? result.message?  success=true : null : null;\r\n                    if (success){\r\n                        this.setState({error:result.message})\r\n                        // this.props.changeShowView('AccountListView')\r\n                    }\r\n                        \r\n                },\r\n                (error) => {\r\n                    this.setState({resetPasswordApi:true})  \r\n                    // console.log('error:'+error)  \r\n                }\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n    changePassword(){\r\n        this.props.changeShowView('AccountChangePasswordView')\r\n    }\r\n\r\n    updateAccountInformation(){\r\n        if(this.checkValid()){\r\n            this.callApiUpdateAccountInfo()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.accountName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.accountEmail == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (!reg.test(this.state.accountEmail))\r\n            return this.setState(previousState => ({\r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (this.state.accountAddress == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        if (!this.checkHavingAnyChange()) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[5]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n    checkHavingAnyChange(){\r\n        if(this.state.districtSelected != this.props.account.accountDistrictCode) return true\r\n        if(this.state.townSelected != this.props.account.accountTownCode) return true\r\n        if(this.state.accountName != this.props.account.accountName) return true\r\n        if(this.state.accountPhoneNumber != this.props.account.accountPhoneNumber) return true\r\n        if(this.state.accountEmail != this.props.account.accountEmail) return true\r\n        // accountDob: this.props.account?this.props.account.accountDob:'',\r\n        // if(this.state.accountDob != this.props.account.accountDob) return true\r\n        if(this.state.accountGender != this.props.account.accountGender) return true\r\n        if(this.state.accountRole != this.props.account.accountRole) return true\r\n        if(this.state.accountAddress != this.props.account.accountAddress) return true\r\n        if(this.state.accountActive != this.props.account.accountActive) return true        \r\n        if(this.state.accountImage != this.props.account.accountImageUrl) return true\r\n        if(this.state.year != this.props.account.accountDob.substring(0,4)) return true\r\n        if(this.state.month != parseInt(this.props.account.accountDob.substring(5,7)).toString()) return true\r\n        if(this.state.day != parseInt(this.props.account.accountDob.substring(8,10)).toString()) return true\r\n        return false;\r\n    }\r\n\r\n    callApiUpdateAccountInfo(){\r\n        // console.log(this.state.townSelected)\r\n        if(this.state.updateInfoApi){\r\n            this.setState({updateInfoApi:false})\r\n            fetch(getApiUrl()+'/users/update-user/'+this.props.account.accountId, {\r\n                method: 'POST',\r\n                headers: {      \r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    name: this.state.accountName,\r\n                    dob: convertDateToDateTime(this.getDob()),\r\n                    address: this.state.accountAddress,\r\n                    active: this.state.accountActive,\r\n                    email: this.state.accountEmail,\r\n                    gender: this.state.accountGender,\r\n                    townCode: this.state.townSelected,\r\n                    districtCode: this.state.districtSelected,\r\n                    image: this.state.accountImage\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({updateInfoApi:true})\r\n                    // console.log('result:'+JSON.stringify(result))\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success) {\r\n                        if (this.checkCurrentUser()) this.props.updateUserInfo(result)\r\n                        this.props.changeToAccountViewScreen(result)\r\n                        this.setState({error:'Cập nhật thông tin thành công'})\r\n                        // this.props.changeShowView('AccountListView')\r\n                    }\r\n                    else{\r\n                        this.setState({error:result.message})\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({updateInfoApi:true})\r\n                    // console.log('error:'+error)\r\n                }\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n    selectPicture = async () =>{\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        // console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n    \r\n    callApiUploadImage (_data) {\r\n        if(this.state.uploadImageApi){\r\n            this.setState({uploadImageApi:false})\r\n            fetch(getApiUrl()+'/uploadImage', {\r\n                method: 'POST',\r\n                headers: {      \r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    \"file\": _data.uri\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // console.log('result:'+JSON.stringify(result))\r\n                    this.setState({ \r\n                        accountImage: result.uri,\r\n                        uploadImageApi:true \r\n                    });\r\n                },\r\n                (error) => {\r\n                    // console.log(error)    \r\n                    this.setState({uploadImageApi:true})\r\n                }\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n    checkCurrentUser(){\r\n        if (this.props.account.accountId == this.props.userInfo.id) return true\r\n        return false\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n\r\n    getDistrictName(){\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            if (this.state.districtList[index].districtCode == this.state.districtSelected){\r\n                return this.state.districtList[index].districtName\r\n            }\r\n            index -= 1;\r\n        }  \r\n        return ''\r\n    }\r\n\r\n    getTownName(){\r\n        let index = this.state.districtList.length - 1;\r\n        while (index >= 0) {\r\n            let indexTown = this.state.districtList[index].listTown.length - 1;\r\n            while(indexTown >=0 ){\r\n                if (this.state.districtList[index].listTown[indexTown].townCode == this.state.townSelected){\r\n                    return this.state.districtList[index].listTown[indexTown].townName\r\n                }\r\n                indexTown-=1;\r\n            }\r\n            index -= 1;\r\n        }  \r\n        return ''\r\n    }\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountViewArea}>\r\n            <View style={styles.accountMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{this.state.accountRole==\"CUSTOMER\"?\"Thông tin khách hàng \":\"Thông tin nhân viên \"}</Text>   \r\n            </View>\r\n            <View style={styles.accountArea}>\r\n                <View style={styles.accountContainer}>\r\n                    <View style={styles.imagePreviewArea}>\r\n                        <View style={[styles.accountRowContainer,{justifyContent: 'center',}]}>\r\n                            <TouchableOpacity \r\n                                onPress={() => this.checkAdmin()?this.selectPicture():null}\r\n                                disabled={this.checkAdmin()?!this.state.uploadImageApi:true}\r\n                            >\r\n                                <ImageBackground \r\n                                    style={styles.imagePreview}\r\n                                    source={{ uri: this.state.accountImage}}\r\n                                    >\r\n                                    <Image \r\n                                        style={{width:50,height:50}}\r\n                                        source={require('./../../Data/icon-camera-512.png')}>\r\n                                    </Image>\r\n                                </ImageBackground>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n\r\n                        <Text style={styles.rowText}>Tên nhân viên:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập tên nhân viên'}\r\n                            name={\"accountName\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountName}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountName}</Text>\r\n                        }\r\n\r\n                        <View style={styles.middleSpace}/>\r\n                        \r\n                        <Text style={styles.rowText}>Trạng thái:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.accountActive}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountActive:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Đang hoạt động'} value={'1'} />\r\n                            <Picker.Item label={'Bị khóa'} value={'0'} />\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountActive=='1'?'Đang hoạt động':'Bị khóa'}</Text>\r\n                        }\r\n                        \r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <Text style={styles.rowTextLong}>{this.state.accountPhoneNumber}</Text>\r\n\r\n                        <View style={styles.middleSpace}/>\r\n\r\n                        <Text style={styles.rowText}>Vị trí:</Text>\r\n                        <Text style={styles.rowTextLong}>{getRoleName(this.state.accountRole)}</Text>\r\n\r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n\r\n                        <Text style={styles.rowText}>Quận/huyện:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.districtSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.onDistrictChange(itemValue)}                    \r\n                            >\r\n                            {this.state.districtList?this.state.districtList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />))\r\n                            : null }\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.getDistrictName()}</Text>\r\n                        }\r\n\r\n                        <View style={styles.middleSpace}/>\r\n\r\n                        <Text style={styles.rowText}>Giới tính:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.accountGender}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                accountGender:itemValue,\r\n                            })}                    \r\n                            >\r\n                            <Picker.Item label={'Nam'} value={'1'} />\r\n                            <Picker.Item label={'Nữ'} value={'0'} />\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountGender=='1'?'Nam':'Nữ'}</Text>\r\n                        }\r\n\r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n\r\n                        <Text style={styles.rowText}>Phường/xã:</Text>\r\n                        {this.checkAdmin()?\r\n                        <Picker\r\n                            selectedValue={this.state.townSelected}\r\n                            style={styles.accountTypeDropDown}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                townSelected:itemValue,\r\n                            })}                    \r\n                            >\r\n                            {this.state.townList?this.state.townList.map(town => (\r\n                            <Picker.Item label={town.townName} value={town.townCode} />\r\n                            )): null}\r\n                        </Picker>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.getTownName()}</Text>\r\n                        }\r\n\r\n                        <View style={styles.middleSpace}/>\r\n\r\n                        {this.checkAdmin()?\r\n                        <View style={[styles.accountRowContainer,{width:'',marginBottom:0}]}>\r\n                            <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                            <Picker\r\n                                selectedValue={this.state.day}\r\n                                style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                                onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                    day:itemValue,\r\n                                })}                    \r\n                                >\r\n                                {this.createNumberPickerList(1,this.getNumberOfDayInMonth(this.state.month.toString()),true)}\r\n                            </Picker>\r\n                            <Picker\r\n                                selectedValue={this.state.month}\r\n                                style={[styles.accountTypeDropDown,{width:50,marginRight:15}]}\r\n                                onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                    day: this.getNumberOfDayInMonth(itemValue)<this.state.day?'1':this.state.day,\r\n                                    month:itemValue,\r\n                                })}                    \r\n                                >\r\n                                {this.createNumberPickerList(1,12,true)}\r\n                            </Picker>\r\n                            <Picker\r\n                                selectedValue={this.state.year}\r\n                                style={[styles.accountTypeDropDown,{width:80}]}\r\n                                onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                    year:itemValue,\r\n                                })}                    \r\n                                >\r\n                                {this.createNumberPickerList(1920,2020,false)}\r\n                            </Picker>\r\n                        </View>\r\n                        :\r\n                        <View style={[styles.accountRowContainer,{width:'',marginBottom:0}]}>\r\n                            <Text style={styles.rowText}>Ngày sinh: </Text>\r\n                            <Text style={styles.rowTextLong}>{this.getDob()}</Text>\r\n                        </View>\r\n                        }\r\n\r\n                    </View>\r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={styles.rowText}>Địa chỉ chi tiết:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ chi tiết: số nhà, đường, thôn, ..'}\r\n                            name=\"accountAddress\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountAddress}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountAddress}</Text>\r\n                        }\r\n\r\n                        <View style={styles.middleSpace}/>\r\n\r\n                        <Text style={styles.rowText}>Địa chỉ email:</Text>\r\n                        {this.checkAdmin()?\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập địa chỉ email của nhân viên'}\r\n                            name=\"accountEmail\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountEmail}\r\n                            >                \r\n                        </TextInput>\r\n                        :\r\n                        <Text style={styles.rowTextLong}>{this.state.accountEmail}</Text>\r\n                        }\r\n\r\n                    </View> \r\n                    <View style={styles.accountRowContainer}>\r\n                        <Text style={[styles.rowTextError,{color:this.state.error=='Cập nhật thông tin thành công'?'green':'red'}]}>{this.state.error}</Text>\r\n                    </View>\r\n                </View>  \r\n                <View style={styles.buttonArea}>\r\n                    {this.checkCurrentUser()?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.changePassword()}>\r\n                        <Text style={{color:'white'}}>Thay đổi mật khẩu</Text>\r\n                    </TouchableOpacity>\r\n                    :\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.resetPassword()} disabled={!this.state.resetPasswordApi}>\r\n                        <Text style={{color:'white'}}>Đặt lại mật khẩu</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                    {this.checkAdmin()?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.updateAccountInformation()} disabled={!this.state.updateInfoApi}>\r\n                        <Text style={{color:'white'}}>Lưu thay đổi</Text>\r\n                    </TouchableOpacity>\r\n                    :\r\n                    <View/>\r\n                    }\r\n                </View>  \r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:50,\r\n        paddingBottom:50,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginBottom:10,\r\n    },\r\n    accountContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    accountRowContainer:{\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:130,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        fontWeight:'bold'\r\n        \r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:350,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        padding:3,\r\n        width: 350,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        padding:3,\r\n        width: 350,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    \r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:30,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:'',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    middleSpace:{\r\n        width:40\r\n    },\r\n    \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput, Picker} from 'react-native';\r\nimport {getRoleName, getApiUrl, convertDateToDateTime,componentWidth} from './../Common/CommonFunction'\r\n// import DatePicker from 'react-native-date-picker'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            accountName:'',\r\n            accountPhoneNumber:'',    \r\n            accountOldPassword: '',        \r\n            accountPassword: '',\r\n            accountRePassword: '',            \r\n            error: '',\r\n            errorList: ['',\r\n                    'Mật khẩu cũ phải có ít nhất 6 kí tự',\r\n                    'Mật khẩu mới phải có ít nhất 6 kí tự',\r\n                    'Xác nhận mới mật khẩu không trùng với mật khẩu'],\r\n            changePasswordApi:true,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(previousState => ({ \r\n            accountName: this.props.account?this.props.account.accountName:'',\r\n            accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n            error: '',\r\n        }));\r\n    }\r\n\r\n    \r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                accountName: this.props.account?this.props.account.accountName:'',\r\n                accountPhoneNumber: this.props.account?this.props.account.accountPhoneNumber:'',\r\n                error: '',\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    \r\n    changePassword(){\r\n        if(this.checkValid()){\r\n            this.callApiChangePassword()\r\n        }\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n    \r\n    checkValid(){    \r\n        if (this.state.accountOldPassword == '' || this.state.accountOldPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));   \r\n        if (this.state.accountPassword == '' || this.state.accountPassword.length<6) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.accountRePassword != this.state.accountPassword) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n    }\r\n\r\n\r\n    callApiChangePassword(){\r\n        if(this.state.changePasswordApi){\r\n            this.setState({changePasswordApi:false})\r\n            let url = ''\r\n            if (this.checkAdmin()) url = getApiUrl()+'/users/admin/change-password/'+this.props.userInfo.id\r\n            else url = getApiUrl()+'/users/coordinators/change-password/'+this.props.userInfo.id\r\n            fetch(url, {\r\n            method: 'POST',\r\n            headers: {      \r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                oldPassword: this.state.accountOldPassword,\r\n                newPassword: this.state.accountPassword,\r\n            }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({changePasswordApi:true})\r\n                    // console.log('result:'+JSON.stringify(result))\r\n                    let success = false\r\n                    result ? result.message? result.message == \"Thay đổi mật khẩu thành công!\"? success=true : null : null : null;\r\n                    if (success){\r\n                        this.props.changeShowView('AccountView')\r\n                    }\r\n                    else{\r\n                        this.setState({error:result.message})\r\n                    }\r\n                    \r\n                },\r\n                (error) => {\r\n                    this.setState({changePasswordApi:true})\r\n                    // console.log('error:'+error)    \r\n                    \r\n                }\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render(){        \r\n    return(        \r\n        <View style={styles.accountCreateViewArea}>\r\n            <View style={styles.accountCreateMenuArea}>\r\n                <Text style={[styles.rowText,{fontSize:22,fontWeight:'bold',width:'100%'}]}>{\"Thay đổi mật khẩu:\"}</Text>   \r\n            </View>\r\n            \r\n            <View style={styles.accountCreateArea}>\r\n                <View style={styles.accountCreateContainer}>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Tên người dùng:</Text>\r\n                        <Text style={styles.rowTextLong}>{this.state.accountName}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                        <Text style={styles.rowText}>{this.state.accountPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu cũ:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu cũ'}\r\n                            name=\"accountOldPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountOldPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Mật khẩu mới:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Nhập mật khẩu mới'}\r\n                            name=\"accountPassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountPassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowText}>Xác nhận mật khẩu:</Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                            placeholder={'Xác nhận lại mật khẩu'}\r\n                            name=\"accountRePassword\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.accountRePassword}\r\n                            secureTextEntry={true}\r\n                            >                \r\n                        </TextInput>\r\n                    </View>           \r\n                    <View style={styles.accountCreateRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>    \r\n            </View>\r\n            <TouchableOpacity style={styles.accountCreateConfirmButton} onPress={()=>this.changePassword()} disabled={!this.state.changePasswordApi}>\r\n                    <Text style={{color:'white'}}>Đổi mật khẩu</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    accountCreateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    accountCreateMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:50,\r\n        paddingBottom:50,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },    \r\n    accountCreateArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginBottom:10,\r\n    },\r\n    accountCreateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    accountCreateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    accountTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#e6e6e6',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    accountListFlatListArea:{        \r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    accountListFlatList:{\r\n        width:\"100%\",\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        padding:20,\r\n    },\r\n    accountCreateConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:30,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n \r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getAppointmentStateName, getStateColor, componentWidth} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class AppointmentListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n        };\r\n        this.onAppointmentPress = this.onAppointmentPress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n\r\n    onAppointmentPress(){\r\n        const appointment= { \r\n            \"appointmentId\": this.props.appointmentId,\r\n            \"appointmentCreatedTime\":this.props.appointmentCreatedTime,\r\n            \"customerName\":this.props.customerName,\r\n            \"customerPhoneNumber\":this.props.customerPhoneNumber,\r\n            \"customerDOB\":this.props.customerDOB,\r\n            \"appointmentMeetingTime\":this.props.appointmentMeetingTime,\r\n            \"appointmentStatus\":this.props.appointmentStatus,\r\n            }\r\n            \r\n        this.props.setSelectedAppointment?this.props.setSelectedAppointment(appointment):null\r\n        this.props.changeShowView?this.props.changeShowView('AppointmentView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.appointmentListItem}\r\n                onPress={() => this.onAppointmentPress()}\r\n                >                          \r\n                <View style={[styles.appointmentTextContainer,{\r\n                    marginTop:5,\r\n                }]}>                    \r\n                    <View>\r\n                    <Text style={{fontSize:17,color:'#25345D',fontWeight:'bold'}}>#{this.props.appointmentId}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={styles.appointmentTextContainer}>\r\n                    <View style={styles.appointmentListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>{this.props.customerName}</Text>\r\n                    </View>\r\n                    <View style={[styles.appointmentListSecondColumnContainer,{\r\n                        borderRadius:1,\r\n                        borderStyle: 'dashed',\r\n                    }]}>\r\n                    <Text style={{fontSize:17}}>{convertDateTimeToDate(this.props.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointmentCreatedTime)}</Text>                    \r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:15}}>Khung giờ hẹn: {convertDateTimeToTime(this.props.appointmentMeetingTime)}</Text>\r\n                    </View>\r\n                </View>     \r\n                <View style={[styles.appointmentTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.appointmentListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>Số điện thoại:  {this.props.customerPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentListSecondColumnContainer}>\r\n                    <Text style={{fontSize:17,color:'#0c59cf'}}>{getAppointmentStateName(this.props.appointmentStatus)}</Text>\r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:15}}>Ngày hẹn: {convertDateTimeToDate(this.props.appointmentMeetingTime)}</Text>\r\n                    </View>\r\n                    \r\n                </View>                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    appointmentListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    appointmentTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:3,\r\n        paddingTop:3,\r\n    },\r\n    appointmentListFirstColumnContainer:{\r\n        width:250,\r\n    },\r\n    appointmentListSecondColumnContainer:{\r\n        width:200,\r\n        marginLeft:20,\r\n        marginRight:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport {getApiUrl, componentWidth} from './../Common/CommonFunction'\r\nimport AppointmentListViewItem from './AppointmentListViewItem'\r\n\r\nexport default class AppointmentListView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            districtsList: this.props.districtList,\r\n            statusSelected: 'all',\r\n            districtSelected: 'all',\r\n            dataChanged: true,\r\n            testsList: this.props.testsList,\r\n            appointmentList: this.props.appointmentList,\r\n        };\r\n        this.getAppointmentShowList = this.getAppointmentShowList.bind(this)\r\n    }\r\n\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                appointmentList: this.props.appointmentList,\r\n                districtsList: this.props.districtList,\r\n                dataChanged: !this.state.dataChanged\r\n            }));\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    getAppointmentShowList(){\r\n        if (this.state.statusSelected=='all'){\r\n            if (this.state.districtSelected=='all'){\r\n                return this.state.appointmentList\r\n            }\r\n            else{\r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        else{\r\n            if (this.state.districtSelected=='all'){\r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].appointment_status === this.state.statusSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n            else{                \r\n                let result = []\r\n                let index = this.state.appointmentList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.appointmentList[index].appointment_status === this.state.statusSelected && this.state.appointmentList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.appointmentList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        return this.state.appointmentList\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.appointmentListArea}>\r\n            <View style={styles.appointmentListTopMenuArea}>\r\n                <View style={styles.appointmentListTopMenuContainer}>\r\n                    <Text style={{fontWeight:'bold'}}>Trạng thái: </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.statusSelected}\r\n                        style={[styles.appointmentTypeDropdown,{width:360}]}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            statusSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged\r\n                        })}\r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        <Picker.Item label=\"Đơn đang đợi xử lý\" value=\"pending\" />\r\n                        <Picker.Item label=\"Đơn đã được chấp nhận\" value=\"accepted\" />\r\n                        <Picker.Item label=\"Đơn đã bị từ chối\" value=\"rejected\" />\r\n                        <Picker.Item label=\"Đơn đã bị hủy\" value=\"canceled\" />\r\n                    </Picker>                    \r\n                </View>\r\n                <View style={styles.appointmentListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getAppointmentShowList()?this.getAppointmentShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            {this.getAppointmentShowList()?this.getAppointmentShowList().length>0?\r\n            <View style={styles.appointmentListFlatListArea}>        \r\n                <FlatList style={styles.appointmentListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.getAppointmentShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <AppointmentListViewItem\r\n                                    appointmentId={item.appointment_id}       \r\n                                    appointmentCreatedTime={item.appointment_createdTime}                             \r\n                                    customerName={item.appointment_customerName}\r\n                                    customerPhoneNumber={item.appointment_phoneNumber}\r\n                                    customerDOB={item.appointment_DOB}\r\n                                    appointmentMeetingTime={item.appointment_meetingTime}\r\n                                    appointmentStatus={item.appointment_status}        \r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedAppointment={this.props.setSelectedAppointment?this.props.setSelectedAppointment: null}                                                                 \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n            :\r\n            <View style={styles.appointmentListAlertContainer}>\r\n                <Text>{'Hiện tại chưa có đơn xét khám nào'}</Text>\r\n            </View>\r\n            :\r\n            <View style={styles.appointmentListAlertContainer}>\r\n                <Text>{'Hiện tại chưa có đơn xét khám nào'}</Text>\r\n            </View>\r\n            }\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentListTopMenuArea: {\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n        paddingTop:10,\r\n    },\r\n    appointmentListTopMenuContainer: {\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n        paddingTop:10,\r\n        paddingBottom:10,\r\n    },\r\n    appointmentTypeDropdown:{\r\n        height: 35, \r\n        width: 300,\r\n        borderRadius:5,\r\n        marginLeft:27,\r\n    },\r\n    appointmentListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    appointmentListFlatList:{\r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n    appointmentListAlertContainer: {\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, Image, Dimensions, TouchableOpacity } from 'react-native';\r\nimport {screenWidth} from './CommonFunction'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    \r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <View  style={styles.container}>\r\n            <View style={styles.alertContainer}>\r\n                <View style={styles.textContainer}>\r\n                    <Text style={{fontSize:25}}>{this.props.title?this.props.title:'Cập nhập thông tin'}</Text>\r\n                    <Text>{this.props.content?this.props.content:'Bạn có muốn cập nhật thông tin không ?'}</Text>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.props.onCancel?this.props.onCancel():null}>\r\n                        <Text style={{color:'white'}}>Hủy</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.props.onConfirm?this.props.onConfirm():null}>\r\n                        <Text style={{color:'white'}}>Xác nhận</Text>\r\n                    </TouchableOpacity> \r\n                </View>\r\n            </View>\r\n            \r\n\r\n        </View >\r\n    );\r\n  }\r\n}\r\n\r\nconst centerHeight=600\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: centerHeight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    alertContainer:{\r\n        height: 250,\r\n        width: 700,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 20,\r\n        paddingLeft: 60,\r\n        paddingRight: 60,\r\n        paddingBottom: 35,\r\n    },\r\n    textContainer:{\r\n        height: 90,\r\n        width: 700,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor:'white',\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        fontSize:17,\r\n        backgroundColor:''\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getApiUrl, getAppointmentStateName, componentWidth} from './../Common/CommonFunction'\r\nimport AlertScreen from './../Common/AlertScreen'\r\n\r\nexport default class AppointmentView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {     \r\n            error: '',\r\n            acceptAppointmentApi: true,\r\n        };\r\n        this.onAccept = this.onAccept.bind(this)\r\n        this.onReject = this.onReject.bind(this)\r\n        this.callApiAcceptAppointment = this.callApiAcceptAppointment.bind(this)\r\n        \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n\r\n            }));\r\n        }\r\n    }\r\n    \r\n    callApiDetail(){\r\n        fetch(getApiUrl()+\"/appointments/detail/\"+this.props.appointment.appointmentId, {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) {\r\n                    let appointment = this.props.appointment\r\n                    appointment.appointmentStatus = result.appointment_status\r\n                    this.props.setSelectedAppointment(appointment)\r\n                }\r\n            },            \r\n            (error) => {\r\n                // console.log(error)\r\n            }\r\n        )  \r\n    }\r\n    \r\n    callApiAcceptAppointment(){\r\n        if(this.state.acceptAppointmentApi){\r\n            this.setState({acceptAppointmentApi:false})\r\n            fetch(getApiUrl()+\"/appointments/accept/\"+this.props.appointment.appointmentId, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    status: 'accepted',\r\n                    coordinatorID: this.props.userInfo.id,\r\n                    note: 'ok',\r\n                }),\r\n                })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({acceptAppointmentApi:true})\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? result.message==\"Xác nhận đặt cuộc hẹn thành công!\" ? success=true : null : null :null;\r\n                    if (success) {\r\n                        let appointment = this.props.appointment\r\n                        appointment.appointmentStatus = 'accepted'\r\n                        this.props.setSelectedAppointment(appointment)\r\n                        // this.props.changeShowView('AppointmentView')\r\n                    }\r\n                    else\r\n                        this.setState({error: result.message})\r\n                        this.callApiDetail()\r\n                },            \r\n                (error) => {\r\n                    this.setState({acceptAppointmentApi:true})\r\n                    // console.log(error)\r\n                }\r\n            )  \r\n        }\r\n        \r\n    }\r\n\r\n    onAccept(){\r\n        this.callApiAcceptAppointment()\r\n    }\r\n\r\n    onReject(){\r\n        this.props.changeShowView('AppointmentRejectView')\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    return (\r\n        <View style={styles.appointmentViewArea}>\r\n            <View style={styles.appointmentTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Chi tiết đơn khám</Text>                \r\n            </View>\r\n            <View style={styles.appointmentArea}>\r\n                <View style={styles.appointmentContainer}>      \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Mã đơn xét khám: </Text> \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.appointmentId:''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentCreatedTime):''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ hẹn:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentMeetingTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentMeetingTime):''}</Text>\r\n                    </View>  \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.customerPhoneNumber:''}</Text>\r\n                    </View>                  \r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Trạng thái: </Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?getAppointmentStateName(this.props.appointment.appointmentStatus):''}</Text>\r\n                    </View>\r\n                    <View style={[styles.appointmentRowContainer,{justifyContent:'center'}]}>\r\n                            <Text style={styles.rowError}>{this.state.error}</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    {this.props.appointment.appointmentStatus =='pending'?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onReject()}>\r\n                        <Text style={{color:'white'}}>Từ chối</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>}\r\n                    {this.props.appointment.appointmentStatus =='pending'?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onAccept()} disabled={!this.state.acceptAppointmentApi}>\r\n                        <Text style={{color:'white'}}>Xác nhận</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>}\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    appointmentArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    appointmentContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    appointmentRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowFirstContainer:{\r\n        width:200,\r\n    },\r\n    rowSecondContainer:{\r\n        width:'100%',\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:17,\r\n        fontWeight:'bold',\r\n        backgroundColor:''\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        backgroundColor:''\r\n    },\r\n    rowError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontSize:15,\r\n        color:'red'\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class AppointmentLostSampleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            reason: '',\r\n            error: '',\r\n            errorList: ['','Phải điền lý do từ chối'],\r\n            rejectAppointmentApi: true,\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.rejectAppointment = this.rejectAppointment.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    callApiDetail(){\r\n        fetch(getApiUrl()+\"/appointments/detail/\"+this.props.appointment.appointmentId, {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) {\r\n                    let appointment = this.props.appointment\r\n                    appointment.appointmentStatus = result.appointment_status\r\n                    this.props.setSelectedAppointment(appointment)\r\n                    this.props.changeShowView('AppointmentView')\r\n                }\r\n            },            \r\n            (error) => {\r\n                // console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n\r\n    rejectAppointment(){\r\n        if(this.checkValid()){\r\n            this.callApiRejectAppointment()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.reason == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiRejectAppointment(){\r\n        if(this.state.rejectAppointmentApi){\r\n            this.setState({rejectAppointmentApi:false})\r\n            fetch(getApiUrl()+\"/appointments/reject/\"+this.props.appointment.appointmentId, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    status: 'rejected',\r\n                    coordinatorID: this.props.userInfo.id,\r\n                    note: this.state.reason,\r\n                }),\r\n                })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({rejectAppointmentApi:true})\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? result.message == \"Xác nhận điều phối viên huỷ cuộc hẹn thành công!\"? success=true : null : null : null;\r\n                    if (success) {\r\n                        // let appointment = this.props.appointment\r\n                        // appointment.appointmentStatus = 'rejected'\r\n                        // this.props.setSelectedAppointment(appointment)\r\n                        // this.props.changeShowView('AppointmentView')\r\n                        this.callApiDetail()\r\n                    }\r\n                    else{\r\n                        this.setState({error:result.message})\r\n                        setTimeout(() => {\r\n                            this.callApiDetail()\r\n                        }, 1500);\r\n                    }\r\n                },            \r\n                (error) => {\r\n                    this.setState({rejectAppointmentApi:true})\r\n                    // console.log(error)\r\n                }\r\n            )  \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n    return (\r\n        <View style={styles.appointmentViewArea}>\r\n            <View style={styles.appointmentTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Từ chối đơn hẹn: </Text>                \r\n            </View>\r\n            <View style={styles.appointmentArea}>\r\n                <View style={styles.appointmentContainer}>   \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn hẹn: </Text>        \r\n                        <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.appointmentId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?convertDateTimeToDate(this.props.appointment.appointmentCreatedTime)+\"   \"+convertDateTimeToTime(this.props.appointment.appointmentCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={[styles.rowTextLong,{width:300}]}>{this.props.appointment?this.props.appointment.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.appointment?this.props.appointment.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowText}>{'Lý do từ chối: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Điền lý do từ chối'}\r\n                            name={\"reason\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reason}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    \r\n                    <View style={styles.appointmentRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.appointmentConfirmButton} onPress={() => this.props.changeShowView('AppointmentView')}>\r\n                        <Text style={{color:'white'}}>Quay lại</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.appointmentConfirmButton} onPress={() => this.rejectAppointment()} disabled={!this.state.rejectAppointmentApi}>\r\n                        <Text style={{color:'white'}}>Từ chối đơn hẹn</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    appointmentViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    appointmentTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    appointmentArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    appointmentContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    appointmentRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:170,\r\n        fontSize:18,\r\n        fontWeight:'bold'\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n        backgroundColor:''\r\n    },\r\n    appointmentTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    appointmentConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class ArticleListViewItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n        };\r\n        this.onArticlePress = this.onArticlePress.bind(this)\r\n    }\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n    onArticlePress(){\r\n        const article= { \r\n            \"articleId\": this.props.articleId,\r\n            \"articleTitle\":this.props.articleTitle,\r\n            \"articleContent\":this.props.articleContent,\r\n            \"articleShortContent\":this.props.articleShortContent,\r\n            \"articleImageUrl\":this.props.articleImageUrl,\r\n            \"userId\":this.props.userId,\r\n            \"articleCreatedTime\":this.props.articleCreatedTime,\r\n            \"creatorName\": this.props.creatorName,\r\n            }\r\n        this.props.setSelectedArticle?this.props.setSelectedArticle(article):null\r\n        this.props.changeShowView?this.props.changeShowView('ArticleView'):null\r\n    }\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.articleListItem}\r\n                onPress={() => this.onArticlePress()}\r\n                >                                \r\n                <View style={styles.articleImageContainer}>\r\n                    <Image \r\n                        style={styles.articleImage}\r\n                        source={{uri:this.props.articleImageUrl}}>\r\n                    </Image>\r\n                </View>  \r\n                <View style={styles.articleTextContainer}>\r\n                    <View style={styles.articleTextContentContainer}>\r\n                        <View style={styles.articleTitleContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'Bold'}}>{this.props.articleTitle}</Text>\r\n                        </View>\r\n                        <View style={[styles.articleCreateTimeContainer,{\r\n                            borderRadius:1,\r\n                            borderStyle: 'dashed',\r\n                        }]}>\r\n                        <Text style={{fontSize:15}}>{convertDateTimeToDate(this.props.articleCreatedTime)+\"   \"+convertDateTimeToTime(this.props.articleCreatedTime)}</Text>                                   \r\n                        </View>\r\n                        <View style={styles.articleShortContentContainer}>\r\n                            <Text style={{fontSize:17, textAlign: 'justify'}}>{this.props.articleShortContent}</Text>        \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.articleTextCreatorNameContainer}>\r\n                        <View style={styles.articleCreatorNameContainer}>\r\n                            <Text style={{fontSize:17}}>{this.props.creatorName}</Text>\r\n                        </View>\r\n                    </View>\r\n                    \r\n                </View>     \r\n                                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    articleListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    articleImageContainer:{\r\n        margin:10,\r\n        height:200,\r\n        width:200,\r\n    },\r\n    articleImage:{\r\n        height:200,\r\n        width:200,\r\n    },\r\n    articleTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth-220,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        backgroundColor:'',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:5,\r\n        paddingTop:10,\r\n    },\r\n    articleTextContentContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth-250,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        backgroundColor:''\r\n    },\r\n    articleTextCreatorNameContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth-230,\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        backgroundColor:'',\r\n        paddingRight:10,\r\n    },\r\n    articleTitleContainer:{\r\n        marginBottom:10,\r\n    },\r\n    articleCreateTimeContainer:{\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n        padding:2,\r\n        marginBottom:10\r\n    },\r\n    articleShortContentContainer:{\r\n    },\r\n    articleCreatorNameContainer:{\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, Alert} from 'react-native';\r\nimport {getApiUrl,componentWidth} from './../Common/CommonFunction'\r\nimport ArticleListViewItem from './ArticleListViewItem'\r\n\r\nexport default class ArticleListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            statusSelected: 'pending',\r\n            districtSelected: 'D0',\r\n            articleList: this.props.articleList,\r\n        };\r\n        this.onArticlePress = this.onArticlePress.bind(this)\r\n        this.onAddArticlePress = this.onAddArticlePress.bind(this)\r\n    }\r\n\r\n    \r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                articleList: this.props.articleList,\r\n            }));\r\n        }\r\n    }\r\n\r\n    onArticlePress (){\r\n        this.props.changeShowView ? this.props.changeShowView('ArticleView'): null\r\n    }\r\n\r\n\r\n    onAddArticlePress(){\r\n        this.props.changeShowView ? this.props.changeShowView('ArticleAddView'): null\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleListArea}>\r\n            <View style={styles.articleListTopMenuArea}>\r\n                <Text style={{fontSize:25,fontWeight:'bold'}}>Bài viết mới </Text>\r\n                <TouchableOpacity \r\n                    style={styles.createNewArticleButton}\r\n                    onPress={() => this.onAddArticlePress()}\r\n                    >\r\n                    <Text style={{color:'white'}}>Tạo bài viết mới</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.articleListFlatListArea}>        \r\n                <FlatList style={styles.articleListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={this.state.articleList}\r\n                    // extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <ArticleListViewItem\r\n                                    articleId={item.id}         \r\n                                    articleTitle={item.tittle}                            \r\n                                    articleShortContent={item.shortContent}    \r\n                                    articleContent={item.content}    \r\n                                    articleImageUrl={item.image}\r\n                                    userId={item.userID}\r\n                                    articleCreatedTime={item.createdTime}\r\n                                    creatorName={item.creatorName}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedArticle={this.props.setSelectedArticle?this.props.setSelectedArticle: null}\r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>        \r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleListTopMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n    createNewArticleButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    articleListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    articleListFlatList:{\r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n    \r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image, Alert} from 'react-native';\r\nimport {getApiUrl, componentWidth} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n// import * as DocumentPicker from 'expo-document-picker';\r\n\r\nexport default class ArticleAddView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            imageResultUri: '',\r\n            articleTitle: '',\r\n            articleShortContent: '',\r\n            articleContent: '',\r\n            error: '',\r\n            errorList: ['','Phải điền tiêu đề bài viết','Phải điền nội dung ngắn ngọn bài viết', 'Phải điền nội dung bài viết','Bài viết chưa có ảnh min họa'],\r\n            uploadImageApi: true,\r\n            createArticleApi: true,\r\n        };\r\n        this.selectPicture = this.selectPicture.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.createArticle = this.createArticle.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    createArticle(){\r\n        if(this.checkValid()){\r\n            this.callApiCreateArticle()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.articleTitle == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.articleShortContent == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.articleContent == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (this.state.imageResultUri == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiCreateArticle(){\r\n        if(this.state.createArticleApi){\r\n            this.setState({createArticleApi:false})\r\n            fetch(getApiUrl()+'/articles/create', {\r\n                method: 'POST',\r\n                headers: {      \r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    tittle: this.state.articleTitle,\r\n                    shortContent:this.state.articleShortContent,\r\n                    content: this.state.articleContent,\r\n                    image: this.state.imageResultUri,\r\n                    userID: this.props.userInfo.id\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({createArticleApi:true})\r\n                    // console.log('result:'+JSON.stringify(result))\r\n                    let success = false\r\n                    result ? result.success? success=result.success : null : null;\r\n                    if (success) \r\n                    this.props.changeShowView('ArticleListView')\r\n                },\r\n                (error) => {\r\n                    this.setState({createArticleApi:true})\r\n                    // console.log('error:'+error)    \r\n                }\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    selectPicture = async () =>{\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        // console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    \r\n    callApiUploadImage (_data) {\r\n        if(this.state.uploadImageApi){\r\n            this.setState({uploadImageApi:false})\r\n            fetch(getApiUrl()+'/uploadImage', {\r\n                method: 'POST',\r\n                headers: {      \r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    \"file\": _data.uri\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({uploadImageApi:true})\r\n                    // console.log('result:'+JSON.stringify(result))\r\n                    this.setState({ imageResultUri: result.uri });\r\n                },\r\n                (error) => {\r\n                    this.setState({uploadImageApi:true})\r\n                    // console.log('error:'+error)    \r\n                }\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.articleAddViewArea}>\r\n            <View style={styles.articleAddTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Thêm bài viết: </Text>                \r\n            </View>\r\n            <View style={styles.articleAddArea}>\r\n                <View style={styles.articleAddContainer}>                    \r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>Tiêu đề: </Text>\r\n                        <TextInput style={styles.rowTextInput}\r\n                        placeholder={'Nhập tiêu đề'}   \r\n                        name={\"articleTitle\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.articleTitle}  \r\n                        >           \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Nội dung\\nngắn gọn: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Nhập nội dung ngắn gọn'}\r\n                            name={\"articleShortContent\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.articleShortContent}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Nội dung\\nbài viết: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={12}\r\n                            placeholder={'Nhập nội dung '}\r\n                            name={\"articleContent\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.articleContent} \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh đính kèm: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        disabled={!this.state.uploadImageApi}\r\n                        >\r\n                            <Text style={{color:'white'}}>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                        {/* <Text style={[styles.rowText,{fontSize:15,width:600,paddingTop:3,marginLeft:20}]}>{' '+this.state.imageResultUri}</Text> */}\r\n                    </View>\r\n                    {this.state.imageResultUri?\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowText}>{' '}</Text>\r\n                        <Image \r\n                            style={styles.imagePreview}\r\n                            source={{ uri: this.state.imageResultUri}}\r\n                            >\r\n                        </Image>\r\n                    </View>\r\n                    :null\r\n                    }\r\n                    <View style={styles.articleAddRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.articleAddConfirmButton} onPress={() => this.createArticle()} disabled={!this.state.createArticleApi}>\r\n                    <Text style={{color:'white'}}>Tạo bài bài viết</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleAddViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleAddTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    articleAddArea:{\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    articleAddContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    articleAddRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:18,\r\n    },\r\n    articleTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    articleAddConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:500,\r\n        height:500,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\nimport {getApiUrl} from './../Common/CommonFunction'\r\n\r\nexport default class ArticleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            imageUri: '',\r\n            imageType: '',\r\n            imageResultUri: '',\r\n            deleteArticleApi: true,\r\n        };\r\n        this.onDelete = this.onDelete.bind(this)\r\n        this.checkAdmin = this.checkAdmin.bind(this)\r\n        \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    onDelete(){\r\n        if (this.checkAdmin()) this.callApiDeleteArticle()\r\n    }\r\n\r\n    checkAdmin(){\r\n        if (this.props.userInfo.role == 'ADMIN') return true\r\n        return false\r\n    }\r\n\r\n    callApiDeleteArticle(){\r\n        if(this.state.deleteArticleApi){\r\n            this.setState({deleteArticleApi:false})\r\n            fetch(getApiUrl()+\"/articles/delete/\"+this.props.article.articleId,{\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({deleteArticleApi:true})\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? result.message== \"Xoá bài viết thành công!\"? success=true: null : null : null;\r\n                    if (success)\r\n                    this.props.changeShowView('ArticleListView')\r\n                },            \r\n                (error) => {\r\n                    this.setState({deleteArticleApi:true})\r\n                    // console.log(error)\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <View style={styles.articleViewArea}>\r\n            \r\n            <View style={styles.articleArea}>\r\n                <View style={styles.articleContainer}>      \r\n                    <View style={styles.articleRowContainer}>\r\n                        <Text style={{fontSize:25,fontWeight:'bold'}}>{this.props.article?this.props.article.articleTitle:''}</Text>                \r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{borderWidth:1,borderRadius:1,borderStyle: 'dashed',width:180}]}>\r\n                        <Text style={[styles.rowText,{flex:1,textAlign: 'center',}]}>{this.props.article?convertDateTimeToDate(this.props.article.articleCreatedTime)+\"   \"+convertDateTimeToTime(this.props.article.articleCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{justifyContent: 'center',}]}>\r\n                        <Image \r\n                            style={styles.rowImage}\r\n                            source={{ uri: this.props.article?this.props.article.articleImageUrl:'' }}\r\n                            >\r\n                            </Image>\r\n                    </View>\r\n                    <View style={styles.articleRowContainer}>\r\n                        <Text style={styles.rowText}>{this.props.article?this.props.article.articleContent:''}</Text>\r\n                    </View>\r\n                    <View style={[styles.articleRowContainer,{justifyContent: 'flex-end',}]}>\r\n                        <Text style={styles.rowText}>{this.props.article?this.props.article.creatorName:''}</Text>\r\n                    </View>   \r\n                                     \r\n                </View>\r\n                {this.checkAdmin()?\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onDelete()} disabled={!this.state.deleteArticleApi}>\r\n                        <Text style={{color:'white'}}>Xóa bài viết</Text>\r\n                    </TouchableOpacity> \r\n                </View>\r\n                :null}\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    articleViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    articleTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    articleArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    articleContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginTop:50,\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    articleRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        fontSize:18,\r\n        backgroundColor:'',\r\n        textAlign: 'justify'\r\n    },\r\n    articleTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowImage:{\r\n        width:400,\r\n        height:400,\r\n        backgroundColor:''\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,TextInput, Dimensions} from 'react-native';\r\nimport {getApiUrl,screenWidth} from './../Common/CommonFunction'\r\nimport * as Crypto from 'expo-crypto';\r\n\r\nimport PageFooter from './../PageFooter'\r\n\r\nexport default class Login extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            phoneNumber: '',\r\n            password:'',\r\n            error: ' ',\r\n            loginApi: true,\r\n            errorList: [' ','Phải điền số điện thoại','Số điện thoại phải có 10 số','Phải điền mật khẩu']\r\n        };\r\n        this.callApiLogin = this.callApiLogin.bind(this)\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    login(){\r\n        if(this.checkValid()){\r\n            // this.callApiLoginWithHash()\r\n            this.callApiLogin()\r\n        }    \r\n    }\r\n\r\n    \r\n    checkValid(){     \r\n        if (this.state.phoneNumber == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (isNaN(this.state.phoneNumber) || this.state.phoneNumber.length!=10) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.password == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiLogin(){\r\n        if(this.state.loginApi){\r\n            this.setState({loginApi:false})\r\n            fetch(getApiUrl()+\"/users/login\",{\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    phoneNumber: this.state.phoneNumber,\r\n                    password: this.state.password,\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({loginApi:true})\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success) this.props.loginSuccess(result.userInfo,result.token)\r\n                    else{\r\n                        this.setState({error: result.message})\r\n                    }\r\n                },            \r\n                (error) => {\r\n                    this.setState({loginApi:true})\r\n                    // console.log(error)\r\n                    \r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    callApiLoginWithHash(){\r\n        Crypto.digestStringAsync(Crypto.CryptoDigestAlgorithm.SHA256,this.state.password).then(hashedPassword => \r\n        {\r\n            if(this.state.loginApi){\r\n                this.setState({loginApi:false})\r\n                fetch(getApiUrl()+\"/users/test-hash\",{\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        phoneNumber: this.state.phoneNumber,\r\n                        password: hashedPassword,\r\n                    }),\r\n                })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        this.setState({loginApi:true})\r\n                        // console.log(result)\r\n                        let success = false\r\n                        result ? result.message? null : success=true : null;\r\n                        if (success) this.props.loginSuccess(result.userInfo,result.token)\r\n                        else{\r\n                            this.setState({error: result.message})\r\n                        }\r\n                    },            \r\n                    (error) => {\r\n                        this.setState({loginApi:true})\r\n                        // console.log(error)\r\n                        \r\n                    }\r\n                )\r\n            }\r\n        }\r\n        )\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <View style={{flex:1, width:screenWidth}}>\r\n            <View style={styles.loginViewArea}>\r\n                <View style={styles.titleContainer}>\r\n                    <Text style={{fontSize:23,fontWeight:'bold'}}>Đăng nhập</Text>\r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowText}>{'Số điện thoại'}</Text>\r\n                    <TextInput \r\n                        style={styles.rowTextInput}\r\n                        name={\"phoneNumber\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.phoneNumber}\r\n                        >                \r\n                    </TextInput>     \r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowText}>{'Mật khẩu'}</Text>\r\n                    <TextInput \r\n                        style={styles.rowTextInput}\r\n                        name={\"password\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.password}\r\n                        secureTextEntry={true}\r\n                        onSubmitEditing={() => this.login()}\r\n                        >                \r\n                    </TextInput>     \r\n                </View>\r\n                <View style={styles.rowContainer}>    \r\n                    <Text style={styles.rowTextError}>{this.state.error}</Text>                         \r\n                </View>\r\n                <TouchableOpacity style={styles.loginButton} onPress={() => this.login()} disabled={!this.state.loginApi}>\r\n                    <Text style={{color:'white'}}>Đăng nhập</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <PageFooter/>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    loginViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n        paddingTop:70,\r\n    },\r\n    titleContainer:{\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding:20,\r\n        marginBottom:20,\r\n\r\n    },\r\n    rowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width:'100%',\r\n        padding:20,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:130,\r\n        fontSize:18,\r\n    },    \r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 400,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    loginButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginTop:20,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime, getStateName, getStateColor,componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class RequestListPendingItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            \r\n        };\r\n        this.onRequestPress = this.onRequestPress.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    changeToRequestViewScreen(testList){\r\n        const request= { \r\n            \"requestId\": this.props.requestId,\r\n            \"requestCreatedTime\":this.props.requestCreatedTime,\r\n            \"customerName\":this.props.customerName,\r\n            \"customerPhoneNumber\":this.props.customerPhoneNumber,\r\n            \"customerDOB\":this.props.customerDOB,\r\n            \"requestAddress\":this.props.requestAddress,\r\n            \"requestDistrictName\":this.props.requestDistrictName,\r\n            \"requestTownName\": this.props.requestTownName,\r\n            \"requestMeetingTime\": this.props.requestMeetingTime,\r\n            \"nurseName\":this.props.nurseName,\r\n            \"nurseId\":this.props.nurseId,\r\n            \"coordinatorId\":this.props.coordinatorId,\r\n            \"coordinatorName\":this.props.coordinatorName,\r\n            \"lsSelectedTest\":this.props.lsSelectedTest,\r\n            \"requestAmount\":this.props.requestAmount,\r\n            \"requestStatus\":this.props.requestStatus,\r\n            \"requestUpdatedTime\":this.props.requestUpdatedTime,\r\n            \"testList\":testList,\r\n            \"requestTestVersion\":this.props.requestTestVersion,\r\n            }\r\n        this.props.setSelectedRequest?this.props.setSelectedRequest(request):null\r\n        this.props.changeShowView?this.props.changeShowView('RequestView'):null\r\n    }\r\n\r\n    onRequestPress(){        \r\n        if (this.checkVersion()) this.changeToRequestViewScreen(this.props.testList)\r\n    }\r\n\r\n    checkVersion(){\r\n        if(this.props.testVersion != this.props.requestTestVersion){\r\n            fetch(getApiUrl()+\"/tests/versions/list-all-test/\"+this.props.requestTestVersion,{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // console.log(result)\r\n                    let success = false\r\n                    let list = []\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    {\r\n                        this.changeToRequestViewScreen(result.lsTests)\r\n                        return false\r\n                    }\r\n                },            \r\n                (error) => {\r\n                    // console.log(error)\r\n                }\r\n            )  \r\n        }\r\n        else return true;\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    render(){        \r\n        return(\r\n            <View>            \r\n            <TouchableOpacity \r\n                style={styles.requestListItem}\r\n                onPress={() => this.onRequestPress()}\r\n                >                                \r\n                <View style={[styles.requestListTextContainer,{\r\n                    marginTop:5,\r\n                }]}>                    \r\n                    <View>\r\n                    <Text style={{fontSize:17,color:'#25345D',fontWeight:'bold'}}>#{this.props.requestId}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={styles.requestListTextContainer}>\r\n                    <View style={styles.requestListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>{this.props.customerName}</Text>\r\n                    </View>\r\n                    <View style={[styles.requestListSecondColumnContainer,{\r\n                        borderRadius:1,\r\n                        borderStyle: 'dashed',\r\n                    }]}>\r\n                    <Text style={{fontSize:17}}>{convertDateTimeToDate(this.props.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.requestCreatedTime)}</Text>                    \r\n                    </View>\r\n                    <View>\r\n                    <Text style={{fontSize:16}}>{this.props.requestAddress+', '+this.props.requestTownName+', '+this.props.requestDistrictName}</Text>\r\n                    </View>\r\n                </View>     \r\n                <View style={[styles.requestListTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.requestListFirstColumnContainer}>\r\n                    <Text style={{fontSize:17}}>Số điện thoại:  {this.props.customerPhoneNumber}</Text>\r\n                    </View>\r\n                    <View style={styles.requestListSecondColumnContainer}>\r\n                    <Text style={{fontSize:17,color:'#0c59cf'}}>{getStateName(this.props.requestStatus)}</Text>\r\n                    </View>\r\n                    \r\n                </View>                   \r\n            </TouchableOpacity>             \r\n            </View> \r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    requestListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    requestListTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:10,\r\n        paddingRight:10,\r\n        paddingBottom:3,\r\n        paddingTop:3,\r\n    },\r\n    requestListFirstColumnContainer:{\r\n        width:250,\r\n    },\r\n    requestListSecondColumnContainer:{\r\n        width:230,\r\n        marginLeft:20,\r\n        marginRight:50,\r\n\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList} from 'react-native';\r\nimport RequestListViewItem from './RequestListViewItem'\r\nimport {getApiUrl,componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class RequestListView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            districtsList: this.props.districtList,\r\n            statusSelected: 'all',\r\n            districtSelected: 'all',\r\n            dataChanged: true,\r\n            testList: this.props.testList,\r\n            requestList: this.props.requestList,\r\n            requestShowList : this.props.requestList,\r\n            requestCount: this.props.requestList?this.props.requestList.length:'0',\r\n        };\r\n        this.getRequestShowList = this.getRequestShowList.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log(this.props.testVersion)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                requestList: this.props.requestList,\r\n                districtsList: this.props.districtList,\r\n                requestCount: this.props.requestList?this.props.requestList.length:'0', \r\n                dataChanged: !this.state.dataChanged\r\n            }));\r\n        }\r\n    }\r\n\r\n    \r\n    getRequestShowList(){\r\n        if (this.state.statusSelected=='all'){\r\n            if (this.state.districtSelected=='all'){\r\n                return this.state.requestList\r\n            }\r\n            else{\r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                \r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        else{\r\n            if (this.state.districtSelected=='all'){\r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestStatus === this.state.statusSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n            else{                \r\n                let result = []\r\n                let index = this.state.requestList.length - 1;\r\n                while (index >= 0) {\r\n                    if (this.state.requestList[index].requestStatus === this.state.statusSelected && this.state.requestList[index].requestDistrictID === this.state.districtSelected) {\r\n                        result.push(this.state.requestList[index]);\r\n                        }\r\n                    index -= 1;\r\n                }        \r\n                return result;\r\n            }\r\n        }\r\n        return this.state.requestList\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n    return (\r\n        <View style={styles.requestListArea}>\r\n            <View style={styles.requestListTopMenuArea}>\r\n                <View style={styles.requestListTopMenuContainer}>\r\n                    <Text style={{fontWeight:'bold'}}>Trạng thái: </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.statusSelected}\r\n                        style={[styles.requestTypeDropdown,{width:360}]}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            statusSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}\r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        <Picker.Item label=\"Đang đợi y tá nhận đơn\" value=\"pending\" />\r\n                        <Picker.Item label=\"Đơn đã được y tá chấp nhận\" value=\"accepted\" />\r\n                        <Picker.Item label=\"Đơn đã được lấy mẫu\" value=\"transporting\" />\r\n                        <Picker.Item label=\"Đang đợi kết quả\" value=\"waitingforresult\" />\r\n                        <Picker.Item label=\"Đơn đã xong\" value=\"closed\" />\r\n                        <Picker.Item label=\"Y tá làm mất mẫu\" value=\"lostsample\" />\r\n                        <Picker.Item label=\"Điều phối viên là mất mẫu\" value=\"coordinatorlostsample\" />\r\n                        <Picker.Item label=\"Đơn đã hủy\" value=\"canceled\" />\r\n                        <Picker.Item label=\"Đã nhận đơn bị mất do điều phối viên\" value=\"reaccepted\" />\r\n                        <Picker.Item label=\"Đang vận chuyển đơn bị mất do điều phối viên\" value=\"retransporting\" />\r\n                        <Picker.Item label=\"Đang đợi lấy lại mẫu do điều phối viên làm mất\" value=\"relostsample\" />\r\n                    </Picker>\r\n                    <Text style={{marginLeft:200,fontWeight:'bold'}}>Quận/Huyện : </Text>\r\n                    <Picker\r\n                        selectedValue={this.state.districtSelected}\r\n                        style={styles.requestTypeDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            districtSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}                    \r\n                        >\r\n                        <Picker.Item label=\"Tất cả\" value=\"all\" />\r\n                        {this.state.districtsList?this.state.districtsList.map(district => (\r\n                            <Picker.Item label={district.districtName} value={district.districtCode} />\r\n                        )):null}\r\n                    </Picker>\r\n                </View>\r\n                <View style={styles.requestListTopMenuContainer}>\r\n                    <Text>Số lượng: {this.getRequestShowList()?this.getRequestShowList().length:'0'}</Text>\r\n                </View>\r\n            </View>\r\n            {this.getRequestShowList()?this.getRequestShowList().length>0?\r\n            <View style={styles.requestListFlatListArea}>\r\n                <FlatList style={styles.requestListFlatList}\r\n                    contentContainerStyle={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                    // showsVerticalScrollIndicator={false}\r\n                    data={this.getRequestShowList()}\r\n                    extraData={this.state.dataChanged}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item}) => {\r\n                            return (\r\n                                <View>                                \r\n                                <RequestListViewItem\r\n                                    requestId={item.requestID}\r\n                                    requestCreatedTime={item.requestCreatedTime}\r\n                                    customerName={item.customerName}\r\n                                    customerPhoneNumber={item.customerPhoneNumber}\r\n                                    customerDOB={item.customerDOB}\r\n                                    requestAddress={item.requestAddress}\r\n                                    requestDistrictName={item.requestDistrictName}\r\n                                    requestTownName={item.requestTownName}\r\n                                    requestMeetingTime={item.requestMeetingTime}\r\n                                    nurseName={item.nurseName}\r\n                                    nurseId={item.nurseID}\r\n                                    coordinatorId={item.coordinatorID}\r\n                                    coordinatorName={item.coordinatorName}\r\n                                    lsSelectedTest={item.lsSelectedTest}\r\n                                    requestAmount={item.requestAmount}\r\n                                    requestStatus={item.requestStatus}\r\n                                    requestUpdatedTime={item.requestUpdatedTime}\r\n                                    requestTestVersion={item.versionOfTest}\r\n                                    testVersion={this.props.testVersion}\r\n                                    testList={this.props.testList} \r\n                                    token={this.props.token}\r\n                                    changeShowView={this.props.changeShowView?this.props.changeShowView: null}\r\n                                    setSelectedRequest={this.props.setSelectedRequest?this.props.setSelectedRequest: null}         \r\n                                />   \r\n                                </View>                             \r\n                            );\r\n                        }}\r\n                    >                   \r\n                </FlatList>\r\n            </View>\r\n            :\r\n            <View style={styles.requestListAlertContainer}>\r\n                <Text>{'Hiện tại chưa có đơn xét nghiệm nào'}</Text>\r\n            </View>\r\n            :\r\n            <View style={styles.requestListAlertContainer}>\r\n                <Text>{'Hiện tại chưa có đơn xét nghiệm nào'}</Text>\r\n            </View>\r\n            }\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestListArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestListTopMenuArea: {\r\n        width:componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingBottom:20,\r\n        paddingTop:10,\r\n    },\r\n    requestListTopMenuContainer: {\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:10,\r\n        paddingBottom:10,\r\n    },\r\n    requestTypeDropdown:{\r\n        height: 35, \r\n        width: 300,\r\n        borderRadius:5,\r\n        backgroundColor: 'white',\r\n        color:'black'\r\n    },\r\n    requestListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    requestListFlatList:{\r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n    requestListAlertContainer: {\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n    \r\n\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, Text, TextInput, ScrollView, TouchableOpacity} from 'react-native';\r\nimport {convertMoney} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class RequestTestViewItem extends Component {\r\n    \r\n    componentDidMount(){\r\n        // console.log(this.props.testID+' '+this.props.index+' '+this.props.countHide+' '+this.props.math+this.props.backgroundColor)\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <View style={[styles.testItem,{\r\n                backgroundColor:this.props.backgroundColor?this.props.backgroundColor:'white',    \r\n            }]}>\r\n                <View style={styles.testName}>\r\n                    <Text style={{fontSize:15,color:'#25345d'}} >{this.props.testName}</Text>\r\n                </View>\r\n                <View style={styles.testPrice}>\r\n                    <Text style={{fontSize:15,color:'#25345d'}}  >{convertMoney(this.props.testPrice)}</Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testItem:{\r\n        height:45,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        //borderWidth:1,\r\n        //borderColor:'#25345d',\r\n    },\r\n    testName:{\r\n        width: 500,\r\n        height:29,\r\n        paddingLeft:5,\r\n        paddingRight:5,\r\n        paddingTop:3\r\n    },\r\n    testPrice:{\r\n        width: 100,\r\n        height:15,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        marginBottom:2,\r\n        paddingRight:10\r\n    }\r\n\r\n});","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, Text, TextInput, ScrollView, TouchableOpacity, FlatList, Alert} from 'react-native';\r\nimport RequestTestViewItem from './RequestTestViewItem'\r\nimport {convertMoney} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class RequestTestCategoryItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={        \r\n            visible: false\r\n        }\r\n        this.isVisible = this.isVisible.bind(this);\r\n    }\r\n\r\n    isVisible(){\r\n        let result = false;\r\n        this.props.test.forEach(test => {\r\n            this.props.isSelected(test.testID) == true ? result=true : '';  \r\n        });\r\n        return result;\r\n    }\r\n\r\n    render(){\r\n        const testList = this.props.test;\r\n        let countHide = 0;\r\n        return(\r\n            <View>\r\n            {this.isVisible() ?\r\n            <View>\r\n                <View style={styles.testCategoryItem}  >\r\n                    <View style={styles.testCategoryNameContainer}>\r\n                        <Text style={{fontSize:17,color:''}} >{this.props.categoryName}</Text>\r\n                    \r\n                    </View>\r\n                </View>\r\n                <FlatList \r\n                    style ={styles.TestListAreaScrollView}                        \r\n                    showsVerticalScrollIndicator={false}\r\n                    scrollEnabled={false}\r\n                    data={testList}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item, index}) => {\r\n                            this.props.isSelected(item.testID) ?  null : countHide+=1 ;\r\n                            return ( \r\n                                <View>                                 \r\n                                { this.props.isSelected(item.testID) ?\r\n                                    // <View style={[styles.testItem,{\r\n                                    //     backgroundColor:(parseInt(index)-countHide) % 2 == 0 ? '#EEE': '#FFF',    \r\n                                    // }]}>\r\n                                    //     <View style={styles.testName}>\r\n                                    //         <Text style={{fontSize:15,color:'#25345d'}} >{item.testName}</Text>\r\n                                    //     </View>\r\n                                    //     <View style={styles.testPrice}>\r\n                                    //         <Text style={{fontSize:15,color:'#25345d'}}  >{convertMoney(item.price)}</Text>\r\n                                    //     </View>\r\n                                    // </View>\r\n\r\n                                    <RequestTestViewItem \r\n                                    testName={item.testName}\r\n                                    testPrice={item.price}\r\n                                    testID={item.testID}\r\n                                    // backgroundColor={(parseInt(index)-countHide) % 2 === 0 ? '#EEE': '#FFF'}\r\n                                    backgroundColor='white'\r\n                                    countHide={countHide}\r\n                                    index={index}\r\n                                    math={(parseInt(index)-countHide) % 2 }\r\n                                    /> \r\n                                    : null}    \r\n                                </View>                          \r\n                            );\r\n                        }}\r\n                />\r\n            </View> \r\n            : null }\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    testCategoryItem:{\r\n        height:50,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderWidth:1,\r\n        borderColor:'#25345d',\r\n              \r\n    },\r\n    TestListAreaScrollView:{\r\n        width: '100%',\r\n        flex:1,\r\n        backgroundColor:'white',\r\n        borderRadius:10,\r\n    },\r\n    testCategoryNameContainer:{\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        height:35,\r\n        paddingLeft:5,\r\n        paddingRight:5,   \r\n    },\r\n    testItem:{\r\n        height:45,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        //borderWidth:1,\r\n        //borderColor:'#25345d',\r\n    },\r\n    testName:{\r\n        width: 500,\r\n        height:29,\r\n        paddingLeft:5,\r\n        paddingRight:5,\r\n        paddingTop:3\r\n    },\r\n    testPrice:{\r\n        width: 100,\r\n        height:15,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        marginBottom:2,\r\n        paddingRight:10\r\n    }\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, getStateName, componentWidth, convertDateTimeToDate, convertDateTimeToTime, convertMoney} from './../Common/CommonFunction'\r\nimport AlertScreen from './../Common/AlertScreen'\r\nimport RequestTestCategoryItem from './RequestTestCategoryItem'\r\n\r\nexport default class RequestView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {        \r\n            testList: this.props.testList,\r\n            resultList: [],\r\n            error: '',\r\n            takingSampleApi: true,\r\n            nurseDetailApi: true,\r\n            coordinatorDetailApi: true,\r\n        };\r\n        this.isSelected = this.isSelected.bind(this)\r\n        this.getLeftButtonName = this.getLeftButtonName.bind(this)\r\n        this.getRightButtonName = this.getRightButtonName.bind(this)\r\n        this.onLeftButtonPress = this.onLeftButtonPress.bind(this)\r\n        this.onRightButtonPress = this.onRightButtonPress.bind(this)\r\n        this.callApiTakingSample = this.callApiTakingSample.bind(this)\r\n        this.callApiNurseDetail = this.callApiNurseDetail.bind(this)\r\n        this.callApiCoordinatorDetail = this.callApiCoordinatorDetail.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n        if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    callApiNurseDetail(){\r\n        if(this.state.nurseDetailApi || this.props.request.nurseId!=\"Chưa có y tá nhận!\"){\r\n            this.setState({nurseDetailApi:false})\r\n            fetch(getApiUrl()+\"/users/nurses/detail/\"+this.props.request.nurseId, {\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({nurseDetailApi:true})\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success) {\r\n                        this.props.changeToAccountViewScreen(result)\r\n                    }\r\n                },            \r\n                (error) => {\r\n                    this.setState({nurseDetailApi:true})\r\n                    // console.log(error)\r\n                }\r\n            )  \r\n        }\r\n    }\r\n\r\n    callApiCoordinatorDetail(){\r\n        if(this.state.coordinatorDetailApi || this.props.request.nurseId!=\"Chưa có điều phối viên xử lý!\"){\r\n            this.setState({coordinatorDetailApi:false})\r\n            fetch(getApiUrl()+\"/users/coordinators/detail/\"+this.props.request.coordinatorId, {\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({coordinatorDetailApi:true})\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success) {\r\n                        this.props.changeToAccountViewScreen(result)\r\n                    }\r\n                },            \r\n                (error) => {\r\n                    this.setState({coordinatorDetailApi:true})\r\n                    // console.log(error)\r\n                }\r\n            )  \r\n        }\r\n    }\r\n\r\n    isSelected(id) {\r\n        const found = this.props.request?this.props.request.lsSelectedTest.findIndex(test => test == id) : -1;\r\n        let result = false;\r\n        found === -1 ? '' : result = true;\r\n        return result;\r\n    }\r\n\r\n    callApiDetail(){\r\n        fetch(getApiUrl()+\"/requests/detail/\"+this.props.request.requestId, {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) {\r\n                    // let request = this.props.request\r\n                    // request.requestStatus = result.requestStatus\r\n                    // this.props.setSelectedRequest(request)\r\n                    this.props.changeToRequestViewScreen(result,this.props.request.testList)\r\n                }\r\n            },            \r\n            (error) => {\r\n                // console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    callApiTakingSample(){\r\n        if(this.state.takingSampleApi){\r\n            this.setState({takingSampleApi:false})\r\n            fetch(getApiUrl()+\"/requests/update/\"+this.props.request.requestId, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    status: 'waitingforresult',\r\n                    userID: this.props.userInfo.id,\r\n                    note: 'Coordinator have take this request',\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({takingSampleApi:true})\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success) {\r\n                        // let request = this.props.request\r\n                        // request.requestStatus = 'waitingforresult'\r\n                        // this.props.setSelectedRequest(request)\r\n                        // this.props.changeShowView('RequestView')\r\n                        this.callApiDetail()\r\n                    }\r\n                    else{\r\n                        this.setState({error:result.message})\r\n                        this.callApiDetail()\r\n                    }\r\n                    \r\n                },            \r\n                (error) => {\r\n                    this.setState({takingSampleApi:true})\r\n                    // console.log(error)\r\n                }\r\n            )  \r\n        }\r\n        \r\n    }\r\n    \r\n    onTakingSample(){\r\n        this.callApiTakingSample()\r\n        \r\n    }\r\n\r\n    onLostSample(){\r\n        this.props.changeShowView('RequestLostSampleView')\r\n    }\r\n\r\n    onUpdateResult(){\r\n        this.props.changeShowView('RequestUpdateResultView')\r\n    }\r\n\r\n    onViewResult(){\r\n        this.props.changeShowView('RequestResultView')\r\n    }\r\n\r\n    getLeftButtonName(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n            case 'retransporting':\r\n                return '';\r\n                break;\r\n            case 'waitingforresult':\r\n                return 'Làm mất mẫu';\r\n                break;  \r\n            case 'closed':\r\n                return '';\r\n                break;          \r\n            default: '';\r\n        }\r\n    }\r\n\r\n    getRightButtonName(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n            case 'retransporting':\r\n                return 'Xác nhận lấy mẫu';\r\n                break;\r\n            case 'waitingforresult':\r\n                return 'Cập nhật kết quả';\r\n                break;          \r\n            case 'closed':\r\n                return 'Xem kết quả';\r\n                break;    \r\n            default: ''\r\n        }\r\n    }\r\n\r\n    onLeftButtonPress(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n            case 'retransporting':\r\n                \r\n                break;\r\n            case 'waitingforresult':\r\n                this.onLostSample();\r\n                break;\r\n            case 'closed':\r\n            \r\n                break;\r\n        }\r\n    }\r\n\r\n    onRightButtonPress(status) {\r\n        switch (status) {\r\n            case 'transporting':\r\n            case 'retransporting':\r\n                this.onTakingSample();\r\n                break;\r\n            case 'waitingforresult':\r\n                this.onUpdateResult();\r\n                break;\r\n            case 'closed':\r\n                this.onViewResult();\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Chi tiết đơn yêu cầu xét nghiệm</Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>      \r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestId:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                        \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text>   \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerName:''}</Text>    \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Địa chỉ nhận đơn: </Text>    \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestAddress+', '+this.props.request.requestTownName+', '+this.props.request.requestDistrictName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Y tá nhận đơn: </Text> \r\n                            <TouchableOpacity onPress={() => this.callApiNurseDetail()} disabled={!this.state.nurseDetailApi}>   \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.nurseName:''}</Text>\r\n                            </TouchableOpacity>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Điều phối viên: </Text>    \r\n                            <TouchableOpacity onPress={() => this.callApiCoordinatorDetail()} disabled={!this.state.coordinatorDetailApi}>   \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.coordinatorName:''}</Text>\r\n                            </TouchableOpacity>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Trạng thái: </Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.request?getStateName(this.props.request.requestStatus):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Cập nhật gần nhất: </Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.request?convertDateTimeToDate(this.props.request.requestUpdatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestUpdatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Tổng tiền: </Text>\r\n                            <Text style={styles.rowTextLong}>{this.props.request?convertMoney(this.props.request.requestAmount)+'đ':''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <FlatList\r\n                                style={styles.rowFlatList}\r\n                                showsVerticalScrollIndicator={false}\r\n                                scrollEnabled={false}\r\n                                data={this.props.request?this.props.request.testList:[]}\r\n                                keyExtractor={(item, index) => index.toString()}\r\n                                renderItem={({ item }) => {\r\n                                    return (\r\n                                        <RequestTestCategoryItem\r\n                                            categoryName={item.testTypeName}\r\n                                            test={item.listTest}\r\n                                            isSelected={this.isSelected}\r\n                                        >\r\n                                        </RequestTestCategoryItem>\r\n                                    );\r\n                                }}\r\n                            >\r\n                        </FlatList>\r\n                    </View>\r\n                    <View style={[styles.requestRowContainer,{justifyContent:'center'}]}>\r\n                            <Text style={styles.rowError}>{this.state.error}</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    {!this.getLeftButtonName(this.props.request?this.props.request.requestStatus:'') ==''?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onLeftButtonPress(this.props.request?this.props.request.requestStatus:'')}>\r\n                        <Text style={{color:'white'}}>{this.getLeftButtonName(this.props.request?this.props.request.requestStatus:'')}</Text>\r\n                    </TouchableOpacity> \r\n                    :<View/>\r\n                    }\r\n                    {!this.getRightButtonName(this.props.request?this.props.request.requestStatus:'')==''?\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.onRightButtonPress(this.props.request?this.props.request.requestStatus:'')} disabled={!this.state.takingSampleApi}>\r\n                        <Text style={{color:'white'}}>{this.getRightButtonName(this.props.request?this.props.request.requestStatus:'')}</Text>\r\n                    </TouchableOpacity>  \r\n                    :<View/>\r\n                    }\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    requestArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:17,\r\n        fontWeight:'bold',\r\n        backgroundColor:''\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n    },\r\n    rowError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontSize:15,\r\n        color:'red'\r\n    },\r\n    rowFlatList: {\r\n        width: '100%',\r\n        alignSelf: 'stretch',\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        // borderRadius: 10,\r\n        marginTop: 5,\r\n        backgroundColor:'gray'\r\n    },\r\n    rowImage:{\r\n        width:400,\r\n        height:400,\r\n        backgroundColor:'red'\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    imagePreview:{\r\n        height: 800,\r\n        width: 800,\r\n        aspectRatio: 10/10,\r\n        backgroundColor:''\r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, getStateName, componentWidth, convertDateTimeToDate, convertDateTimeToTime, convertMoney} from './../Common/CommonFunction'\r\nimport AlertScreen from './../Common/AlertScreen'\r\nimport RequestTestCategoryItem from './RequestTestCategoryItem'\r\n\r\nexport default class RequestView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {        \r\n            resultList: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.request.requestStatus=='closed') this.callApiResultList()\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n        if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n            if(this.props.request.requestStatus=='closed') this.callApiResultList()\r\n        }\r\n    }\r\n\r\n    callApiResultList () {\r\n        fetch(getApiUrl()+\"/requests/detail/\"+this.props.request.requestId+\"/result\",{\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                result ? result.message? null :\r\n                this.setState(previousState => ({\r\n                    resultList: result,\r\n                })) :null\r\n            },            \r\n            (error) => {\r\n                // console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>{\"Kết quả đơn xét nghiệm \"+this.props.request.requestId}</Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>\r\n                    {this.state.resultList.length==0?null:\r\n                    this.state.resultList.map(result => (                        \r\n                    <View style={styles.imagePreviewArea}>\r\n                        {/* <View style={styles.requestRowContainer}>\r\n                            <Text style={[styles.rowTextLong,{fontSize:15,width:600,paddingTop:3}]}>{' '+result.image}</Text>\r\n                        </View> */}\r\n                        <View style={styles.requestRowContainer}>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: result.image}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    ))\r\n                    }\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.button} onPress={() => this.props.changeShowView('RequestView')}>\r\n                        <Text style={{color:'white'}}>Quay lại</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    requestArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:17,\r\n        fontWeight:'bold',\r\n        backgroundColor:''\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    imagePreview:{\r\n        height: 1000,\r\n        width: 1000,\r\n        aspectRatio: 10/10,\r\n        backgroundColor:''\r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    button:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class RequestLostSampleView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            reason: '',\r\n            error: '',\r\n            errorList: ['','Phải điền lý do làm mất mẫu'],\r\n            lostSampleApi: true,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.lostSample = this.lostSample.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    callApiDetail(){\r\n        fetch(getApiUrl()+\"/requests/detail/\"+this.props.request.requestId, {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) {\r\n                    // let request = this.props.request\r\n                    // request.requestStatus = result.requestStatus\r\n                    // this.props.setSelectedRequest(request)\r\n                    this.props.changeToRequestViewScreen(result,this.props.request.testList)\r\n                }\r\n            },            \r\n            (error) => {\r\n                // console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    lostSample(){\r\n        if(this.checkValid()){\r\n            this.callApiLostSample()\r\n        }\r\n    }\r\n\r\n    checkValid(){        \r\n        if (this.state.reason == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiLostSample(){\r\n        if(this.state.lostSampleApi){\r\n            this.setState({lostSampleApi:false})\r\n            fetch(getApiUrl()+'/requests/update/'+this.props.request.requestId, {\r\n                method: 'POST',\r\n                headers: {      \r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    status: 'coordinatorlostsample',\r\n                    userID: this.props.userInfo.id,\r\n                    note: this.state.reason,\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({lostSampleApi:true})\r\n                    // console.log('result:'+JSON.stringify(result))\r\n                    let success = false\r\n                    result ? result.message? null: success=true : null;\r\n                    if (success) {\r\n                        // let request = this.props.request\r\n                        // request.requestStatus = 'coordinatorlostsample'\r\n                        // this.props.setSelectedRequest(request)\r\n                        // this.props.changeShowView('RequestView')\r\n                        this.callApiDetail()\r\n                    }\r\n                    else{\r\n                        this.setState({error:result.message})\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({lostSampleApi:true})\r\n                    // console.log('error:'+error)    \r\n                }\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestViewArea}>\r\n            <View style={styles.requestTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Báo mất mẫu xét nghiệm: </Text>                \r\n            </View>\r\n            <View style={styles.requestArea}>\r\n                <View style={styles.requestContainer}>   \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>        \r\n                        <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{'Lý do mất mẫu: '}</Text>\r\n                        <TextInput \r\n                            style={styles.rowTextInput}\r\n                            multiline={true}\r\n                            numberOfLines={4}\r\n                            placeholder={'Điền lý do làm mất mẫu'}\r\n                            name={\"reason\"}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reason}  \r\n                            >                \r\n                        </TextInput>\r\n                    </View>\r\n                    \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <View style={styles.buttonArea}>\r\n                    <TouchableOpacity style={styles.requestConfirmButton} onPress={() => this.props.changeShowView('RequestView')}>\r\n                        <Text style={{color:'white'}}>Quay lại</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.requestConfirmButton} onPress={() => this.lostSample()} disabled={!this.state.lostSampleApi}>\r\n                        <Text style={{color:'white'}}>Báo mất mẫu</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestTopMenuArea: {\r\n        height:70,\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:10,\r\n    },\r\n    requestArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    requestContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:18,\r\n        fontWeight:'bold',\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:17,\r\n    },\r\n    requestTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#e6e6e6',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreview:{\r\n        width:200,\r\n        height:200,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    buttonArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop:10,\r\n        paddingBottom:50,\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput, Image} from 'react-native';\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime} from './../Common/CommonFunction'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nexport default class RequestUpdateResultView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {      \r\n            imageUriList: [],\r\n            requestTitle: '',\r\n            requestShortContent: '',\r\n            requestContent: '',\r\n            error: '',\r\n            errorList: ['','Chưa có ảnh kết quả nào'],\r\n            uploadImageApi: true,\r\n            setResultImpageApi: true,\r\n            updateRequestApi: true,\r\n\r\n        };\r\n        this.selectPicture = this.selectPicture.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.completeUpdateResult = this.completeUpdateResult.bind(this)\r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                \r\n            }));\r\n        }\r\n    }\r\n\r\n    callApiDetail(){\r\n        fetch(getApiUrl()+\"/requests/detail/\"+this.props.request.requestId, {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success) {\r\n                    // let request = this.props.request\r\n                    // request.requestStatus = result.requestStatus\r\n                    // this.props.setSelectedRequest(request)\r\n                    this.props.changeToRequestViewScreen(result,this.props.request.testList)\r\n                }\r\n            },            \r\n            (error) => {\r\n                // console.log(error)\r\n            }\r\n        )  \r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    selectPicture = async () =>{\r\n        const result = await ImagePicker.launchImageLibraryAsync()\r\n        // console.log(result)\r\n        if (!result.cancelled) {\r\n            this.callApiUploadImage(result)\r\n        }\r\n    }\r\n\r\n    callApiUploadImage (_data) {\r\n        if(this.state.uploadImageApi){\r\n            this.setState({uploadImageApi:false})\r\n            fetch(getApiUrl()+'/uploadImage', {\r\n                method: 'POST',\r\n                headers: {      \r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    \"file\": _data.uri\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({uploadImageApi:true})\r\n                    // console.log('result:'+JSON.stringify(result))\r\n                    let tempList = this.state.imageUriList\r\n                    tempList.push({'image':result.uri})\r\n                    // console.log(tempList)\r\n                    this.setState({ imageUriList: tempList });   \r\n                },\r\n                (error) => {\r\n                    this.setState({uploadImageApi:true})\r\n                    // console.log('error:'+error)    \r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    completeUpdateResult(){\r\n        if(this.checkValid()){\r\n            this.callApiSetResultImage()\r\n        }\r\n    }\r\n\r\n    checkValid(){  \r\n        if (this.state.imageUriList.length == 0) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiSetResultImage(){\r\n        if(this.state.setResultImpageApi){\r\n            this.setState({setResultImpageApi:false})\r\n            let imageList = []\r\n            let index = this.state.imageUriList.length - 1;\r\n            while (index >= 0) {\r\n                imageList.push(this.state.imageUriList[index].image)\r\n                index-=1\r\n            }\r\n            // console.log(imageList)\r\n            fetch(getApiUrl()+'/requests/detail/results/add', {\r\n            method: 'POST',\r\n            headers: {      \r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer '+this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                listImage: imageList,\r\n                userID: this.props.userInfo.id,\r\n                requestID: this.props.request.requestId\r\n            }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({setResultImpageApi:true})\r\n                    // console.log('result:'+JSON.stringify(result))\r\n                    let success = false\r\n                    result ? result.message? null: success=true : null;   \r\n                    if(success){\r\n                        this.callApiUpdateRequest()\r\n                    }  \r\n                    else{\r\n                        this.setState({error:result.message})\r\n                    }\r\n                            \r\n                },\r\n                (error) => {\r\n                    this.setState({setResultImpageApi:true})\r\n                    // console.log('error:'+error)    \r\n                }\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n    callApiUpdateRequest(){\r\n        if(this.state.updateRequestApi){\r\n            this.setState({updateRequestApi:false})\r\n            fetch(getApiUrl()+'/requests/update/'+this.props.request.requestId, {\r\n                method: 'POST',\r\n                headers: {      \r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    status: 'closed',\r\n                    userID: this.props.userInfo.id,\r\n                    note: 'Đã cập nhật kết quả',\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({updateRequestApi:true})\r\n                    // console.log('result:'+JSON.stringify(result))\r\n                    let success = false\r\n                    result ? result.message? null: success=true : null;\r\n                    if (success) {\r\n                        // let request = this.props.request\r\n                        // request.requestStatus = 'closed'\r\n                        // this.props.setSelectedRequest(request)\r\n                        // this.props.changeShowView('RequestView')\r\n                        this.callApiDetail()\r\n                    }\r\n                    \r\n                },\r\n                (error) => {\r\n                    this.setState({updateRequestApi:true})\r\n                    // console.log('error:'+error)    \r\n                }\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.requestAddViewArea}>\r\n            <View style={styles.requestAddTopMenuArea}>\r\n                <Text style={{fontSize:25}}>Thêm kết quả xét nghiệm: </Text>                \r\n            </View>\r\n            <View style={styles.requestAddArea}>\r\n                <View style={styles.requestAddContainer}>                    \r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>Mã đơn xét nghiệm: </Text>        \r\n                        <Text style={styles.rowTextLong}>{this.props.request?this.props.request.requestId:''}</Text>      \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Giờ tạo:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?convertDateTimeToDate(this.props.request.requestCreatedTime)+\"   \"+convertDateTimeToTime(this.props.request.requestCreatedTime):''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Người tạo:</Text> \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerName:''}</Text>\r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>Số điện thoại:</Text>      \r\n                            <Text style={styles.rowTextLong}>{this.props.request?this.props.request.customerPhoneNumber:''}</Text> \r\n                    </View>\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowText}>{'Ảnh kết quả: '}</Text>\r\n                        <TouchableOpacity \r\n                        style={styles.addImageButton}\r\n                        onPress={() => this.selectPicture()}\r\n                        disabled={!this.state.uploadImageApi}\r\n                        >\r\n                            <Text style={{color:'white'}}>Chọn ảnh</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    {this.state.imageUriList.length==0?null:\r\n                    this.state.imageUriList.map(imageUri => (                        \r\n                    <View style={styles.imagePreviewArea}>\r\n                        {/* <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Text style={[styles.rowTextLong,{fontSize:15,width:600,paddingTop:3}]}>{' '+imageUri.image}</Text>\r\n                        </View> */}\r\n                        <View style={styles.requestRowContainer}>\r\n                            <Text style={styles.rowText}>{' '}</Text>\r\n                            <Image \r\n                                style={styles.imagePreview}\r\n                                source={{ uri: imageUri.image}}\r\n                                >\r\n                            </Image>\r\n                        </View>\r\n                    </View>\r\n                    ))\r\n                    }\r\n                    <View style={styles.requestRowContainer}>\r\n                        <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity style={styles.requestAddConfirmButton} onPress={() => this.completeUpdateResult()} disabled={!this.state.setResultImpageApi && !this.state.updateRequestApi}>\r\n                    <Text style={{color:'white'}}>Cập nhật kết quả</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    requestAddViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    requestAddTopMenuArea: {\r\n        height:70,\r\n        width:\"100%\",\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        padding:20,\r\n        paddingLeft:200,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    requestAddArea:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingLeft:200,\r\n        paddingRight:200,\r\n    },\r\n    requestAddContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        marginBottom: 50,\r\n        paddingTop: 40,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 15,\r\n    },\r\n    requestRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:200,\r\n        fontSize:18,\r\n        fontWeight:'bold'\r\n    },\r\n    rowTextLong:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:500,\r\n        fontSize:18,\r\n    },\r\n    requestTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    requestAddConfirmButton:{\r\n        height:50,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        marginBottom:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    addImageButton:{\r\n        width: 200,\r\n        height:30,\r\n        borderRadius:10,\r\n        borderWidth:1,\r\n        backgroundColor:'#25345D',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imagePreviewArea:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin:0\r\n    },\r\n    imagePreview:{\r\n        width:600,\r\n        height:600,\r\n        backgroundColor:''\r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:300,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n});\r\n","import React, {Component} from 'react';\r\nimport {View, StyleSheet, Image, Text, Dimensions, TouchableOpacity, TextInput} from 'react-native';\r\nimport {convertDateTimeToDate, convertDateTimeToTime, getAppointmentStateName, getStateColor, componentWidth} from './../Common/CommonFunction'\r\n\r\n\r\nexport default class TestListView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            testPrice: this.props.testPrice,\r\n            alert:'',\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n          \r\n    }\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.setState(previousState => ({ \r\n                testPrice: this.props.testPrice\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('name: '+name+', value: '+value)\r\n        this.setState({[name]: value});\r\n        if (value == '' || isNaN(value)) this.setState({alert: 'Giá tiền phải là số'});\r\n        else this.setState({alert: ''});\r\n        \r\n        this.props.updatePrice(this.props.testId,value)\r\n        \r\n    }\r\n\r\n\r\n    render(){        \r\n        return(        \r\n            <View style={styles.testListItem}>  \r\n                <View style={[styles.testTextContainer,{marginTop:5,}]}>  \r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Loại Test: </Text>\r\n                    </View>\r\n                    <View style={styles.testListSecondColumnContainer}>\r\n                        <Text style={{fontSize:17}}>{this.props.testTypeName}</Text>\r\n                    </View>\r\n                </View>                               \r\n                <View style={styles.testTextContainer}>           \r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Tên Test: </Text>\r\n                    </View>\r\n                    <View style={styles.testListSecondColumnContainer}>\r\n                        <Text style={{fontSize:17}}>{this.props.testName}</Text>\r\n                    </View>\r\n                </View>   \r\n                <View style={[styles.testTextContainer,{marginBottom:10}]}>\r\n                    <View style={styles.testListFirstColumnContainer}>\r\n                        <Text style={{fontSize:17,fontWeight:'bold'}}>Giá tiền: </Text>\r\n                    </View>\r\n                    <TextInput style={styles.rowTextInput}\r\n                        placeholder={'nhập giá tiền (VNĐ)'}\r\n                        name={\"testPrice\"}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.testPrice.toString()}\r\n                        >   \r\n                    </TextInput>\r\n                        <Text style={{fontSize:15,color:'red',marginLeft:10,marginTop:2}}>{this.state.alert}</Text>\r\n                    \r\n                </View>                     \r\n            </View>      \r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    testListItem:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        paddingBottom:2,       \r\n        borderRadius:10,\r\n        marginBottom:20, \r\n    },\r\n    testTextContainer:{\r\n        alignSelf: 'stretch',\r\n        width: componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        paddingLeft:20,\r\n        paddingRight:10,\r\n        paddingBottom:5,\r\n        paddingTop:5,\r\n    },\r\n    testListFirstColumnContainer:{\r\n        width:100,\r\n    },\r\n    testListSecondColumnContainer:{\r\n        width:500,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 100,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n\r\n});","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, Picker, FlatList, TextInput} from 'react-native';\r\nimport TestListItem from './TestListItem'\r\nimport {getApiUrl, convertDateTimeToDate, convertDateTimeToTime, componentWidth} from './../Common/CommonFunction'\r\n\r\nexport default class TestUpdateView extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            versionSelected:'2',\r\n            versionCreatedTime: null,\r\n            versionCreatorName: null,\r\n            testTypeSelected: 'none',\r\n            testTypeSelectedForCreate: 'none',\r\n            dataChanged: true,\r\n            testList: [],\r\n            testListApi: true,\r\n            testVersionApi: true,\r\n            testListTemp: [],\r\n            versionList: null,\r\n            testName: '',\r\n            testPrice: '',\r\n            newTestId: -1,\r\n            updateVersionError: '',\r\n            error: '',\r\n            errorList: ['',\r\n                        'Phải chọn loại xét nghiệm',\r\n                        'Phải điền tên xét nghiệm', \r\n                        'Phải điền giá xét nghiệm',\r\n                        'Giá tiền phải là số dương'],\r\n            updateVersionApi: true,\r\n            haveNewTest: false,\r\n        };\r\n        this.createTest = this.createTest.bind(this)\r\n        this.handleChange= this.handleChange.bind(this)\r\n        this.getTestList = this.getTestList.bind(this)\r\n        this.updatePrice = this.updatePrice.bind(this)\r\n        this.setSelectedVersion = this.setSelectedVersion.bind(this)\r\n        this.callApiUpdateVersion = this.callApiUpdateVersion.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.callApiGetVersionList()\r\n        // this.callApiGetTestList()\r\n    }\r\n\r\n\r\n    componentDidUpdate  (prevProps, prevState) {        \r\n         if (prevProps !== this.props) {\r\n            this.callApiGetVersionList()\r\n            this.setState(previousState => ({ \r\n                // testList: this.props.testList,\r\n                // testListTemp: this.props.testList,\r\n            }));\r\n        }\r\n    }\r\n\r\n    callApiGetVersionList(){\r\n        if(this.state.testVersionApi){\r\n            this.setState(previousState => ({\r\n                testVersionApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/tests/versions/list\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success){\r\n                        this.setState(previousState => ({\r\n                            versionList: result,\r\n                            versionSelected: result[0].versionID,\r\n                            versionCreatedTime: result[0].createdTime,\r\n                            versionCreatorName: result[0].creatorName,\r\n                            testVersionApi: true,\r\n                        }));\r\n                        this.callApiGetTestList()\r\n                    }\r\n                },            \r\n                (error) => {\r\n                    // console.log(error)\r\n                }\r\n            )  \r\n        }\r\n        \r\n    }\r\n\r\n    createTest(){\r\n        if(this.checkValid()){\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                if (this.state.testListTemp[index].testTypeID == this.state.testTypeSelectedForCreate) {\r\n                    let testList = this.state.testListTemp[index].listTest\r\n                    let newTest = {\r\n                        'testID':(this.state.newTestId),\r\n                        'testName':this.state.testName,                   \r\n                        'price':this.state.testPrice,\r\n                        'testTypeID': this.state.testTypeSelectedForCreate,\r\n                        'testTypeName': this.state.testListTemp[index].testTypeName,\r\n                        'versionID': -1,\r\n                        }\r\n                    testList.push(newTest)\r\n                }\r\n                index -= 1;   \r\n            } \r\n            let _newTestId = this.state.newTestId-=1\r\n            this.setState({\r\n                newTestId: _newTestId,\r\n                testTypeSelectedForCreate:'none',\r\n                testName:'',\r\n                testPrice:'',\r\n                haveNewTest: true,\r\n            })\r\n            // console.log(this.state.testListTemp)\r\n        }    \r\n        \r\n    }\r\n    \r\n    checkValid(){ \r\n        if (this.state.testTypeSelectedForCreate == 'none') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[1]\r\n            }));\r\n        if (this.state.testName == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[2]\r\n            }));\r\n        if (this.state.testPrice == '') \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[3]\r\n            }));\r\n        if (isNaN(this.state.testPrice) || parseInt(this.state.testPrice)<0 ) \r\n            return this.setState(previousState => ({ \r\n                error: this.state.errorList[4]\r\n            }));\r\n        this.setState(previousState => ({ \r\n                error: this.state.errorList[0]\r\n        }));\r\n        return true;\r\n        \r\n    }\r\n\r\n    callApiUpdateVersion() {\r\n        if(!this.checkHavingAnyChange()) this.setState({updateVersionError:'Thông tin không có sự thay đổi'})\r\n        else this.setState({updateVersionError:''})\r\n        if(this.state.updateVersionApi && this.checkHavingAnyChange() ){\r\n            this.setState({updateVersionApi:false})\r\n            this.setState({haveNewTest:false})\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                while(indexTest >= 0){     \r\n                    var test = this.state.testListTemp[index].listTest[indexTest]           \r\n                    result.push(test)\r\n                    indexTest -=1;\r\n                }\r\n                index -= 1;\r\n            }        \r\n            // console.log(result)\r\n            fetch(getApiUrl()+'/tests/versions/upgrade-version', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    creatorID: this.props.userInfo.id,\r\n                    lsInputTest: result,\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({updateVersionApi:true})\r\n                    // console.log('result:'+JSON.stringify(result))\r\n                    this.callApiGetVersionList()\r\n                },\r\n                (error) => {\r\n                    this.setState({updateVersionApi:true})\r\n                    // console.log('error:'+error)    \r\n                }\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n    updatePrice(testId,newPrice){\r\n        if (newPrice == '' || isNaN(newPrice) || parseInt(newPrice)<0 ) {\r\n            this.setState({updateVersionApi: false});            \r\n        }\r\n        else this.setState({updateVersionApi: true});\r\n\r\n        let result = []\r\n        let index = 0;\r\n        while (index <= this.state.testListTemp.length - 1) {\r\n            var testType = this.state.testListTemp[index]\r\n            let testList = []\r\n            let indexTest = 0\r\n            while(indexTest <= this.state.testListTemp[index].listTest.length -1){\r\n                var test = Object.assign({}, this.state.testListTemp[index].listTest[indexTest])\r\n                // var test = this.state.testListTemp[index].listTest[indexTest]\r\n                \r\n                if (test.testID == testId){\r\n                    test.price = newPrice\r\n                    // console.log(test) \r\n                } \r\n                testList.push(test)  \r\n                indexTest +=1;\r\n            }\r\n            testType['listTest'] = testList;\r\n            result.push(testType)\r\n            index += 1;      \r\n            \r\n        }\r\n        // console.log('list temp')\r\n        // console.log(this.state.testListTemp)\r\n        // console.log('list base')\r\n        // console.log(this.state.testList)\r\n        // console.log('result')\r\n        // console.log(result)\r\n        this.checkHavingAnyChange()\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    setSelectedVersion(versionId){\r\n        let index = this.state.versionList.length -1\r\n        while(index >= 0){\r\n            var version = this.state.versionList[index]\r\n            if (version.versionID == versionId){\r\n                this.setState({\r\n                    versionSelected: versionId,\r\n                    versionCreatedTime: version.createdTime,\r\n                    versionCreatorName: version.creatorName,\r\n                })\r\n            }     \r\n            index -= 1;\r\n        }      \r\n        this.callApiGetTestList(versionId)\r\n        \r\n        \r\n    }\r\n\r\n    callApiGetTestList(version){\r\n        if(this.state.testListApi){\r\n            this.setState(previousState => ({\r\n                testListApi: false,\r\n            }));\r\n            let url = ''\r\n            if (version) url =  getApiUrl()+\"/tests/versions/list-all-test/\"+version\r\n            else url =  getApiUrl()+\"/tests/versions/lastest-version-test/\"\r\n            fetch(url,{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.props.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // console.log(result)\r\n                    let success = false\r\n                    let list = []\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    {\r\n                        let temp = []\r\n                        let index = 0;\r\n                        while(index <=  result.lsTests.length - 1){\r\n                            temp.push(Object.assign({}, result.lsTests[index]))\r\n                            index += 1\r\n                        }\r\n                        // console.log('assign')\r\n                        // console.log(temp)\r\n                        // console.log('normal')\r\n                        // console.log(result.lsTests)\r\n                        this.setState(previousState => ({\r\n                            testList: temp ,\r\n                            testListTemp: result.lsTests ,\r\n                            testListApi: true,\r\n                        }));\r\n                        \r\n                    }\r\n                    else \r\n                    this.setState(previousState => ({\r\n                            testList: [],\r\n                            testListTemp: [],\r\n                            testListApi: true,\r\n                        }));\r\n                },            \r\n                (error) => {\r\n                    // console.log(error)\r\n                }\r\n            )  \r\n        }\r\n    }\r\n\r\n    checkHavingAnyChange(){\r\n        if(this.state.haveNewTest) return true\r\n        let index = this.state.testList.length - 1;\r\n        while (index >= 0) {\r\n            let indexTest = this.state.testList[index].listTest.length -1\r\n            while(indexTest >= 0){\r\n                if(this.state.testList[index].listTest[indexTest].price.toString() != this.state.testListTemp[index].listTest[indexTest].price) {\r\n                    // console.log(this.state.testList[index].listTest[indexTest])\r\n                    // console.log(this.state.testListTemp[index].listTest[indexTest])\r\n                    return true\r\n                }\r\n                indexTest -=1;\r\n            }\r\n            index -= 1;\r\n        }       \r\n        return false; \r\n    }\r\n\r\n    getTestList(){\r\n        if (this.state.testTypeSelected =='none'){\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                while(indexTest >= 0){\r\n                    var test = this.state.testListTemp[index].listTest[indexTest]\r\n                    test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                    result.push(test)\r\n                    indexTest -=1;\r\n                }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        else{\r\n            // console.log(this.state.testTypeSelected)\r\n            let result = []\r\n            let index = this.state.testListTemp.length - 1;\r\n            while (index >= 0) {\r\n                // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n                if (this.state.testListTemp[index].testTypeID == this.state.testTypeSelected) {\r\n                    let indexTest = this.state.testListTemp[index].listTest.length -1\r\n                    while(indexTest >= 0){\r\n                        var test = this.state.testListTemp[index].listTest[indexTest]\r\n                        test['testTypeName'] = this.state.testListTemp[index].testTypeName\r\n                        result.push(test)\r\n                        indexTest -=1;\r\n                    }\r\n                }\r\n                index -= 1;\r\n            }        \r\n            return result;\r\n        }\r\n        return this.state.testListTemp\r\n    }\r\n\r\n    render(){\r\n    const WIDTH = Dimensions.get('window').width\r\n    return (\r\n        <View style={styles.testUpdateViewArea}>\r\n            {this.state.testListApi?this.state.testVersionApi?\r\n            <View style={styles.testUpdateViewArea}>\r\n                <View style={styles.testUpdateMenuArea}>\r\n                    <Picker\r\n                        selectedValue={this.state.versionSelected}\r\n                        style={styles.versionDropdown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setSelectedVersion(itemValue)}                    \r\n                        >\r\n                        {this.state.versionList?this.state.versionList.map(version => (\r\n                            <Picker.Item label={version.versionID} value={version.versionID} key={version.versionID}/>\r\n                        )):null}\r\n                    </Picker> \r\n                    <View style={{flexDirection: 'row',}}>\r\n                        <Text style={[styles.rowText,{width:89,fontWeight:'bold'}]}>{\"Cập nhật: \"}</Text>\r\n                        <Text style={[styles.rowText,{width:173}]}>{(this.state.versionCreatedTime?convertDateTimeToDate(this.state.versionCreatedTime)+\"   \"+convertDateTimeToTime(this.state.versionCreatedTime):'')}</Text>   \r\n                    </View>\r\n                    <View style={{flexDirection: 'row',}}>\r\n                        <Text style={[styles.rowText,{width:143,fontWeight:'bold'}]}>{\"Người cập nhật: \"}</Text>  \r\n                        <Text style={[styles.rowText,{width:200}]}>{(this.state.versionCreatorName?this.state.versionCreatorName:'')}</Text> \r\n                    </View>\r\n                    \r\n                    <TouchableOpacity style={styles.testUpdateConfirmButton} onPress={() => this.callApiUpdateVersion()} disabled={!this.state.updateVersionApi}>\r\n                        <Text style={{color:'white'}}>Cập nhật</Text>\r\n                    </TouchableOpacity>  \r\n                </View>\r\n                {this.state.updateVersionError?\r\n                <View style={[styles.testUpdateMenuArea,{paddingTop:0,height:''}]}>\r\n                    <Text style={{color:'red'}}>{this.state.updateVersionError}</Text>\r\n                </View>\r\n                :null}\r\n                \r\n                <View style={styles.testAddArea}>\r\n                    <View style={styles.testUpdateContainer}>\r\n                        <View style={styles.testUpdateRowContainer}>\r\n                            <Text style={[styles.rowText,{fontWeight:'bold'}]}>Loại test: </Text>\r\n                            <Picker\r\n                                selectedValue={this.state.testTypeSelectedForCreate}\r\n                                style={styles.testTypeDropDown}\r\n                                onValueChange={(itemValue, itemIndex) => this.setState({\r\n                                    testTypeSelectedForCreate:itemValue,\r\n                                })}                    \r\n                                >\r\n                                <Picker.Item label=\"Chọn loại xét nghiệm\" value=\"none\" key='none'/>\r\n                                {this.state.testList?this.state.testList.map(testType => (\r\n                                    <Picker.Item label={testType.testTypeName} value={testType.testTypeID} key={testType.testTypeID}/>\r\n                                )):null}\r\n                            </Picker>\r\n                            <TouchableOpacity style={styles.createTestButton} onPress={() => this.createTest()}>\r\n                                <Text style={{color:'white'}}>Tạo bài test</Text>\r\n                            </TouchableOpacity>   \r\n                        </View>\r\n                        <View style={styles.testUpdateRowContainer}>\r\n                            <Text style={[styles.rowText,{fontWeight:'bold'}]}>Tên test:</Text>\r\n                            <TextInput style={styles.rowTextInput}\r\n                                placeholder={'Nhập tên bài test'}\r\n                                name={\"testName\"}\r\n                                onChange={this.handleChange}\r\n                                value={this.state.testName}\r\n                                >                \r\n                            </TextInput>\r\n                        </View>\r\n                        <View style={styles.testUpdateRowContainer}>\r\n                            <Text style={[styles.rowText,{fontWeight:'bold'}]}>Giá tiền:</Text>\r\n                            <TextInput style={styles.rowTextInput}\r\n                                placeholder={'Nhập giá tiền (VNĐ)'}\r\n                                name=\"testPrice\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.testPrice}\r\n                                >                \r\n                            </TextInput>\r\n                        </View>\r\n                        <View style={styles.testUpdateRowContainer}>\r\n                            <Text style={styles.rowTextError}>{this.state.error}</Text>                        \r\n                        </View>\r\n                    </View>    \r\n                </View>\r\n                <View style={styles.testUpdateMenuArea}>\r\n                    <Picker\r\n                        selectedValue={this.state.testTypeSelected}\r\n                        style={styles.testTypeDropDown}\r\n                        onValueChange={(itemValue, itemIndex) => this.setState({\r\n                            testTypeSelected:itemValue,\r\n                            dataChanged: !this.state.dataChanged,\r\n                        })}                    \r\n                        >\r\n                        <Picker.Item label=\"Chọn loại xét nghiệm\" value=\"none\" key='none'/>\r\n                        {this.state.testList?this.state.testList.map(testType => (\r\n                            <Picker.Item label={testType.testTypeName} value={testType.testTypeID} key={testType.testTypeID}/>\r\n                        )):null}\r\n                    </Picker>\r\n                    <Text style={[styles.rowText,{width:500}]}>Số lượng: {this.getTestList()?this.getTestList().length:'0'}</Text>\r\n                </View>\r\n                <View style={styles.testListFlatListArea}>        \r\n                    <FlatList style={styles.testListFlatList}\r\n                        contentContainerStyle={{\r\n                            alignItems: 'center',\r\n                            justifyContent: 'flex-start',\r\n                        }}\r\n                        showsVerticalScrollIndicator={false}\r\n                        data={this.getTestList()}\r\n                        extraData={this.state.dataChanged}\r\n                        keyExtractor={(item, index) => index.toString()}\r\n                        renderItem={({item}) => {\r\n                                return (\r\n                                    <View>                                \r\n                                    <TestListItem\r\n                                        testId={item.testID}       \r\n                                        testName={item.testName}                             \r\n                                        testPrice={item.price}\r\n                                        testTypeId={item.testTypeID}  \r\n                                        testTypeName={item.testTypeName}  \r\n                                        updatePrice={this.updatePrice}                                                                   \r\n                                    />   \r\n                                    </View>                             \r\n                                );\r\n                            }}\r\n                        >                   \r\n                    </FlatList>        \r\n                </View>\r\n                \r\n            </View>\r\n            :\r\n            <View style={{height:300,flexDirection: 'row',alignItems: 'center',justifyContent: 'center',}}>\r\n                <Text>Hệ thống đang chạy, vui lòng đợi ...</Text>\r\n            </View>\r\n            :\r\n            <View style={{height:300,flexDirection: 'row',alignItems: 'center',justifyContent: 'center',}}>\r\n                <Text>Hệ thống đang chạy, vui lòng đợi ...</Text>\r\n            </View>\r\n            }\r\n        </View>\r\n        \r\n        \r\n    );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    testUpdateViewArea: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#f7f6f6',\r\n    },\r\n    testUpdateMenuArea: {\r\n        height:70,\r\n        width:componentWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        marginTop:0,\r\n        marginBottom:10,\r\n    },\r\n    versionDropdown:{\r\n        padding:3,\r\n        width: 200,\r\n        borderRadius:5,\r\n        marginRight:30,\r\n    },\r\n    testAddArea:{\r\n        width: componentWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginBottom:10,\r\n    },\r\n    testUpdateContainer:{\r\n        alignSelf: 'stretch',\r\n        width:'100%',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        borderRadius:5,\r\n        backgroundColor:'white',\r\n        paddingTop: 30,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    testUpdateRowContainer:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:'100%',\r\n        marginBottom:30,\r\n    },\r\n    rowText:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:17,\r\n        paddingTop:3,\r\n        \r\n    },\r\n    rowTextError:{\r\n        alignSelf: 'stretch',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width:150,\r\n        fontSize:13,\r\n        color:'red',        \r\n    },\r\n    testTypeDropDown:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 500,\r\n        borderRadius:5,\r\n    },\r\n    rowTextInput:{\r\n        alignSelf: 'stretch',\r\n        padding:3,\r\n        width: 800,\r\n        backgroundColor:'white',\r\n        borderWidth:1,\r\n        borderRadius:5,\r\n        paddingLeft:10,        \r\n    },\r\n    testUpdateConfirmButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:50,\r\n    },\r\n    createTestButton:{\r\n        height:30,\r\n        width:200,\r\n        backgroundColor:'#25345D',\r\n        borderRadius:5,\r\n        borderWidth:1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:100,\r\n    },\r\n    testListFlatListArea:{        \r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    testListFlatList:{\r\n        width:componentWidth,\r\n        flex:1,\r\n        flexDirection: 'column',\r\n        backgroundColor: '',\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n    },\r\n\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, Image, ImageBackground, Dimensions } from 'react-native';\r\nimport {screenWidth} from './CommonFunction'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    \r\n    handleChange(event) {\r\n        const name = event.target && event.target.name;\r\n        const value = event.target && event.target.value;        \r\n        // console.log('event name'+name+', event value:'+value)\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <ImageBackground  style={styles.headerContainer} \r\n            // source='https://i.imgur.com/jasoIoM.jpg'\r\n            // resizeMode= 'center'\r\n            resizeMode= 'stretch'\r\n            >\r\n            <View style={styles.textArea}>\r\n                <Text>Hệ thống đang chạy, vui lòng đợi ...</Text>\r\n            </View>\r\n            \r\n\r\n        </ImageBackground >\r\n    );\r\n  }\r\n}\r\n\r\nconst centerHeight=600\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        height:centerHeight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '',\r\n    },\r\n    textArea:{\r\n        backgroundColor:''\r\n    }\r\n});\r\n","import React,{Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions} from 'react-native';\r\n\r\nimport PageHeader from './PageHeader'\r\nimport PageFooter from './PageFooter'\r\n\r\nimport AccountListView from './AccountManagement/AccountListView'\r\nimport AccountCreateView from './AccountManagement/AccountCreateView'\r\nimport AccountView from './AccountManagement/AccountView'\r\nimport AccountChangePasswordView from './AccountManagement/AccountChangePasswordView'\r\n\r\n\r\nimport AppointmentListView from './Appointment/AppointmentListView'\r\nimport AppointmentView from './Appointment/AppointmentView'\r\nimport AppointmentRejectView from './Appointment/AppointmentRejectView'\r\n\r\nimport ArticleListView from './Article/ArticleListView'\r\nimport ArticleAddView from './Article/ArticleAddView'\r\nimport ArticleView from './Article/ArticleView'\r\n\r\nimport LoginView from './Authentication/LoginView'\r\n\r\nimport RequestListView from './Request/RequestListView'\r\nimport RequestView from './Request/RequestView'\r\nimport RequestResultView from './Request/RequestResultView'\r\nimport RequestLostSampleView from './Request/RequestLostSampleView'\r\nimport RequestUpdateResultView from './Request/RequestUpdateResultView'\r\n\r\nimport TestUpdateView from './Test/TestUpdateView'\r\n\r\nimport AlertScreen from './Common/AlertScreen'\r\n\r\nimport {getApiUrl, screenWidth} from './Common/CommonFunction'\r\nimport LoadingView from './Common/LoadingView'\r\nimport userList  from './../Data/userList'\r\n\r\nexport default class ListScreen extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            //screen function\r\n            Button1Selected: true,\r\n            Button2Selected: false,\r\n            Button3Selected: false,\r\n            Button4Selected: false,\r\n            Button5Selected: false,\r\n            dataChanged: true,\r\n            showView: 'RequestListView',\r\n\r\n            //authentication\r\n            logIn: false,\r\n            userInfo: null,\r\n            token: '',\r\n            // logIn: true,\r\n            // userInfo: userList[0],\r\n            // token: \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIwOTg3NjU0MzIxIiwiZXhwIjoxNTg5MzY4NzQxfQ.bnmCPDa5uE30AX0WU8Wt1xrLw1HhM5EpP2csK5tNrZBCYo-C7SP6xdiEEBHlap0AwSylQOsnRKb9Dy_2psxqKw\",\r\n            \r\n            \r\n            //request\r\n            requestList: null,\r\n            requestListApi: true,\r\n            selectedRequest: null,\r\n\r\n            //appointment\r\n            appointmentList: null,\r\n            appointmentListApi: true,\r\n            selectedAppointment: null,\r\n\r\n            //article\r\n            articleList: null,\r\n            articleListApi: true,\r\n            selectedArticle : null,\r\n\r\n            //test\r\n            testList: [],\r\n            testListApi: true,\r\n            testVersion: '',\r\n            testListScreenTrigger: true,\r\n\r\n            //account\r\n            userList: null,\r\n            userListApi: true,\r\n            selectedAccount: null,\r\n\r\n            //other data\r\n            districtList: null,\r\n\r\n        };\r\n        this.loginSuccess = this.loginSuccess.bind(this)\r\n        this.logOut = this.logOut.bind(this)\r\n        this.searchRequest = this.searchRequest.bind(this)\r\n        this.menuButtonPress = this.menuButtonPress.bind(this)\r\n        this.changeShowView = this.changeShowView.bind(this)\r\n        this.setSelectedArticle = this.setSelectedArticle.bind(this)\r\n        this.setSelectedRequest = this.setSelectedRequest.bind(this)\r\n        this.setSelectedAppointment = this.setSelectedAppointment.bind(this)\r\n        this.setSelectedAccount = this.setSelectedAccount.bind(this)\r\n        this.updateUserInfo = this.updateUserInfo.bind(this)\r\n        this.searchUser = this.searchUser.bind(this)\r\n        this.changeToAccountViewScreen = this.changeToAccountViewScreen.bind(this)\r\n        \r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        // console.log(Dimensions.get('window').width)\r\n        // console.log(this.state.userInfo)\r\n        // this.callApiRequestList()\r\n        // this.callApiTestList()\r\n        // this.callApiArticleList()\r\n        // this.callApiUserList()\r\n        // this.callApiAppointmentList()\r\n        // this.callApiDistrictList()\r\n        // setInterval(()=>{\r\n        //     console.log('try again')\r\n        //     this.callApiRequestList()\r\n        //     this.callApiArticleList()\r\n        //     this.callApiUserList()\r\n        //     this.callApiAppointmentList()\r\n        // },5000)\r\n    }\r\n\r\n    changeShowView(newView){\r\n        if (newView=='RequestListView') this.menuButtonPress('1')\r\n        if (newView=='AppointmentListView') this.menuButtonPress('2')\r\n        if (newView=='ArticleListView') this.menuButtonPress('3')\r\n        if (newView=='AccountListView') this.menuButtonPress('5')\r\n        this.setState(previousState => ({ \r\n            showView: newView,\r\n        }))\r\n    }\r\n\r\n    setSelectedArticle(_article){        \r\n        this.setState(previousState => ({ \r\n            selectedArticle: _article,\r\n        }))\r\n    }\r\n\r\n    setSelectedRequest(_request){        \r\n        this.setState(previousState => ({ \r\n            selectedRequest: _request,\r\n        }))\r\n    }\r\n\r\n    setSelectedAppointment(_appointment){    \r\n        // console.log(_appointment)    \r\n        this.setState(previousState => ({ \r\n            selectedAppointment: _appointment,\r\n        }))\r\n    }\r\n\r\n    setSelectedAccount(_account){ \r\n        // console.log(_account)       \r\n        this.setState(previousState => ({ \r\n            selectedAccount: _account,\r\n        }))\r\n    }\r\n\r\n    updateUserInfo(_userInfo){\r\n        this.setState(previousState => ({ \r\n            userInfo: _userInfo,\r\n        }))\r\n    }\r\n\r\n    searchRequest(requestId){\r\n        // console.log(requestId)\r\n        let request = null\r\n        let index = this.state.requestList.length - 1;\r\n        while (index >= 0) {\r\n            // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n            if (this.state.requestList[index].requestID == requestId) {\r\n                request = this.state.requestList[index]\r\n                // console.log(request)\r\n                if(this.state.testVersion != request.versionOfTest){\r\n                    fetch(getApiUrl()+\"/tests/versions/list-all-test/\"+request.versionOfTest,{\r\n                        method: 'GET',\r\n                        headers: {\r\n                            Accept: 'application/json',\r\n                            'Content-Type': 'application/json',\r\n                            Authorization: 'Bearer '+this.state.token,\r\n                        }\r\n                    })\r\n                    .then(res => res.json())\r\n                    .then(\r\n                        (result) => {\r\n                            // console.log(result)\r\n                            let success = false\r\n                            let list = []\r\n                            result ? result.message? null : success=true : null;\r\n                            if (success)\r\n                            {\r\n                                this.changeToRequestViewScreen(request,result.lsTests)\r\n                                return false\r\n                            }\r\n                        },            \r\n                        (error) => {\r\n                            // console.log(error)\r\n                        }\r\n                    )  \r\n                }\r\n                else this.changeToRequestViewScreen(request,this.state.testList);\r\n            }\r\n            index -= 1;\r\n        }   \r\n        if (request == null) return 'Không có xét nghiệm này'     \r\n    }\r\n\r\n    changeToRequestViewScreen(_request,testList){\r\n        const request= { \r\n            \"requestId\": _request.requestID,\r\n            \"requestCreatedTime\":_request.requestCreatedTime,\r\n            \"customerName\":_request.customerName,\r\n            \"customerPhoneNumber\":_request.customerPhoneNumber,\r\n            \"customerDOB\":_request.customerDOB,\r\n            \"requestAddress\":_request.requestAddress,\r\n            \"requestDistrictName\":_request.requestDistrictName,\r\n            \"requestTownName\": _request.requestTownName,\r\n            \"requestMeetingTime\": _request.requestMeetingTime,\r\n            \"nurseName\":_request.nurseName,\r\n            \"nurseID\":_request.nurseID,\r\n            \"coordinatorName\":_request.coordinatorName,\r\n            \"coordinatorId\":_request.coordinatorID,\r\n            \"lsSelectedTest\":_request.lsSelectedTest,\r\n            \"requestAmount\":_request.requestAmount,\r\n            \"requestStatus\":_request.requestStatus,\r\n            \"requestUpdatedTime\":_request.requestUpdatedTime,\r\n            \"testList\":testList,\r\n            \"requestTestVersion\":_request.versionOfTest,\r\n            }\r\n        this.setSelectedRequest(request)\r\n        this.changeShowView('RequestView')\r\n    }\r\n\r\n    searchUser(userPhoneNumber){\r\n        // console.log(userPhoneNumber)\r\n        let account = null\r\n        let index = this.state.userList.length - 1;\r\n        while (index >= 0) {\r\n            // console.log(this.state.testListTemp[index].testTypeName+ \", \"+this.state.testListTemp[index].testTypeID)\r\n            if (this.state.userList[index].phoneNumber == userPhoneNumber) {\r\n                account = this.state.userList[index]\r\n                // console.log(account)\r\n                this.changeToAccountViewScreen(account);\r\n            }\r\n            index -= 1;\r\n        }   \r\n    }\r\n\r\n    changeToAccountViewScreen(_account){\r\n        const account= { \r\n            'accountId':_account.id, \r\n            'accountPhoneNumber':_account.phoneNumber,                      \r\n            'accountName':_account.name,\r\n            'accountDob':_account.dob,\r\n            'accountAddress':_account.address,\r\n            'accountPassword':_account.password,\r\n            'accountActive':_account.active,\r\n            'accountEmail':_account.email,\r\n            'accountRole':_account.role,\r\n            'accountGender':_account.gender,\r\n            'accountImageUrl':_account.image,\r\n            'accountTownCode':_account.townCode,\r\n            'accountDistrictCode':_account.districtCode,\r\n            }\r\n        this.setSelectedAccount(account)\r\n        this.changeShowView('AccountView')\r\n\r\n    }\r\n\r\n    loginSuccess(_userInfo,_token){\r\n        this.setState(previousState => ({ \r\n            logIn: true,\r\n            userInfo: _userInfo,\r\n            token: _token,\r\n        }))\r\n        setTimeout(() => {\r\n            this.callApiRequestList()\r\n            this.callApiTestList()\r\n            // this.callApiArticleList()\r\n            // this.callApiUserList()\r\n            // this.callApiAppointmentList()\r\n            this.callApiDistrictList()\r\n        }, 5);\r\n    }\r\n\r\n    logOut(){\r\n        this.changeShowView('RequestListView')\r\n        this.setState(previousState => ({ \r\n            logIn: false,\r\n            userInfo: null,\r\n            token: null,\r\n        }))\r\n    }\r\n\r\n    menuButtonPress(button){\r\n        if (button==\"1\") this.callApiRequestList()\r\n        if (button==\"2\") this.callApiAppointmentList()\r\n        if (button==\"3\") this.callApiArticleList()\r\n        if (button==\"4\") this.setState({testListScreenTrigger:!this.state.testListScreenTrigger})\r\n        if (button==\"5\") this.callApiUserList()\r\n        this.setState(previousState => ({ \r\n            Button1Selected: button==\"1\"?true:false,\r\n            Button2Selected: button==\"2\"?true:false,\r\n            Button3Selected: button==\"3\"?true:false,\r\n            Button4Selected: button==\"4\"?true:false,\r\n            Button5Selected: button==\"5\"?true:false,\r\n            showView:   button==\"1\"? 'RequestListView': \r\n                        button==\"2\"? 'AppointmentListView': \r\n                        button==\"3\"? 'ArticleListView':  \r\n                        button==\"4\"? 'TestUpdateView':  \r\n                        button==\"5\"? 'AccountListView': 'RequestListView'\r\n                        ,\r\n            dataChanged: !this.state.dataChanged,\r\n        }))\r\n    }\r\n\r\n\r\n    callApiRequestList= async () => {\r\n        if(this.state.requestListApi){\r\n            this.setState(previousState => ({\r\n                requestListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/requests/list-all-request\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        requestList: result,\r\n                        requestListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    // console.log(error)\r\n                    this.setState(previousState => ({\r\n                        requestListApi: true,\r\n                    }));\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    callApiAppointmentList= async () =>  {\r\n        if(this.state.appointmentListApi){\r\n            this.setState(previousState => ({\r\n                appointmentListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/appointments/list\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        appointmentList: result,\r\n                        appointmentListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    // console.log(error)\r\n                    this.setState(previousState => ({\r\n                        appointmentListApi: true,\r\n                    }));\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    callApiArticleList= async () =>  {\r\n        if(this.state.articleListApi){\r\n            this.setState(previousState => ({\r\n                articleListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/articles/list\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        articleList: result,\r\n                        articleListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    // console.log(error)\r\n                    this.setState(previousState => ({\r\n                        articleListApi: true,\r\n                    }));\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    callApiUserList= async () =>  {\r\n        if(this.state.userListApi){\r\n            this.setState(previousState => ({\r\n                userListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/users/list-all-user\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        userList: result,\r\n                        userListApi: true,\r\n                    }));\r\n                },            \r\n                (error) => {\r\n                    // console.log(error)\r\n                    this.setState(previousState => ({\r\n                        userListApi: true,\r\n                    }));\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n    \r\n    callApiTestList = async () => {\r\n        if(this.state.testListApi){\r\n            this.setState(previousState => ({\r\n                testListApi: false,\r\n            }));\r\n            fetch(getApiUrl()+\"/tests/versions/lastest-version-test/\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer '+this.state.token,\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // console.log(result)\r\n                    let success = false\r\n                    result ? result.message? null : success=true : null;\r\n                    if (success)\r\n                    this.setState(previousState => ({\r\n                        testList: result.lsTests,\r\n                        testVersion: result.versionID,\r\n                        testListApi: true,\r\n                    }));\r\n                },\r\n                (error) => {\r\n                    // console.log(error)\r\n                    this.setState(previousState => ({\r\n                        testListApi: true,\r\n                    }));\r\n                }\r\n            )  \r\n        }\r\n    }\r\n\r\n    callApiDistrictList = async () => {\r\n        fetch(getApiUrl()+\"/management/districts/district-town-list\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                // console.log(result)\r\n                let success = false\r\n                result ? result.message? null : success=true : null;\r\n                if (success)\r\n                this.setState(previousState => ({\r\n                    districtList: result,\r\n                }));\r\n            },            \r\n            (error) => {\r\n                // console.log(error)\r\n                this.callApiDistrictList()\r\n            }\r\n        )  \r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <View style={{flex:1}}>\r\n            <PageHeader userInfo={this.state.userInfo?this.state.userInfo:null} changeShowView={this.state.userInfo?this.changeShowView:null}  setSelectedAccount={this.state.userInfo?this.setSelectedAccount:null} logOut={this.state.userInfo?this.logOut:null} searchRequest={this.searchRequest}/>\r\n            { !this.state.logIn ?\r\n            <LoginView loginSuccess={this.loginSuccess}/>\r\n            // <AlertScreen/>\r\n            :\r\n            <View style={styles.listAreaContainer}>\r\n                <View style={styles.topMenu}>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? screenWidth/4 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button1Selected ? 1:0,\r\n                        backgroundColor: this.state.Button1Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('1')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Yêu cầu xét nghiệm</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? screenWidth/4 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button2Selected ? 1:0,\r\n                        backgroundColor: this.state.Button2Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('2')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Cuộc Hẹn</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? screenWidth/4 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button3Selected ? 1:0,\r\n                        backgroundColor: this.state.Button3Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('3')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Bài đăng</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? screenWidth/4 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button4Selected ? 1:0,\r\n                        backgroundColor: this.state.Button4Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('4')}\r\n                    >\r\n                        <Text style={styles.topMenuText}>Test</Text>\r\n                    </TouchableOpacity>\r\n                    {this.state.userInfo.role=='COORDINATOR'? null :\r\n                    <TouchableOpacity style={[styles.topMenuButton,{\r\n                        width: this.state.userInfo.role=='COORDINATOR'? 0 : screenWidth/parseFloat(5) ,\r\n                        borderWidth: this.state.Button5Selected ? 1:0,\r\n                        backgroundColor: this.state.Button5Selected ? '#a8c6fa' : 'white' \r\n                        }]}\r\n                        onPress={() => this.menuButtonPress('5')}\r\n                        >\r\n                        <Text style={styles.topMenuText}>Quản lý tài khoản</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                </View>                \r\n                <View style={{width:'100%',flex:1,backgroundColor:''}}>\r\n                {\r\n                //request\r\n                this.state.showView == 'RequestView'?\r\n                <RequestView  request={this.state.selectedRequest} testList={this.state.testList} userInfo={this.state.userInfo} changeShowView={this.changeShowView} setSelectedRequest={this.setSelectedRequest} token={this.state.token} changeToAccountViewScreen={this.changeToAccountViewScreen} changeToRequestViewScreen={this.changeToRequestViewScreen}/>\r\n                : this.state.showView == 'RequestResultView'?\r\n                <RequestResultView  request={this.state.selectedRequest} changeShowView={this.changeShowView} token={this.state.token} />\r\n                : this.state.showView == 'RequestLostSampleView'?\r\n                <RequestLostSampleView  request={this.state.selectedRequest} userInfo={this.state.userInfo} changeShowView={this.changeShowView} setSelectedRequest={this.setSelectedRequest} token={this.state.token} changeToRequestViewScreen={this.changeToRequestViewScreen}/>\r\n                : this.state.showView == 'RequestUpdateResultView'?\r\n                <RequestUpdateResultView  request={this.state.selectedRequest} userInfo={this.state.userInfo} changeShowView={this.changeShowView} setSelectedRequest={this.setSelectedRequest} token={this.state.token} changeToRequestViewScreen={this.changeToRequestViewScreen}/>\r\n                //appointment\r\n                : this.state.showView == 'AppointmentView'?\r\n                <AppointmentView  appointment={this.state.selectedAppointment} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token} setSelectedAppointment={this.setSelectedAppointment}/>\r\n                : this.state.showView == 'AppointmentRejectView'?\r\n                <AppointmentRejectView appointment={this.state.selectedAppointment} userInfo={this.state.userInfo} changeShowView={this.changeShowView} token={this.state.token} setSelectedAppointment={this.setSelectedAppointment}/>\r\n                //article\r\n                : this.state.showView == 'ArticleAddView'?\r\n                <ArticleAddView   token={this.state.token}  userInfo={this.state.userInfo} changeShowView={this.changeShowView} />\r\n                : this.state.showView == 'ArticleView'?\r\n                <ArticleView  article={this.state.selectedArticle} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo}/>\r\n                //account\r\n                : this.state.showView == 'AccountCreateView'?\r\n                <AccountCreateView  districtList={this.state.districtList} token={this.state.token} changeToAccountViewScreen={this.changeToAccountViewScreen} />\r\n                : this.state.showView == 'AccountView'?\r\n                <AccountView  districtList={this.state.districtList}  account={this.state.selectedAccount} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo} changeToAccountViewScreen={this.changeToAccountViewScreen}/>\r\n                : this.state.showView == 'AccountChangePasswordView'?\r\n                <AccountChangePasswordView account={this.state.selectedAccount} changeShowView={this.changeShowView} token={this.state.token} userInfo={this.state.userInfo} />\r\n                \r\n                : this.state.showView == 'RequestListView'? this.state.requestListApi?\r\n                <RequestListView requestList={this.state.requestList} testVersion={this.state.testVersion} changeShowView={this.changeShowView} setSelectedRequest={this.setSelectedRequest} districtList={this.state.districtList} token={this.state.token} testList={this.state.testList}/>: <LoadingView  />\r\n                : this.state.showView == 'AppointmentListView'? this.state.appointmentListApi?\r\n                <AppointmentListView appointmentList={this.state.appointmentList} changeShowView={this.changeShowView} setSelectedAppointment={this.setSelectedAppointment} districtList={this.state.districtList}/>: <LoadingView  />\r\n                : this.state.showView == 'ArticleListView'? this.state.articleListApi?\r\n                <ArticleListView  articleList={this.state.articleList} changeShowView={this.changeShowView} setSelectedArticle={this.setSelectedArticle}/>: <LoadingView  />\r\n                : this.state.showView == 'TestUpdateView'?\r\n                <TestUpdateView  testList={this.state.testList} userInfo={this.state.userInfo} token={this.state.token} testListScreenTrigger={this.state.testListScreenTrigger}/>\r\n                : this.state.showView == 'AccountListView'? this.state.userListApi?\r\n                <AccountListView userList={this.state.userList}  changeShowView={this.changeShowView} setSelectedAccount={this.setSelectedAccount} searchUser={this.searchUser}/>: <LoadingView  />                    \r\n                : <View/>\r\n                    \r\n                }\r\n                </View>\r\n                <PageFooter/>\r\n            </View>\r\n            }\r\n        </View>\r\n    );\r\n    }\r\n}\r\n\r\nconst menuHeight= 50\r\n\r\nconst styles = StyleSheet.create({\r\n    listAreaContainer: {\r\n        flex: 1,\r\n        width: screenWidth,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '',\r\n    },\r\n    topMenu:{\r\n        height: menuHeight,\r\n        width: screenWidth,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor:'white'\r\n    },\r\n    topMenuButton:{\r\n        width: screenWidth/parseFloat(5),\r\n        height: menuHeight,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    topMenuText:{\r\n        fontSize:18,\r\n    }\r\n\r\n});\r\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport ListScreen from './components/ListScreen'\n\nexport default function App() {\n  return (\n      <ListScreen/>\n    // <View style={styles.container}>\n    //   <Text>Open up App.js to start working on your app!</Text>\n    // </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/MedTestForCoordinator/expo-service-worker.js', { scope: '/MedTestForCoordinator/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}